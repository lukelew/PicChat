{"version":3,"sources":["header/login.jsx","header/logout.jsx","header/register.jsx","addTopic/uploadImage.tsx","addTopic/index.tsx","header/index.jsx","emoji/index.tsx","topicList/card.tsx","topicList/index.tsx","topicDetail/sub-replies.tsx","topicDetail/replies.tsx","topicDetail/index.tsx","leaderboard/index.tsx","topic/index.tsx","user/mypost.tsx","user/notifications.tsx","user/menu.tsx","user/index.tsx","footer/index.tsx","App.tsx","index.tsx"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClose","setState","visible","isLogin","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","compareToUserEmail","rule","value","callback","post_data","email","fetch","process","method","body","JSON","stringify","headers","Headers","Content-Type","then","res","text","data","parse","status","postData","state","password","json","message","error","user","login_username","name","window","location","reload","success","result","target","getFieldDecorator","path","pathname","query","id","react_default","a","createElement","react_router","to","drawer","title","width","es_form","onSubmit","className","Item","hasFeedback","rules","required","type","validator","input","prefix","icon","style","color","placeholder","onChange","handleChangeEmail","bind","Password","handleChangePassword","es_button","htmlType","onClick","React","Component","Form","create","Logout","logout","isLogout","Fragment","Register","cancel","compareToUserName","handleConfirmBlur","confirmDirty","compareToFirstPassword","getFieldValue","validateToNextPassword","force","avatar","isRegister","login","Vertified","returnHome","changeAvatar","newAvatar","closeAvatar","showAvatar","_this2","avatarUrl","avatarList","_loop","i","push","key","size","src","subTitle","extra","assign","labelCol","xs","span","sm","wrapperCol","label","display","whitespace","handleChangeName","min","onBlur","divider","href","UploadImage","showModal","postTopic","url","topicId","update","originalPicUrl","img_url_original","smallPicUrl","img_url_small","topic_id","replyTo","fileList","hideModal","handleCancel","info","toConsumableArray","slice","file","response","modal","boxHeader","okText","onOk","onCancel","upload","action","onImageUpload","prevProps","AddTopic","upload_props","uploadImage","PureComponent","Header","menu","react_router_dom","header_logout","avartarUrl","src_addTopic","dropdown","overlay","badge","count","offset","userName","component","MyIcon","Icon","createFromIconfontCN","scriptUrl","ReactPanel","updateReacts","deleteReacts","reactToTopic","emoji","curReact","yourReact","react_id","_id","Content-type","deleteId","newReact","types","prevReact","EmojiList","map","popover","content","placement","theme","twoToneColor","fontSize","Card","reacts","showUploadModal","showUploadModalReply","exist","updatedReacts","length","currentState","concat","updatedReact","splice","showModalReply","handleCancelUploadReply","handleCancelUpload","handleDeleteTopic","currentTopic","replies","setTimeout","settingMenu","createAt","substr","alt","react","card_MyIcon","src_emoji_0","TopicList","showFromNewtoOld","page","reset","isLoading","topics","sort","tags","canLoad","pageSize","showFromOldtoNew","showFromLowtoHigh","showFromHightoLow","loadMore","currentUser","recentMenu","popluarMenu","topicList","topic","topicList_card","createBy","tag","spin","tip","Subreplies","sub_replies_MyIcon","Replies","repliesList","reply","sub_replies","replies_MyIcon","TopicDetail","match","params","curTopic","_this3","topicDetail_MyIcon","empty","image","Empty","PRESENTED_IMAGE_SIMPLE","description","LeaderBoard","filter","userList","showMostReacts","showMostTopics","list","dataSource","renderItem","item","Meta","reactTimes","topicTimes","Sider","Layout","Content","TopicPanel","layout","exact","render","src_topicList_0","breakpoint","collapsedWidth","reverseArrow","src_leaderboard","MyPosts","Notification","notifications","itemLayout","fromUser","notifications_MyIcon","atTopic","UserPanelMenu","defaultSelectedKeys","mode","selectedKeys","UserPanel","user_Sider","background","user_Content","mypost","Footer","App","getLoginUser","affix","src_header","src_user","src_topic","back_top","src_footer","ReactDOM","src_App_0","document","querySelector"],"mappings":"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","file":"static/js/main.e2576581.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon, Input,Drawer,message} from 'antd';\nimport './login.scss';\nimport 'antd/dist/antd.css';\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { \n        isLogin: false,\n        login_username: '',\n        visible: true,\n        email:'',\n        password:'',\n\n        result:'', //database search result\n    };\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n      isLogin: true,\n    });\n\n  };\n\n  handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n          if (!err) {\n              console.log('Received values of form: ', values);\n          }\n      })\n  };\n\n  //judge email whether exists\n  handleChangeEmail(e){\n      this.setState({\n          email: e.target.value\n      })\n  };\n  compareToUserEmail = (rule, value, callback) =>{\n    let url = process.env.REACT_APP_API_URL + '/users/verifyEmail';\n    let post_data = { \n        email: value,\n    };\n    fetch(url,{\n        method:'POST',\n        body: JSON.stringify(post_data),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })\n    }).then(res=>res.text().then(\n        data=>{\n            var dataBack=JSON.parse(data);\n                //register email judge\n                if(dataBack.status===\"failure\"){\n                    callback();\n                }\n                else {\n                    callback('This E-mail do not exist.');\n                }\n        }\n    ))\n}\n\n  handleChangePassword(e){\n      this.setState({\n          password: e.target.value\n      })\n  };\n\n  //Post_data_login\n    postData = () => {\n        let url = process.env.REACT_APP_API_URL +'/users/login';\n        let post_data = { \n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.form.validateFields(err => {\n            if (!err) {\n            fetch(url,{\n                method:'POST',\n                body: JSON.stringify(post_data),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(\n                    res=>res.json()\n                )\n            .then(\n                    data=>{\n                        if(data.status==='failure'){\n                            message.error(data.message+'!Please try again!')\n                        }\n                        else if(data.user.email===this.state.email){\n                            this.setState({\n                                isLogin: true,\n                                login_username: data.user.name\n                            });\n                            window.location.reload();\n                            // message.success('Login Success',3);\n                        }else{\n                            this.setState({\n                                isLogin: false\n                            });\n                            message.success('Login False');\n                            window.location.reload();\n                        } \n                    }\n                )\n           }\n        }); \n    };\n\nrender() {\n    const { getFieldDecorator } = this.props.form;\n\n    //pass user's data\n    var datapass={name: this.state.login_username,email: this.state.email,id:'',status: true}\n    var path={\n        pathname: '/',\n        query: datapass\n    };\n    \n    if(this.state.isLogin){\n        return <Redirect to= {path}/> \n    }\n    else{\n        return (\n            <div id='login'>\n                <div id='login_form'>\n                    <Drawer\n                        title=\"Login\"\n                        width={360}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\" >\n                        {/*login_email */}\n                        <Form.Item  hasFeedback>\n                            {getFieldDecorator('eamil', {\n                                rules: [\n                                    {required: true, message: 'Please input your email.'},\n                                    {type: 'email', message: 'Please input email‘s format!' },\n                                    {validator: this.compareToUserEmail}],\n                              })(\n                                <Input\n                                    prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Email\"\n                                    onChange={this.handleChangeEmail.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_password*/}\n                        <Form.Item  hasFeedback>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: 'Please input your Password!' }],\n                            })(\n                                <Input.Password\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={this.handleChangePassword.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_submit*/}\n                        <Form.Item>\n                          {/* <a className=\"login-form-forgot\" href=\"/register\">Forgot password?</a> */}\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.postData}>Login</Button>\n\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                </div>\n            </div>\n        );\n    }\n  }\n};\nexport default Form.create()(Login);","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { message, Button} from 'antd';\nimport { Redirect } from 'react-router';\nimport './logout.scss';\n\n\nclass Logout extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            isLogout: false,\n            login_username: '',\n            email:'',\n        };\n    }\n\n\n    logout=()=>{\n        let url = process.env.REACT_APP_API_URL + '/users/logout';\n        fetch(url,{\n            method:'Get',\n            }).then(res=>res.json()).then(\n                data=>{\n                    console.log(data);\n                    this.setState({\n                        isLogout: true,\n                    })\n                    message.success('Login success');\n                    window.location.reload();\n                    console.log('logout success',this.state.isLogout)\n                }\n            )\n    };\n    render(){\n        if(this.state.isLogout)\n        {   \n            var path={pathname:'/'};\n            return <Redirect to= {path}/>\n        }\n        else{\n            return(\n                <React.Fragment>\n                    <Button id=\"logout_button\" onClick={this.logout} type=\"link\" icon=\"logout\">Logout</Button>\n                </React.Fragment>\n            );\n        }\n\n    }\n}\nexport default Logout;\n    \n\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon,Input,Drawer,Avatar,Result, Divider,message} from 'antd';\nimport './register.scss';\nimport 'antd/dist/antd.css';\n\n// import Check_Login from './checkLogin'\n\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            email: '',\n            name: '',\n            password: '',\n            avatar: 1,\n\n            showAvatar: 'none',\n            closeAvatar:'',\n\n            confirmDirty: false,\n            visible: true,\n            cancel: false, //back to home page\n            isRegister: false, //register success\n            returnHome: false, //after register success, return home\n            // blur: false,\n        };\n    }\n    \n    onClose = () => {\n        this.setState({\n        visible: false,\n        cancel: true\n        });\n    };\n\n    \n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n          }\n        });\n      };\n\n    //judge name whether exists\n    handleChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        })\n    };\n    compareToUserEmail = (rule, value, callback) =>{\n        let url = process.env.REACT_APP_API_URL + '/users/verifyEmail';\n        let post_data = { \n            email: value,\n        }\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>res.text().then(\n            data=>{\n                var dataBack=JSON.parse(data);\n                //register email judge\n                if(dataBack.status===\"failure\"){\n                    callback('This E-mail already existed.');\n                }\n                else {\n                    callback();\n                }\n            }\n        ))\n    }\n\n\n    //judge name whether exists\n    handleChangeName(e){\n        this.setState({\n            name: e.target.value\n        })\n    };\n\n    compareToUserName = (rule, value, callback) =>{\n\n        let url = process.env.REACT_APP_API_URL + '/users/verifyUsername';\n        let post_data = { \n            // email: this.state.email,\n            name: value,\n        };\n\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>\n                res.text().then(\n                    data=>{\n                        var dataBack=JSON.parse(data);\n                        //register username judge\n                            if(dataBack.status===\"failure\"){\n                                callback('This username already existed.');\n                            }\n                            else {\n                                callback();\n                            }\n                    } \n                )     \n            )\n\n    }\n\n    //judge confirm password\n    \n    handleChangePassword(e){\n        this.setState({\n            password: e.target.value\n        })\n    };\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    \n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Not the same passowrd!');\n        } else {\n          callback();\n        }\n    };\n    \n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      };\n    \n    //Post_data_register\n    postData = () => {\n        let url = process.env.REACT_APP_API_URL + '/users/register';\n        let post_data = { \n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password,\n            avatar: this.state.avatar\n        };\n        this.props.form.validateFields(err => {\n            if (!err) {\n                //post register user info\n                fetch(url,{\n                    method:'POST',\n                    body: JSON.stringify(post_data),\n                    headers: new Headers({\n                    'Content-Type': 'application/json'\n                    })\n                }).then(res=>res.text().then(\n                    data=>{\n                        var dataBack=JSON.parse(data);\n                        //register status and email address vertify\n                        if(dataBack.status===\"success\"){\n                            this.setState({\n                                isRegister: true,\n                            })\n                            console.log(this.state.isRegister,'in')\n                        }\n                    }\n                ))              \n            }\n        }); \n    };\n    //login if register success\n    login = () => {\n        let url = process.env.REACT_APP_API_URL +'/users/login';\n        let post_data = { \n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.form.validateFields(err => {\n            if (!err) {\n            fetch(url,{\n                method:'POST',\n                body: JSON.stringify(post_data),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(\n                    res=>res.json()\n                )\n            .then(\n                    data=>{\n                        if(data.status==='failure'){\n                            message.error(data.message+'!Please try again!')\n                        }else{\n                            window.location.reload();\n                        } \n                    }\n                )\n           }\n        }); \n    };\n\n\n    //control vertify page\n    Vertified=()=>{\n        this.setState({\n            visible: false,\n            returnHome: true,\n        })\n        this.login();\n    }\n    \n    //change avatar\n    changeAvatar = (newAvatar)=>{\n        this.setState({\n            avatar: newAvatar,\n            closeAvatar:'',\n            showAvatar:'none'\n        })\n    }\n\n    showAvatar=()=>{\n        this.setState({\n            closeAvatar: 'none',\n            showAvatar:''\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const avatarUrl= '../avatars/'+this.state.avatar+'.png';\n\n        const avatarList = [];\n        for(let i=1; i<=16; i++){\n            avatarList.push(<Avatar key={i} size=\"64\" src={'../avatars/'+ i +'.png'} onClick={() => this.changeAvatar(i)} />)\n        }\n\n\n        const formItemLayout = {\n            labelCol: {\n              xs: { span: 24 },\n              sm: { span: 8 },\n            },\n            wrapperCol: {\n              xs: { span: 24 },\n              sm: { span: 16 },\n            },\n          };\n        var datapass={name: this.state.name,email: this.state.email,id:'',status: true}\n        var path={\n            pathname: '/',\n            query: datapass,\n        };\n        if(this.state.returnHome){\n            return ( <Redirect to= {path}/> )    \n        }else if(this.state.isRegister){\n            return(\n                    <div id='successRegister'>\n                        <Drawer\n                            title=\"Register\"\n                            width={460}\n                            onClose={this.onClose}\n                            visible={this.state.visible}\n                        >\n                            <Result\n                                status=\"success\"\n                                title=\"Well done^.^! Register success!\"\n                                subTitle=\"Welcome to UTS picChat community! You can post your interesting picture and react others now!\"\n                                extra={[\n                                <Button type=\"primary\" onClick={this.Vertified} size=\"large\">Continue</Button>,\n                                ]}\n                            />\n                        </Drawer>\n                    </div>\n            )  \n        }\n        else {\n            return(\n                <div id='register'>\n                    <Drawer\n                        title=\"Register\"\n                        width={460}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    \n                    <Form onSubmit={this.handleSubmit} className=\"register-form\" {...formItemLayout}>\n                        <Form.Item label=\"Avatar:\" hasFeedback>\n                        \n                        <div id=\"avatarN\" style={{display: this.state.showAvatar}} className=\"notChosen\">\n                            {avatarList}\n                        </div>\n                        <div id=\"avatarY\" style={{display: this.state.closeAvatar}} className=\"isChosen\">\n                            <Avatar id=\"1\" size={64} src={avatarUrl} onClick={this.showAvatar}/>\n                        </div>\n\n                        </Form.Item>\n\n                        {/* enter Email */}\n                        <Form.Item label=\"E-mail\" hasFeedback>\n                        {getFieldDecorator('eamil', {\n                            rules: [\n                                { required: true,message: 'Please input your email！'},\n                                { type:'email',message: 'Please input email‘s format！'},\n                                { whitespace: true, message:'Cannot accept whitespace at first letter.'},\n                                {validator: this.compareToUserEmail}],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"E-mail\"\n                            onChange={this.handleChangeEmail.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Name */}\n                        <Form.Item label=\"User Name\" hasFeedback >\n                        {getFieldDecorator('Name', {\n                            rules: [\n                                { required: true, message: 'Please input your name!'},\n                                // { min: 3, message: 'The minimum letter is 3!'},\n                                { whitespace: true, message:'Cannot accept whitespace at first letter. '},\n                                { validator: this.compareToUserName}],\n                            // ],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"User Name\"\n                            // onBlur={this.blurChange}\n                            onChange={this.handleChangeName.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Password */}\n                        <Form.Item label=\"Password\" hasFeedback>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                { required: true, message:'You need to setting password'}, \n                                {min: 6, message: 'Minimum 6 letter' },\n                            {validator: this.validateToNextPassword}],\n                        })(\n                            <Input.Password\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChangePassword.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* confirm Password */}\n                        <Form.Item label=\"Confirm\" hasFeedback>\n                        {getFieldDecorator('confirm', {\n                            rules: [{required: true},{min:6,message:'Minimum 6 Letters！'},\n                            {\n                                validator: this.compareToFirstPassword,\n                            }\n                            ],\n                        })(<Input.Password onBlur={this.handleConfirmBlur} placeholder=\"Password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}/>) }\n                        </Form.Item>\n                        \n                        <Form.Item>\n                        <Button size=\"large\" type=\"primary\" htmlType=\"submit\" className=\"register-form-button\" onClick={this.postData}>\n                            Register\n                        </Button>\n                        <Divider className=\"divider\"></Divider>\n                        <a href=\"/login\" id=\"login_register\" className=\"login_text\">Login Now</a>\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                    </div>\n                    );\n            }\n\n    }\n};\nexport default Form.create()(Register);","import React from \"react\";\nimport {Modal, Upload, message, Button, Icon} from 'antd';\nimport './index.scss';\n\ninterface IUploadImageState {\n    visible: boolean;\n    img_url_original: string;\n    img_url_small: string;\n    fileList: any[];\n    topicId?: String;\n}\n\ninterface IUploadImageProps {\n    showModal: boolean,\n    hideModal: Function,\n    boxHeader: String,\n    topicId?: String,\n    update?: boolean\n}\n\nclass UploadImage extends React.Component<IUploadImageProps, IUploadImageState> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false,\n            img_url_original: '',\n            img_url_small: '',\n            fileList:[],\n            topicId: this.props.topicId\n          }\n        }\n\n        onImageUpload(info: any) {\n            let fileList = [...info.fileList];\n            fileList = fileList.slice(-1);\n            this.setState({\n              fileList: [...fileList]\n            });\n      \n            if (info.file.status !== 'uploading') {\n            }\n            if (info.file.status === 'done') {\n              this.setState({\n                img_url_original: info.file.response[0],\n                img_url_small: info.file.response[1]\n              });\n              message.success(`File uploaded successfully!`);\n            } else if (info.file.status == 'error') {\n              message.error(`The image contains text/unappropriate content and can't be uploaded.`);\n            }\n          };\n      \n          showModal = () => {\n              this.setState({\n                visible: true,\n              });\n            };\n        \n            postTopic = () => {\n              let url = '';\n              let post_data;\n\n              if (this.state.topicId)\n              {\n                if (this.props.update == true)\n                {\n                  url = process.env.REACT_APP_API_URL +'/topics';\n                  post_data = {\n                    originalPicUrl: this.state.img_url_original,\n                    smallPicUrl: this.state.img_url_small, \n                    topic_id: this.state.topicId};\n                }\n                else\n                {\n                  url = process.env.REACT_APP_API_URL +'/topics/reply';\n                  post_data = {\n                    originalPicUrl: this.state.img_url_original, \n                    replyTo: this.state.topicId};\n                }\n              }\n              else\n              {\n                url = process.env.REACT_APP_API_URL +'/topics';\n                post_data = {\n                  originalPicUrl: this.state.img_url_original, \n                  smallPicUrl: this.state.img_url_small,\n                };\n              }\n\n              console.log(post_data);\n\n              if (this.props.update == true) {\n                fetch(url, {\n                  method:'PUT',\n                  body: JSON.stringify(post_data),\n                  headers: new Headers({\n                      'Content-Type': 'application/json'\n                    })\n                  }).then(res=>res.json()).then(\n                      data=>{\n                    console.log(data);\n                  }\n                )\n              } else {\n                fetch(url, {\n                  method:'POST',\n                  body: JSON.stringify(post_data),\n                  headers: new Headers({\n                      'Content-Type': 'application/json'\n                    })\n                  }).then(res=>res.json()).then(\n                      data=>{\n                    console.log(data);\n                  }\n                )\n              }\n\n              this.setState({\n                visible: false,\n                fileList:[]\n              });\n\n              this.props.hideModal();\n      \n              //TODO: change this refresh with the component update\n              window.location.reload();\n            };\n        \n            handleCancel = () => {            \n              this.props.hideModal();\n  \n              this.setState({\n                fileList: [],\n                visible: false\n              });\n            };\n\n    render() {\n        return (\n            <div className=\"modal_window\">\n            <Modal\n              title={this.props.boxHeader}\n              visible={this.state.visible}\n              okText=\"Upload\"\n              onOk={() => {this.postTopic()}}\n              onCancel={this.handleCancel}\n            >\n                <div className=\"image_upload\">\n                <Upload name=\"image\"\n                        action={process.env.REACT_APP_API_URL + '/images/upload'}                      \n                        onChange={(info) => {this.onImageUpload(info);}}\n                        fileList={this.state.fileList}\n                        >\n                    <Button>\n                    <Icon type=\"upload\" /> Click to upload image\n                    </Button>\n                </Upload>\n                </div>                \n            </Modal> \n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps: IUploadImageProps) {\n        if (prevProps.showModal != this.props.showModal)\n        {\n            this.setState({\n                visible: this.props.showModal\n            });\n        }    \n        \n        if (prevProps.topicId != this.props.topicId)\n        {\n          this.setState({\n            topicId: this.props.topicId\n          });\n        }\n    }\n}\n\nexport default UploadImage;\n\n\n\n","import React from \"react\";\nimport { Icon } from 'antd';\nimport './index.scss';\nimport UploadImage from \"./uploadImage\";\n\ninterface IAddTopicState {\n    visible: boolean;\n}\n\nclass AddTopic extends React.PureComponent<{}, IAddTopicState> {\n    upload_props: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false\n          }\n        }\n\n    showModal = () => {\n        this.setState({\n          visible: true\n        });\n      };  \n\n      handleCancel = () => {\n        this.setState({\n          visible: false\n        });\n      };\n  \n      render() {\n        return (\n          <div id=\"add_topic\">\n              <div id=\"add_button\" onClick={ this.showModal }>\n                <Icon type=\"plus\"/>\n              </div>\n            <UploadImage \n              showModal={ this.state.visible } \n              hideModal={ this.handleCancel } \n              boxHeader=\"Upload new picture to start new topic\"/>\n          </div>\n        );\n      }\n}\n\nexport default AddTopic;","import {Route, BrowserRouter, Link}from 'react-router-dom';\nimport './header.scss';\nimport React from 'react';\nimport Login from './login';\nimport Logout from './logout'\nimport Register from './register';\nimport AddTopic from '../addTopic';\nimport { Menu, Dropdown, Avatar, Button, Badge } from 'antd';\n\nclass Header extends React.Component {\n\n    menu=(\n        <Menu>\n            <Menu.Item key=\"1\">\n                <Link to=\"/user\"><Button type=\"link\" icon=\"picture\">My posts</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n                <Link to=\"/user/notifications\"><Button type=\"link\" icon=\"notification\">Notifications</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n                <Link to=\"/user/setting\"><Button type=\"link\" icon=\"setting\">Setting</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n                <Logout ></Logout>\n            </Menu.Item>\n        </Menu>\n    );\n\n\n    render(){\n        if (this.props.isLogin) {\n            const avartarUrl = '../avatars/' + this.props.avatar+'.png'\n            return(\n                <div id='header'>\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <AddTopic />\n                    <div id='user_menu'>\n                        <Dropdown overlay={this.menu}>\n                            <div id=\"user_info\">\n                                <Badge count={0} offset={[0,2]} >\n                                    <Avatar size={40} src={avartarUrl}/>\n                                </Badge>\n                                <span className=\"name\">{this.props.userName}</span>\n                            </div>\n                        </Dropdown>\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div id=\"header\">\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <AddTopic />\n                    <div id='login'>\n                    <BrowserRouter>\n                        <Link to =\"/login\" className=\"login\">Login</Link>\n                        <Link to =\"/register\" className=\"register\">Register</Link>\n                        <div>\n                            <Route path=\"/login\" component={Login}/>\n                            <Route path=\"/register\" component={Register}/>\n                        </div>\n                    </BrowserRouter>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Icon, Popover, message } from 'antd';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface ReactPanelProps {\n\ttopicId: string,\n\tyourReact: any,\n\tupdateReacts: any,\n\tdeleteReacts: any\n}\ninterface ReactPanelState {\n\tyourReact: any,\n\ttypes: Array<string>\n}\n\nclass ReactPanel extends React.Component<ReactPanelProps, ReactPanelState>{\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tyourReact: this.props.yourReact,\n\t\t\ttypes: ['a', 'baiyan', 'aixin', 'daxiao', 'fadai', 'ganga', 'hanyan', 'liulei', 'xiaochulei', 'shengqi', 'feiwen', 'huaixiao', 'santiaoxian', 'yiwen', 'siliao']\n\t\t}\n\t}\n\n\tupdateReacts = this.props.updateReacts();\n\tdeleteReacts = this.props.deleteReacts();\n\n\tcomponentDidUpdate(prevReact: ReactPanelProps){\n\t\tif (this.props.yourReact !== prevReact.yourReact) {\n\t\t\tthis.setState({\n\t\t\t\tyourReact: this.props.yourReact\n\t\t\t})\n\t\t}\t\n\t}\n\n\treactToTopic = (to: string, emoji: string) => {\n\t\tconst curReact = this.state.yourReact;\n\t\t// add new react\n\t\tif (!curReact) {\n\t\t\tconst data = {\n\t\t\t\ttopic_id: to,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure'){\n\t\t\t\t\tmessage.error('You need to login to react');\n\t\t\t\t}\n\t\t\t\t// Already logged in \n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t// delete the react\n\t\telse if (curReact.emoji === emoji ) {\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tyourReact: \"\"\n\t\t\t\t})\n\t\t\t\tthis.deleteReacts(data.deleteId);\n\t\t\t\tmessage.success('React Deleted Successfully');\n\t\t\t})\n\t\t}\n\t\t// update current react\n\t\telse {\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure') {\n\t\t\t\t\tconsole.log('not login yet');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Updated Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst EmojiList = (\n\t\t\t<div className=\"emoji_box\">\n\t\t\t\t{this.state.types.map(emoji => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={emoji} className={this.state.yourReact.emoji === emoji ? 'isActive' : ''} onClick={() => this.reactToTopic(this.props.topicId, emoji)}>\n\t\t\t\t\t\t\t<MyIcon type={'icon-' + emoji} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\n\t\treturn (\n\t\t\t<Popover title=\"React\" content={EmojiList} placement=\"bottom\">\n\t\t\t\t<Icon className=\"add_react\" type=\"smile\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} />\n\t\t\t</Popover>\n\t\t)\n\t}\n}\n\nexport default ReactPanel;","import React from 'react';\nimport { Link }from 'react-router-dom';\nimport { Avatar, Icon, Menu, Dropdown, message } from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadBox from '../addTopic/uploadImage';\nimport './card.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '/iconfont.js'\n});\n\ninterface cardProps {\n\tuser?: any,\n\tsmallPicUrl: string,\n\tname: string,\n\tavatar: number,\n\ttopicId: string,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface cardState {\n\treacts: Array<any>,\n\tshowUploadModal: boolean,\n\tshowUploadModalReply: boolean\n}\n\n\nclass Card extends React.Component<cardProps, cardState>  {\n\tstate ={\n\t\treacts: this.props.reacts,\n\t\tshowUploadModal: false,\n\t\tshowUploadModalReply: false\n\t}\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++){\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif(exist){\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\t\n\t}\n\n\tdeleteReacts = (deleteId: string) =>{\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++){\n\t\t\tif (updatedReact[i]._id === deleteId){\n\t\t\t\tupdatedReact.splice(i,1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n        this.setState({\n          showUploadModal: true\n        });\n\t  };  \n\t  \n\t showModalReply = () => {\n        this.setState({\n          showUploadModalReply: true\n        });\n\t  }; \n\t  \n\thandleCancelUploadReply = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModalReply: false\n\t\t});\n\t};\n\n\thandleCancelUpload = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModal: false\n\t\t});\n\t};\n\n\thandleDeleteTopic = () => {\n\t\tconst currentTopic = {\n\t\t\ttopic_id: this.props.topicId\n\t\t}\n\t\tif(this.props.replies.length == 0) {\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/topics/', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(currentTopic)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === 'success'){\n\t\t\t\t\tmessage.success('Delete Successfully!')\n\t\t\t\t\tvar jump = setTimeout(function () { window.location.reload()}, 2000);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\tmessage.error('You can\\'t delete this topic')\n\t\t}\n\n\t}\n\n\trender() {\n\n\t\tconst settingMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item onClick={() => this.showModalReply()}>\n\t\t\t\t\t<Icon type=\"redo\"/>Update\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item onClick={() => this.handleDeleteTopic()}>\n\t\t\t\t\t<Icon type=\"delete\" />Delete\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"header_panel\">\n\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} size={40}/>\n\t\t\t\t\t\t<div className=\"name_date\">\n\t\t\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.props.user.name === this.props.name && \n\t\t\t\t\t\t<div className=\"settings\">\n\t\t\t\t\t\t\t<Dropdown overlay={settingMenu} placement=\"bottomCenter\">\n\t\t\t\t\t\t\t\t<Icon type=\"more\" />\n\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>\n\t\t\t\t\t\t<img src={this.props.smallPicUrl} alt={this.props.smallPicUrl}/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interact_box\">\n\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t<div className=\"current_reacts\">\n\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts}/>\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} onClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{this.props.replies.length > 0 &&\n\t\t\t\t\t<div className=\"replies\">\n\t\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>{this.props.replies.length} replies</Link>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModal } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUpload }\n\t\t\t\t\t\t   boxHeader=\"Upload new picture to reply on topic\"\n\t\t\t\t\t\t   topicId={this.props.topicId}/>\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModalReply } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUploadReply }\n\t\t\t\t\t\t   boxHeader=\"Update picture\"\n\t\t\t\t\t\t   topicId={this.props.topicId}\n\t\t\t\t\t\t   update={true}/>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './card';\nimport { Button, Menu, Dropdown, Tag, Icon, Spin } from 'antd';\nimport './index.scss';\n\n\ninterface topicListProps {\n\tuser: object\n}\n\ninterface topicListState {\n\tisLoading: boolean,\n\tsort: number,\n\ttopics: Array<any>,\n\ttags: string,\n\tpageSize: number,\n\tpage: number,\n\tcanLoad: boolean\n}\n\nclass TopicList extends React.Component<topicListProps, topicListState> {\n\tconstructor(props: any){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tsort: 1,\n\t\t\ttopics: [],\n\t\t\ttags: 'From New to Old',\n\t\t\tpageSize: 4,\n\t\t\tpage: 0,\n\t\t\tcanLoad: true\n\t\t}\n\t}\n\n\tshowFromNewtoOld = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif(reset){\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=1&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tsort: 1,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From New to Old',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromOldtoNew = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=2&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tsort: 2,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From Old to New',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromLowtoHigh = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=3&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tsort: 3,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From Low to High',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromHightoLow = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=4&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tsort: 4,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From High to Low',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\t\n\tloadMore = (sort: number) => {\n\t\tswitch (sort) {\n\t\t\tcase 1:\n\t\t\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.showFromOldtoNew(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.showFromLowtoHigh(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.showFromHightoLow(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\tcomponentDidMount() {\n\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, true)\n\t}\n\n\trender() {\n\t\tconst currentUser = this.props.user;\n\t\tconst recentMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={ ()=>this.showFromNewtoOld( this.state.pageSize, 0, true) }>New to Old</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={ ()=>this.showFromOldtoNew( this.state.pageSize, 0, true) }>Old to New</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\tconst popluarMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={() => this.showFromLowtoHigh( this.state.pageSize, 0, true) }>Low to High</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={() => this.showFromHightoLow( this.state.pageSize, 0, true)}>High to low</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\tconst topicList = this.state.topics.map( topic => {\n\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tuser={currentUser}\n\t\t\t\t\t\tkey={topic._id}\n\t\t\t\t\t\tsmallPicUrl={topic.smallPicUrl} \n\t\t\t\t\t\tname={topic.createBy.name} \n\t\t\t\t\t\tavatar={topic.createBy.avatar}\n\t\t\t\t\t\tcreateAt={topic.createAt}\n\t\t\t\t\t\ttopicId={topic._id}\n\t\t\t\t\t\treplies={topic.replies}\n\t\t\t\t\t\treacts={topic.reacts}\n\t\t\t\t\t\tyourReact={topic.yourReact ? topic.yourReact : '' }\n\t\t\t\t\t/>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"topic_list_tab\">\n\t\t\t\t\t<div className=\"sort_buttons\">\n\t\t\t\t\t\t<Dropdown overlay={recentMenu}>\n\t\t\t\t\t\t\t<Button ><Icon type=\"calendar\" />Recency</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t<Dropdown overlay={popluarMenu}>\n\t\t\t\t\t\t\t<Button className=\"popularity\"><Icon type=\"fire\" />Popularity</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sort_feedback\">\n\t\t\t\t\t\t<span className=\"sort\">Sort By:</span>\n\t\t\t\t\t\t<Tag color=\"gold\">{this.state.tags}</Tag>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{this.state.isLoading &&\n\t\t\t\t\t(<div className=\"loading\">\n\t\t\t\t\t\t<Spin size=\"large\" tip=\"Loading...\" />\n\t\t\t\t\t</div>)\n\n\t\t\t\t}\n\t\t\t\t<div id=\"topic_list\">{topicList}</div>\n\t\t\t\t{this.state.canLoad &&\n\t\t\t\t\t<Button id=\"load_more\" onClick={() => this.loadMore(this.state.sort)}>Loading more...</Button>\n\t\t\t\t}\n\t\t\t\t{!this.state.canLoad &&\n\t\t\t\t\t<div className=\"nomore\">\n\t\t\t\t\t\t<Icon style={{fontSize: '34px' }} type=\"build\" />\n\t\t\t\t\t\t<p>More pictures are coming</p>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t\t\n\t}\n}\n\nexport default TopicList;","import React from 'react';\nimport { Avatar, Icon} from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadBox from \"../addTopic/uploadImage\";\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n    scriptUrl: '/iconfont.js'\n});\n\ninterface replyPros {\n    topicId: string,\n    originalPicUrl: string,\n    name: string,\n    avatar: number,\n    createAt: string,\n    replies: Array<any>,\n    yourReact: any,\n    reacts: Array<any>\n}\n\ninterface replyState {\n    reacts: Array<any>,\n    visible: boolean\n}\n\nclass Subreplies extends React.Component<replyPros, replyState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            reacts: this.props.reacts,\n            visible: false\n        }\n    }\n\n    updateReacts = (newReact: any) => {\n        let exist = false;\n        let updatedReacts = this.state.reacts;\n        for (let i = 0; i < this.state.reacts.length; i++) {\n            let react = this.state.reacts[i];\n            if (react._id === newReact._id) {\n                exist = true;\n                updatedReacts[i].emoji = newReact.emoji;\n            }\n        }\n        if (exist) {\n            this.setState({\n                reacts: updatedReacts\n            })\n        }\n        else {\n            this.setState(currentState => ({\n                reacts: [...currentState.reacts, newReact]\n            }))\n        }\n    }\n\n    deleteReacts = (deleteId: string) => {\n        var updatedReact = this.state.reacts;\n        for (let i = 0; i < updatedReact.length; i++) {\n            if (updatedReact[i]._id === deleteId) {\n                updatedReact.splice(i, 1);\n                this.setState({\n                    reacts: updatedReact\n                })\n                return\n            }\n        }\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        });\n    };\n\n    handleCancel = () => {\n        this.setState({\n            visible: false\n        });\n    };\n\n    render() {\n        return(\n            <div className=\"level3\" key={this.props.topicId}>\n                <div className=\"header_panel\">\n                    <div className=\"user_info\">\n                        <Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n                        <div className=\"name_date\">\n                            <strong>{this.props.name}</strong>\n                            <span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"img_box\">\n                    <img src={this.props.originalPicUrl} />\n                    {this.state.reacts.length > 0 &&\n                        <div className=\"reacts_box\">\n                            {this.state.reacts.map(react => {\n                                return (\n                                    <span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n                                )\n                            })}\n                        </div>\n                    }\n                </div>\n                <div className=\"button_box\">\n                    <ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n                    <Icon\n                        className=\"add_reply\"\n                        type=\"picture\"\n                        theme=\"twoTone\"\n                        twoToneColor=\"#1890ff\"\n                        style={{ fontSize: '24px' }}\n                        onClick={this.showModal} />\n                </div>\n\n                <UploadBox showModal={ this.state.visible } \n\t\t\t\t\t\t   hideModal={ this.handleCancel }\n\t\t\t\t\t\t   boxHeader=\"Upload new picture to reply on topic\"\n\t\t\t\t\t\t   topicId={this.props.topicId}/>\n            </div>\n        )\n    }\n}\n\nexport default Subreplies;","import React from 'react';\nimport { Avatar, Icon} from 'antd';\nimport ReactPanel from '../emoji';\nimport Subreplies from './sub-replies';\nimport UploadImage from \"../addTopic/uploadImage\";\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface replyPros {\n\ttopicId: string,\n\toriginalPicUrl: string,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n\tyourReact: any,\n\treacts: Array<any>\n}\n\ninterface replyState {\n\treacts: Array<any>,\n\tvisible: boolean\n}\n\n\nclass Replies extends React.Component<replyPros, replyState> {\n\tconstructor(props: any) {\n        super(props);\n        this.state = {\n\t\t\treacts: this.props.reacts,\n        \tvisible: false\n        }\n\t}\n\t\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: true\n\t\t\t});\n\t\t  };  \n\t\n\thandleCancel = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: false\n\t\t\t});\n\t\t  };\n\n\trender() {\n\t\tconst repliesList = this.props.replies.map( reply => {\n\t\t\treturn(\n\t\t\t\t<Subreplies \n\t\t\t\t\tkey={reply._id}\n\t\t\t\t\toriginalPicUrl={reply.originalPicUrl}\n\t\t\t\t\tname={reply.createBy.name}\n\t\t\t\t\tavatar={reply.createBy.avatar}\n\t\t\t\t\treplies={reply.replies}\n\t\t\t\t\tcreateAt={reply.createAt}\n\t\t\t\t\ttopicId={reply._id}\n\t\t\t\t\treacts={reply.reacts}\n\t\t\t\t\tyourReact={reply.yourReact ? reply.yourReact : ''}\n\t\t\t\t/>\n\t\t\t)\n\t\t}) \n\n\t\treturn(\n\t\t\t<div className=\"single_reply\">\n\t\t\t\t<div className=\"level2\">\n\t\t\t\t\t<div className=\"header_panel\">\n\t\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n\t\t\t\t\t\t\t<div className=\"name_date\">\n\t\t\t\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t\t<img src={this.props.originalPicUrl} />\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"button_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tclassName=\"add_reply\"\n\t\t\t\t\t\t\ttype=\"picture\"\n\t\t\t\t\t\t\ttheme=\"twoTone\"\n\t\t\t\t\t\t\ttwoToneColor=\"#1890ff\"\n\t\t\t\t\t\t\tstyle={{ fontSize: '24px' }}\n\t\t\t\t\t\t\tonClick={this.showModal} />\n\t\t\t\t\t\t<UploadImage \n\t\t\t\t\t\t\tshowModal={ this.state.visible } \n\t\t\t\t\t\t\thideModal={ this.handleCancel } \n\t\t\t\t\t\t\tboxHeader=\"Upload new picture to reply\"\n\t\t\t\t\t\t\ttopicId={ this.props.topicId}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{repliesList}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Replies;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Avatar, Icon, Empty } from 'antd';\nimport Replies from './replies';\nimport './index.scss';\nimport ReactPanel from '../emoji';\nimport UploadBox from '../addTopic/uploadImage';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface getIdProps {\n\tid: string\n}\n\ninterface topicProps extends RouteComponentProps<getIdProps>{\n\t\n}\n\ninterface replies {\n\t_id: string,\n\toriginalPicUrl: string,\n\tcreateBy: any,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface detailState {\n\tid: string,\n\tname: string,\n\tavatar: number,\n\toriginalPicUrl: string,\n\tcreateAt: string,\n\treplies: Array<replies>,\n\treacts: Array<any>,\n\tyourReact: any,\n\tshowUploadModal: boolean\n}\n\nclass TopicDetail extends React.Component< topicProps, detailState> {\n\tconstructor(props: topicProps){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tavatar: 1,\n\t\t\toriginalPicUrl: '',\n\t\t\tcreateAt: '',\n\t\t\treplies: [],\n\t\t\treacts: [],\n\t\t\tyourReact: \"\",\n\t\t\tshowUploadModal: false\n\t\t}\n\t}\n\n\tshowModal = () => {\n        this.setState({\n          showUploadModal: true\n        });\n\t  }; \n\n\t  handleCancelUpload = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModal: false\n\t\t});\n\t};\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\t\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch(process.env.REACT_APP_API_URL+'/topics/single?id='+ this.props.match.params.id)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconst curTopic = data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: curTopic._id,\n\t\t\t\t\tname: curTopic.createBy.name,\n\t\t\t\t\tavatar: curTopic.createBy.avatar,\n\t\t\t\t\toriginalPicUrl: curTopic.originalPicUrl,\n\t\t\t\t\tcreateAt: curTopic.createAt,\n\t\t\t\t\treplies: curTopic.replies,\n\t\t\t\t\treacts: curTopic.reacts,\n\t\t\t\t\tyourReact: curTopic.yourReact ? curTopic.yourReact : \"\"\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst repliesList = this.state.replies.map( reply => {\n\t\t\treturn (\n\t\t\t\t<Replies\n\t\t\t\t\tkey={reply._id}\n\t\t\t\t\toriginalPicUrl={reply.originalPicUrl}\n\t\t\t\t\tname={reply.createBy.name}\n\t\t\t\t\tavatar={reply.createBy.avatar}\n\t\t\t\t\treplies={reply.replies}\n\t\t\t\t\tcreateAt={reply.createAt}\n\t\t\t\t\ttopicId={reply._id}\n\t\t\t\t\treacts={reply.reacts}\n\t\t\t\t\tyourReact={reply.yourReact ? reply.yourReact : ''}\n\t\t\t\t/>\n\n\t\t\t)\n\t\t})\n\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id=\"topic_detail\">\n\t\t\t\t\t<div id=\"author_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.state.avatar + '.png'}/>\n\t\t\t\t\t\t<strong>{this.state.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {this.state.createAt.substr(0,10)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"main_pic\">\n\t\t\t\t\t\t<img src={this.state.originalPicUrl}/>\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.state.id} yourReact={this.state.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} onClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"replies_list\">\n\t\t\t\t\t<h2>Replies</h2>\n\t\t\t\t\t{repliesList.length == 0 && \n\t\t\t\t\t\t<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"There is no reply yet\" />\n\t\t\t\t\t}\n\t\t\t\t\t{repliesList}\n\t\t\t\t</div>\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModal } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUpload }\n\t\t\t\t\t\t   boxHeader=\"Upload new picture to reply on topic\"\n\t\t\t\t\t\t   topicId={this.state.id}/>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default TopicDetail;","import React from 'react';\nimport { Icon, List, Avatar } from 'antd'; \nimport './index.scss'\n\ninterface boardState {\n    filter: string,\n    userList: Array<any>\n}\n\nclass LeaderBoard extends React.Component<{}, boardState> {\n    state = {\n        filter: 'reacts',\n        userList: []\n    }\n\n    showMostReacts = () => {\n        this.setState({\n            filter: 'reacts'\n        })\n        fetch(process.env.REACT_APP_API_URL +'/users/leaderboard?type=mostReacts')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    showMostTopics = () => {\n        this.setState({\n            filter: 'topics'\n        })\n        fetch(process.env.REACT_APP_API_URL + '/users/leaderboard?type=mostTopics')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    componentDidMount(){\n        this.showMostReacts()\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n                <h3><Icon type=\"unordered-list\" />Leaderboard</h3>\n                <div className=\"filter\">\n                    <button className={this.state.filter === 'reacts' ? 'isActive' : ''} onClick={this.showMostReacts}><Icon type=\"smile\" /> Reacts</button>\n                    <button className={this.state.filter === 'topics' ? 'isActive' : ''} onClick={this.showMostTopics}><Icon type=\"picture\" /> Topics</button>\n                </div>\n                <List\n                    id=\"leaderboard_list\"\n                    dataSource={this.state.userList}\n                    renderItem={(item: any) => (                \n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={<Avatar src={'../avatars/' + item.avatar + '.png'}/>}\n                                title={item.name}\n                                key= {item._id}\n                                description={this.state.filter === 'reacts' ? ('React Times: ' + item.reactTimes) : ('Post Topics: ' + item.topicTimes)}\n                            />\n                        </List.Item>                     \n                    )}>\n\n                </List>\n            </React.Fragment>\n            \n        )\n    }\n}\n\nexport default LeaderBoard;","import React from 'react';\nimport { Layout } from 'antd';\nimport { Route, Switch } from 'react-router';\nimport TopicList from '../topicList';\nimport TopicDetail from '../topicDetail';\nimport LeaderBoard from '../leaderboard';\n\nconst { Sider, Content } = Layout;\n\ninterface topicPanelProps {\n    user: any\n}\n\nclass TopicPanel extends React.Component<topicPanelProps> {\n    render() {\n        return(\n            <Layout>\n                <Content>\n                    <Switch>\n                        <Route path=\"/topics_detail/:id\" component={TopicDetail} />\n                        <Route path=\"/\" exact render={() => <TopicList user={this.props.user} />} />\n                    </Switch>\n                </Content>\n                <Sider className=\"leaderboard\" breakpoint=\"lg\" collapsedWidth=\"0\" reverseArrow={true} ><LeaderBoard /></Sider>\n            </Layout>\n        )\n    }\n}\n\nexport default TopicPanel;","import React from 'react';\nimport Card from '../topicList/card';\nimport { Empty } from 'antd';\nimport './index.scss';\n\ninterface MyPostsProps {\n    user: any\n}\n\ninterface MyPostsState {\n    topics: Array<any>\n}\n\nclass MyPosts extends React.Component<MyPostsProps, MyPostsState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n        const topicList = this.state.topics.map(topic => {\n            return (\n                <Card\n                    user={this.props.user}\n                    key={topic._id}\n                    smallPicUrl={topic.smallPicUrl}\n                    name={topic.createBy.name}\n                    avatar={topic.createBy.avatar}\n                    createAt={topic.createAt}\n                    topicId={topic._id}\n                    replies={topic.replies}\n                    reacts={topic.reacts}\n                    yourReact={'empty'}\n                />\n            )\n        })\n\n        return ( \n            <React.Fragment>\n                <h2>My Posts</h2>\n                <div id=\"user_topic_list\">\n                    {topicList.length == 0 &&\n                        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"You haven't posted any topics\" />\n                    }\n                    {topicList}\n                    {topicList}\n                </div> \n            </React.Fragment> \n        )\n    }\n}\n\nexport default MyPosts;","import React from 'react';\nimport { List, Avatar, Empty, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n    scriptUrl: '/iconfont.js'\n});\n\ninterface NotificationState {\n    notifications: Array<any>\n}\n\nclass Notification extends React.Component<{}, NotificationState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            notifications: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/notifications/toUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    notifications: data\n                })\n            })\n    }\n\n    render() {\n        if(this.state.notifications.length>0){\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <div id=\"notifications\">\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={this.state.notifications}\n                            renderItem={item => (\n                                <List.Item>\n                                    <List.Item.Meta\n                                        avatar={<Avatar src={'../avatars/' + item.fromUser.avatar + '.png'} />}\n                                        title={'You have a new ' + item.type}\n                                        description={\n                                            <React.Fragment>\n                                                <strong className=\"from\">{item.fromUser.name}</strong>\n                                                <p className=\"text\">{'has reacted to your picture with '}</p>\n                                                <MyIcon type={'icon-' + item.content} />\n                                                <Link to={`/topics_detail/${item.atTopic}`}>Link</Link>\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    </div>\n                </React.Fragment>\n            )\n        }\n        else{\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"You have no notifications yet\" />\n                </React.Fragment>\n            ) \n        }\n        \n    }\n}\n\nexport default Notification;","import React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\nimport './index.scss';\n\nclass UserPanelMenu extends React.Component<RouteComponentProps> {\n    \n\n    render() {\n        return (\n            \n            <Menu \n                id=\"user_panel_menu\"\n                defaultSelectedKeys={['/user']}\n                theme=\"light\"\n                mode=\"inline\"\n                selectedKeys={[this.props.location.pathname]}\n            >\n                <Menu.Item key=\"/user\">\n                    <Link to=\"/user\"><Icon type=\"picture\" /><span>My posts</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"/user/notifications\">\n                    <Link to=\"/user/notifications\"><Icon type=\"notification\" /><span>Notifications</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\"><Icon type=\"setting\" /><span>Settings</span></Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default UserPanelMenu;","import React from 'react';\nimport MyPosts from './mypost';\nimport Notification from './notifications';\nimport UserPanelMenu from './menu';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { Route } from 'react-router';\n\nconst { Sider, Content } = Layout;\n\ninterface userPanelProps {\n    user: any\n}\n\ninterface userPanelState {\n    topics: Array<any>\n}\n\nclass UserPanel extends React.Component<userPanelProps, userPanelState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n\n        return(\n            <Layout>\n                <Sider width={240} style={{ background: '#fff' }}>\n                    <Route path=\"/user\" component={UserPanelMenu}></Route>\n                </Sider>\n                <Content>\n                    <div id=\"user_panel\">\n                        <Route path=\"/user\" exact render={() => <MyPosts user={this.props.user} />} />\n                        <Route path=\"/user/notifications\" component={Notification} />\n                    </div>\n                </Content>\n            </Layout>\n\n\n        )\n    }\n}\n\nexport default UserPanel;","import React from 'react';\nimport { Icon } from 'antd';\nimport './index.scss';\n\nclass Footer extends React.Component {\n    render() {\n        return(\n            <footer>\n                <div className=\"footer-logo\">\n                    <img src=\"/images/logo-footer.png\" />\n                </div>\n                <div className=\"copyright\">\n                    <p>Made with <Icon type=\"heart\" theme=\"filled\" style={{color: '#eb2f96'}}/> at UTS</p>\n                </div>\n            </footer>\n        ) \n    }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './header';\nimport TopicPanel from './topic';\nimport UserPanel from './user';\nimport Footer from './footer';\nimport { Affix, BackTop, Icon} from 'antd';\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Switch }from 'react-router-dom';\n\ninterface currentUser {\n\tuser: {\n\t\tname: string,\n\t\temail: string,\n\t\tid: string,\n\t\tavatar: string\n\t},\n\tisLogin?: boolean\n}\n\n\nclass App extends React.Component<{}, currentUser> {\n\tstate = {\n\t\tuser: {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tid: '',\n\t\t\tavatar:''\n\t\t},\n\t\tisLogin: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getLoginUser(); \n\t}\n\n\tgetLoginUser= () =>{\n\t\tfetch(process.env.REACT_APP_API_URL+'/users')\n\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.status === 'success'){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\tname: data.user.name,\n\t\t\t\t\t\t\temail: data.user.email,\n\t\t\t\t\t\t\tid: data.user.id,\n\t\t\t\t\t\t\tavatar: data.user.avatar,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLogin: true\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLogin: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\" id='App'>\n\t\t\t\t\t<Affix>\n\t\t\t\t\t\t<Header userName={this.state.user.name} isLogin={this.state.isLogin} avatar={this.state.user.avatar}></Header>\n\t\t\t\t\t</Affix>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/user\" render={() => <UserPanel user={this.state.user} />} />\n\t\t\t\t\t\t<Route path=\"/\" render={() => <TopicPanel user={this.state.user} />} />\n\t\t\t\t\t</Switch>\t\t\t\t\t\n\t\t\t\t\t<BackTop><div className=\"ant-back-top-inner\"><Icon type=\"arrow-up\" /></div></BackTop>\n\t\t\t\t\t<Footer/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n\n}\n\n export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}