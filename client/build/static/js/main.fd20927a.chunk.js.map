{"version":3,"sources":["header/login.jsx","header/logout.jsx","header/register.jsx","addTopic/uploadImage.tsx","addTopic/index.tsx","header/index.jsx","emoji/index.tsx","topicList/card.tsx","topicList/index.tsx","topicDetail/sub-replies.tsx","topicDetail/replies.tsx","topicDetail/index.tsx","leaderboard/index.tsx","topic/index.tsx","user/mypost.tsx","user/notifications.tsx","user/setting.tsx","user/menu.tsx","user/index.tsx","footer/index.tsx","App.tsx","index.tsx"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClose","setState","visible","isLogin","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","compareToUserEmail","post_data","email","state","callbackResultEmail","callbackTextEmail","test","fetch","process","method","body","JSON","stringify","headers","Headers","Content-Type","then","res","text","data","parse","status","postData","password","json","message","error","user","login_username","name","window","location","reload","success","result","target","value","getFieldDecorator","path","pathname","query","id","react_default","a","createElement","react_router","to","drawer","title","width","es_form","onSubmit","className","Item","hasFeedback","validateStatus","help","rules","required","input","prefix","icon","type","style","color","placeholder","onBlur","onChange","handleChangeEmail","bind","Password","handleChangePassword","es_button","htmlType","onClick","React","Component","Form","create","Logout","logout","isLogout","Fragment","Register","returnHome","compareToUserName","callbackResultName","callbackTextName","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","avatar","isRegister","login","Vertified","changeAvatar","newAvatar","closeAvatar","showAvatar","cancel","_this2","avatarUrl","avatarList","_loop","i","push","key","size","src","closable","subTitle","extra","assign","labelCol","xs","span","sm","wrapperCol","label","display","handleChangeName","min","validator","divider","href","UploadImage","showModal","disableUploadButton","document","getElementsByClassName","setAttribute","enableUploadButton","removeAttribute","postTopic","url","topicId","update","originalPicUrl","img_url_original","smallPicUrl","img_url_small","topic_id","replyTo","fileList","hideModal","handleCancel","uploadButtonDisabled","info","toConsumableArray","slice","file","response","modal","boxHeader","okText","onOk","onCancel","upload","action","onImageUpload","prevProps","_this3","setTimeout","AddTopic","upload_props","loginUser","uploadImage","PureComponent","Header","unread","Content-type","length","userMenu","menu","react_router_dom","badge","count","header_logout","avartarUrl","src_addTopic","userName","dropdown","overlay","offset","component","MyIcon","Icon","createFromIconfontCN","scriptUrl","ReactPanel","updateReacts","deleteReacts","reactToTopic","emoji","isLoading","curReact","yourReact","react_id","_id","deleteId","newReact","types","prevReact","EmojiList","map","popoverHead","popover","content","placement","theme","twoToneColor","fontSize","Card","reacts","showUploadModal","showUploadModalReply","exist","updatedReacts","currentState","concat","updatedReact","splice","showModalReply","handleCancelUploadReply","handleCancelUpload","handleDeleteTopic","currentTopic","replies","settingMenu","createAt","substr","alt","react","card_MyIcon","src_emoji_0","TopicList","showFromNewtoOld","page","reset","topics","sort","tags","canLoad","pageSize","showFromOldtoNew","showFromLowtoHigh","showFromHightoLow","loadMore","currentUser","recentMenu","popluarMenu","topicList","topic","topicList_card","createBy","tag","Subreplies","sub_replies_MyIcon","Replies","repliesList","reply","sub_replies","replies_MyIcon","TopicDetail","match","params","curTopic","topicDetail_MyIcon","empty","image","Empty","PRESENTED_IMAGE_SIMPLE","description","LeaderBoard","filter","userList","showMostReacts","showMostTopics","list","dataSource","renderItem","item","Meta","reactTimes","topicTimes","Sider","Layout","Content","TopicPanel","layout","exact","render","src_topicList_0","breakpoint","collapsedWidth","reverseArrow","src_leaderboard","MyPosts","Notification","getAllNoti","notifications","markAsRead","notification_id","itemLayout","isRead","fromUser","notifications_MyIcon","belongTo","MySetting","swtichOnAvatarList","onChanging","onChangeAvatar","UserPanelMenu","defaultSelectedKeys","mode","selectedKeys","UserPanel","user_Sider","background","user_Content","mypost","setting","Footer","App","getLoginUser","affix","src_header","src_user","src_topic","back_top","src_footer","ReactDOM","src_App_0","querySelector"],"mappings":"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","file":"static/js/main.fd20927a.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon, Input,Drawer,message} from 'antd';\nimport './login.scss';\nimport 'antd/dist/antd.css';\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { \n        isLogin: false,\n        login_username: '',\n        visible: true,\n        email:'',\n        password:'',\n\n        result:'', //database search result\n        callbackResultEmail: '',\n        callbackTextEmail:'',\n    };\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n      isLogin: true,\n    });\n\n  };\n\n  handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n          if (!err) {\n              console.log('Received values of form: ', values);\n          }\n      })\n  };\n\n  //judge email whether exists\n  handleChangeEmail(e){\n      this.setState({\n          email: e.target.value\n      })\n  };\n  compareToUserEmail = () =>{\n    let url = process.env.REACT_APP_API_URL + '/users/verifyEmail';\n    let post_data = { \n        email: this.state.email,\n    }\n    var emailV = /^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/\n    if(this.state.email===''){\n        this.setState({\n            callbackResultEmail: \"error\",\n            callbackTextEmail: \"Please input your E-mail address\"\n        })\n    }\n    else if(emailV.test(this.state.email)) {\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>res.text().then(\n            data=>{\n                var dataBack=JSON.parse(data);\n                if(dataBack.status!==\"failure\"){\n                    this.setState({\n                        callbackResultEmail: \"error\",\n                        callbackTextEmail: \"This E-mail do not existed.\" \n                    })\n                }\n                else {\n                    this.setState({\n                        callbackResultEmail: \"success\",\n                        callbackTextEmail: \"Welcome Back!\"\n                    })\n                }\n            }\n        ))   \n    }else{\n        this.setState({\n            callbackResultEmail: \"error\",\n            callbackTextEmail: \"Please input correct E-mail format!\",\n        }) \n    }\n}\n\n  handleChangePassword(e){\n      this.setState({\n          password: e.target.value\n      })\n  };\n\n  //Post_data_login\n    postData = () => {\n        if(this.state.email===''){\n            this.setState({\n                callbackResultEmail: 'error',\n                callbackTextEmail: \"Please input your E-mail address\"\n            })\n        }\n        let url = process.env.REACT_APP_API_URL +'/users/login';\n        let post_data = { \n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.form.validateFields(err => {\n            if (!err) {\n            fetch(url,{\n                method:'POST',\n                body: JSON.stringify(post_data),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(\n                    res=>res.json()\n                )\n            .then(\n                    data=>{\n                        if(data.status==='failure'){\n                            message.error(data.message+'!Please try again!')\n                        }\n                        else if(data.user.email===this.state.email){\n                            this.setState({\n                                isLogin: true,\n                                login_username: data.user.name\n                            });\n                            window.location.reload();\n                            // message.success('Login Success',3);\n                        }else{\n                            this.setState({\n                                isLogin: false\n                            });\n                            message.success('Login False');\n                            window.location.reload();\n                        } \n                    }\n                )\n           }\n        }); \n    };\n\nrender() {\n    const { getFieldDecorator } = this.props.form;\n\n    //pass user's data\n    var datapass={name: this.state.login_username,email: this.state.email,id:'',status: true}\n    var path={\n        pathname: '/',\n        query: datapass\n    };\n    \n    if(this.state.isLogin){\n        return <Redirect to= {path}/> \n    }\n    else{\n        return (\n            <div id='login'>\n                <div id='login_form'>\n                    <Drawer\n                        title=\"Login\"\n                        width={360}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\" >\n                        {/*login_email */}\n                        <Form.Item  hasFeedback validateStatus={this.state.callbackResultEmail} help={this.state.callbackTextEmail}>\n                            {getFieldDecorator('eamil', {\n                                rules: [\n                                    {required: true, message: 'Please input your E-mail.'},\n                                ],\n                              })(\n                                <Input\n                                    prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"E-mail\"\n                                    onBlur={this.compareToUserEmail}\n                                    onChange={this.handleChangeEmail.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_password*/}\n                        <Form.Item  hasFeedback>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: 'Please input your Password!' }],\n                            })(\n                                <Input.Password\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={this.handleChangePassword.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_submit*/}\n                        <Form.Item>\n                          {/* <a className=\"login-form-forgot\" href=\"/register\">Forgot password?</a> */}\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.postData}>Login</Button>\n\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                </div>\n            </div>\n        );\n    }\n  }\n};\nexport default Form.create()(Login);","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { message, Button} from 'antd';\nimport { Redirect } from 'react-router';\nimport './logout.scss';\n\n\nclass Logout extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            isLogout: false,\n            login_username: '',\n            email:'',\n        };\n    }\n\n\n    logout=()=>{\n        let url = process.env.REACT_APP_API_URL + '/users/logout';\n        fetch(url,{\n            method:'Get',\n            }).then(res=>res.json()).then(\n                data=>{\n                    console.log(data);\n                    this.setState({\n                        isLogout: true,\n                    })\n                    message.success('Login success');\n                    window.location.reload();\n                    console.log('logout success',this.state.isLogout)\n                }\n            )\n    };\n    render(){\n        if(this.state.isLogout)\n        {   \n            var path={pathname:'/'};\n            return <Redirect to= {path}/>\n        }\n        else{\n            return(\n                <React.Fragment>\n                    <Button id=\"logout_button\" onClick={this.logout} type=\"link\" icon=\"logout\">Logout</Button>\n                </React.Fragment>\n            );\n        }\n\n    }\n}\nexport default Logout;\n    \n\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon,Input,Drawer,Avatar,Result, Divider,message} from 'antd';\nimport './register.scss';\nimport 'antd/dist/antd.css';\n\n// import Check_Login from './checkLogin'\n\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            email: '',\n            name: '',\n            password: '',\n            avatar: 1,\n\n            showAvatar: 'none',\n            closeAvatar:'',\n\n            confirmDirty: false,\n            visible: true,\n            cancel: false, //back to home page\n            isRegister: false, //register success\n            returnHome: false, //after register success, return home\n            // callbackEmail: false,\n            callbackResultEmail: '',\n            callbackTextEmail:'',\n            callbackResultName:'',\n            callbackTextName:'',\n        };\n    }\n    \n    onClose = () => {\n        this.setState({\n        visible: false,\n        returnHome: true\n        });\n    };\n\n    \n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n          }\n        });\n      };\n\n    //judge name whether exists\n    handleChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        })\n    };\n    compareToUserEmail = () =>{\n        // check email address form\n        let url = process.env.REACT_APP_API_URL + '/users/verifyEmail';\n        let post_data = { \n            email: this.state.email,\n        }\n        var emailV = /^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/\n        if(this.state.email===''){\n            this.setState({\n                callbackResultEmail: \"error\",\n                callbackTextEmail: \"Please input your E-mail address\"\n            })\n        }\n        else if(emailV.test(this.state.email)) {\n            fetch(url,{\n                method:'POST',\n                body: JSON.stringify(post_data),\n                headers: new Headers({\n                'Content-Type': 'application/json'\n                })\n            }).then(res=>res.text().then(\n                data=>{\n                    var dataBack=JSON.parse(data);\n                    if(dataBack.status===\"failure\"){\n                        this.setState({\n                            callbackResultEmail: \"error\",\n                            callbackTextEmail: \"This E-mail already existed.\" \n                        })\n                    }\n                    else {\n                        this.setState({\n                            callbackResultEmail: \"success\",\n                            callbackTextEmail: \"Available!\"\n                        })\n                    }\n                }\n            ))   \n        }else{\n            this.setState({\n                callbackResultEmail: \"error\",\n                callbackTextEmail: \"Please input correct email format!\",\n            }) \n        }\n\n    }\n\n\n\n    //judge name whether exists\n    handleChangeName(e){\n        this.setState({\n            name: e.target.value\n        })\n    };\n\n    compareToUserName = () =>{\n\n        let url = process.env.REACT_APP_API_URL + '/users/verifyUsername';\n        let post_data = { \n            name: this.state.name,\n        };\n        var nameV = /^[ ]+$/\n        if(this.state.name===''){\n            this.setState({\n                callbackResultName: \"error\",\n                callbackTextName: \"Please input your user name\"\n            })\n        }\n        else if(!nameV.test(this.state.name)){\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>\n                res.text().then(\n                    data=>{\n                        var dataBack=JSON.parse(data);\n                        //register username judge\n                            if(dataBack.status===\"failure\"){\n                                this.setState({\n                                    callbackResultName: \"error\",\n                                    callbackTextName: \"This user name already existed.\" \n                                })\n                            }\n                            else {\n                                this.setState({\n                                    callbackResultName: \"success\",\n                                    callbackTextName: \"Available!\"\n                                })\n                            }\n                    } \n                )     \n            )\n        }else{\n            this.setState({\n                callbackResultName: \"error\",\n                callbackTextName: \"The first letter can't accept whitespace.\",\n            }) \n        }\n    }\n\n    //judge confirm password\n    \n    handleChangePassword(e){\n        this.setState({\n            password: e.target.value\n        })\n    };\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    \n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Not the same passowrd!');\n        } else {\n          callback();\n        }\n    };\n    \n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      };\n    \n    //Post_data_register\n    postData = () => {\n        if(this.state.email===''){\n            this.setState({\n                callbackResultEmail: 'error',\n                callbackTextEmail: \"Please input your E-mail address\"\n            })\n        }\n        if(this.state.name===''){\n            this.setState({\n                callbackResultName: \"error\",\n                callbackTextName: \"Please input your user name\"\n            })\n        }\n        let url = process.env.REACT_APP_API_URL + '/users/register';\n        let post_data = { \n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password,\n            avatar: this.state.avatar\n        };\n        this.props.form.validateFields(err => {\n            if (!err) {\n                //post register user info\n                fetch(url,{\n                    method:'POST',\n                    body: JSON.stringify(post_data),\n                    headers: new Headers({\n                    'Content-Type': 'application/json'\n                    })\n                }).then(res=>res.text().then(\n                    data=>{\n                        var dataBack=JSON.parse(data);\n\n                        if(dataBack.status===\"success\"){\n                            this.setState({\n                                isRegister: true,\n                            })\n                            console.log(this.state.isRegister,'in')\n                        }\n                    }\n                ))              \n            }\n        }); \n    };\n    //login if register success\n    login = () => {\n        let url = process.env.REACT_APP_API_URL +'/users/login';\n        let post_data = { \n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.form.validateFields(err => {\n            if (!err) {\n            fetch(url,{\n                method:'POST',\n                body: JSON.stringify(post_data),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(\n                    res=>res.json()\n                )\n            .then(\n                    data=>{\n                        if(data.status==='failure'){\n                            message.error(data.message+'!Please try again!')\n                        }else{\n                            window.location.reload();\n                        } \n                    }\n                )\n           }\n        }); \n    };\n\n\n    //control vertify page\n    Vertified=()=>{\n        this.setState({\n            visible: false,\n            returnHome: true,\n        })\n        this.login();\n    }\n    \n    //change avatar\n    changeAvatar = (newAvatar)=>{\n        this.setState({\n            avatar: newAvatar,\n            closeAvatar:'',\n            showAvatar:'none'\n        })\n    }\n\n    showAvatar=()=>{\n        this.setState({\n            closeAvatar: 'none',\n            showAvatar:''\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const avatarUrl= '../avatars/'+this.state.avatar+'.png';\n\n        const avatarList = [];\n        for(let i=1; i<=16; i++){\n            avatarList.push(<Avatar key={i} size=\"64\" src={'../avatars/'+ i +'.png'} onClick={() => this.changeAvatar(i)} />)\n        }\n\n\n        const formItemLayout = {\n            labelCol: {\n              xs: { span: 24 },\n              sm: { span: 8 },\n            },\n            wrapperCol: {\n              xs: { span: 24 },\n              sm: { span: 16 },\n            },\n          };\n        var datapass={name: this.state.name,email: this.state.email,id:'',status: true}\n        var path={\n            pathname: '/',\n            query: datapass,\n        };\n        if(this.state.returnHome){\n            return ( <Redirect to= {path}/> )    \n        }else if(this.state.isRegister){\n            return(\n                    <div id='successRegister'>\n                        <Drawer\n                            title=\"Register\"\n                            width={460}\n                            closable={false}\n                            visible={this.state.visible}\n                        >\n                            <Result\n                                status=\"success\"\n                                title=\"Well done^.^! Register success!\"\n                                subTitle=\"Welcome to UTS picChat community! You can post your interesting picture and react others now!\"\n                                extra={[\n                                <Button type=\"primary\" onClick={this.Vertified} size=\"large\">Continue and Login</Button>,\n                                ]}\n                            />\n                        </Drawer>\n                    </div>\n            )  \n        }\n        else {\n            return(\n                <div id='register'>\n                    <Drawer\n                        title=\"Register\"\n                        width={460}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    \n                    <Form onSubmit={this.handleSubmit} className=\"register-form\" {...formItemLayout}>\n                        <Form.Item label=\"Avatar:\" hasFeedback>\n                        \n                        <div id=\"avatarN\" style={{display: this.state.showAvatar}} className=\"notChosen\">\n                            {avatarList}\n                        </div>\n                        <div id=\"avatarY\" style={{display: this.state.closeAvatar}} className=\"isChosen\">\n                            <Avatar id=\"1\" size={64} src={avatarUrl} onClick={this.showAvatar}/>\n                        </div>\n\n                        </Form.Item>\n\n                        {/* enter Email */}\n                        <Form.Item label=\"E-mail\" hasFeedback validateStatus={this.state.callbackResultEmail} help={this.state.callbackTextEmail}>\n                        {getFieldDecorator('eamil', {\n                            rules: [\n                                { required: true,message: 'Please input your E-mail！'},\n                                // {validator: this.vertifiedEmail}],\n                            ],\n                        })(\n                            <Input\n                            type=\"email\"\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"E-mail\"\n                            onBlur={this.compareToUserEmail}\n                            onChange={this.handleChangeEmail.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Name */}\n                        <Form.Item label=\"User Name\" hasFeedback validateStatus={this.state.callbackResultName} help={this.state.callbackTextName}>\n                        {getFieldDecorator('Name', {\n                            rules: [\n                                { required: true, message: 'Please input your name!'},\n                                // { min: 3, message: 'The minimum letter is 3!'},\n                                // { whitespace: true, message:'Cannot accept whitespace at first letter. '},\n                                // { validator: this.compareToUserName}],\n                            ],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"User Name\"\n                            onBlur={this.compareToUserName}\n                            onChange={this.handleChangeName.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Password */}\n                        <Form.Item label=\"Password\" hasFeedback>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                { required: true, message:'You need to setting password'}, \n                                {min: 6, message: 'Minimum 6 letter' },\n                            {validator: this.validateToNextPassword}],\n                        })(\n                            <Input.Password\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChangePassword.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* confirm Password */}\n                        <Form.Item label=\"Confirm\" hasFeedback>\n                        {getFieldDecorator('confirm', {\n                            rules: [{required: true},{min:6,message:'Minimum 6 Letters！'},\n                            {\n                                validator: this.compareToFirstPassword,\n                            }\n                            ],\n                        })(<Input.Password onBlur={this.handleConfirmBlur} placeholder=\"Password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}/>) }\n                        </Form.Item>\n                        \n                        <Form.Item>\n                        <Button size=\"large\" type=\"primary\" htmlType=\"submit\" className=\"register-form-button\" onClick={this.postData}>\n                            Register\n                        </Button>\n                        <Divider className=\"divider\"></Divider>\n                        <a href=\"/login\" id=\"login_register\" className=\"login_text\">Login Now</a>\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                    </div>\n                    );\n            }\n\n    }\n};\nexport default Form.create()(Register);","import React from \"react\";\nimport {Modal, Upload, message, Button, Icon} from 'antd';\nimport './index.scss';\n\ninterface IUploadImageState {\n    visible: boolean;\n    img_url_original: string;\n    img_url_small: string;\n    fileList: any[];\n    topicId?: String;\n    uploadButtonDisabled: boolean;\n}\n\ninterface IUploadImageProps {\n    showModal: boolean,\n    hideModal: Function,\n    boxHeader: String,\n    topicId?: String,\n    update?: boolean\n}\n\nclass UploadImage extends React.Component<IUploadImageProps, IUploadImageState> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false,\n            img_url_original: '',\n            img_url_small: '',\n            fileList:[],\n            topicId: this.props.topicId,\n            uploadButtonDisabled: true\n          }\n        }\n\n        onImageUpload(info: any) {\n            let fileList = [...info.fileList];\n            fileList = fileList.slice(-1);\n            this.setState({\n              fileList: [...fileList]\n            });\n      \n            if (info.file.status !== 'uploading') {\n            }\n            if (info.file.status === 'done') {\n              this.setState({\n                img_url_original: info.file.response[0],\n                img_url_small: info.file.response[1]\n              });\n              message.success(`File uploaded successfully!`);\n              this.enableUploadButton();\n            } else if (info.file.status == 'error') {\n              message.error(`The image contains text/unappropriate content and can't be uploaded.`);\n            }\n          };\n      \n          showModal = () => {\n              this.setState({\n                visible: true,\n              });\n            };\n\n          disableUploadButton = () => {\n            var elemet = document.getElementsByClassName('ant-btn ant-btn-primary')[0];\n            elemet.setAttribute('disabled', 'true');              \n          };\n\n          enableUploadButton = () => {\n            var elemet = document.getElementsByClassName('ant-btn ant-btn-primary')[0];\n            elemet.removeAttribute('disabled');\n          };\n        \n          postTopic = () => {\n              let url = '';\n              let post_data;\n\n              if (this.state.topicId)\n              {\n                if (this.props.update == true)\n                {\n                  url = process.env.REACT_APP_API_URL +'/topics';\n                  post_data = {\n                    originalPicUrl: this.state.img_url_original,\n                    smallPicUrl: this.state.img_url_small, \n                    topic_id: this.state.topicId};\n                }\n                else\n                {\n                  url = process.env.REACT_APP_API_URL +'/topics/reply';\n                  post_data = {\n                    originalPicUrl: this.state.img_url_original, \n                    replyTo: this.state.topicId};\n                }\n              }\n              else\n              {\n                url = process.env.REACT_APP_API_URL +'/topics';\n                post_data = {\n                  originalPicUrl: this.state.img_url_original, \n                  smallPicUrl: this.state.img_url_small,\n                };\n              }\n\n              console.log(post_data);\n\n              if (this.props.update == true) {\n                fetch(url, {\n                  method:'PUT',\n                  body: JSON.stringify(post_data),\n                  headers: new Headers({\n                      'Content-Type': 'application/json'\n                    })\n                  }).then(res=>res.json()).then(\n                      data=>{\n                    console.log(data);\n                  }\n                )\n              } else {\n                fetch(url, {\n                  method:'POST',\n                  body: JSON.stringify(post_data),\n                  headers: new Headers({\n                      'Content-Type': 'application/json'\n                    })\n                  }).then(res=>res.json()).then(\n                      data=>{\n                    console.log(data);\n                  }\n                )\n              }\n\n              this.setState({\n                visible: false,\n                fileList:[]\n              });\n\n              this.props.hideModal();\n      \n              //TODO: change this refresh with the component update\n              window.location.reload();\n            };\n        \n            handleCancel = () => {            \n              this.props.hideModal();\n  \n              this.setState({\n                fileList: [],\n                visible: false\n              });\n            };\n\n    render() {\n        return (\n            <div className=\"modal_window\">\n            <Modal\n              title={this.props.boxHeader}\n              visible={this.state.visible}\n              okText=\"Upload\"\n              onOk={() => {this.postTopic()}}\n              onCancel={this.handleCancel}\n            >\n                <div className=\"image_upload\">\n                <Upload name=\"image\"\n                        action={process.env.REACT_APP_API_URL + '/images/upload'}                      \n                        onChange={(info) => {this.onImageUpload(info);}}\n                        fileList={this.state.fileList}\n                        >\n                    <Button>\n                    <Icon type=\"upload\" /> Click to upload image\n                    </Button>\n                </Upload>\n                </div>                \n            </Modal> \n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps: IUploadImageProps) {\n        if (prevProps.showModal != this.props.showModal)\n        {\n             this.setState({\n                visible: this.props.showModal\n            }, () => {\n              setTimeout(() => this.disableUploadButton(), 100);\n            });\n        }    \n        \n        if (prevProps.topicId != this.props.topicId)\n        {\n          this.setState({\n            topicId: this.props.topicId\n          });\n        }\n    }\n}\n\nexport default UploadImage;\n\n\n\n","import React from \"react\";\nimport { Icon, message } from 'antd';\nimport './index.scss';\nimport UploadImage from \"./uploadImage\";\n\ninterface IAddTopicProps {\n  loginUser: any\n}\n\ninterface IAddTopicState {\n    visible: boolean;\n}\n\n\nclass AddTopic extends React.PureComponent<IAddTopicProps, IAddTopicState> {\n    upload_props: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false\n          }\n        }\n\n    showModal = () => {\n      if(this.props.loginUser === ''){\n        message.error('You need to login to post');\n      }\n      else{\n        this.setState({\n          visible: true\n        });\n      }\n        \n      };  \n\n      handleCancel = () => {\n        this.setState({\n          visible: false\n        });\n      };\n  \n      render() {\n        return (\n          <div id=\"add_topic\">\n              <div id=\"add_button\" onClick={ this.showModal }>\n                <Icon type=\"plus\"/>\n              </div>\n            <UploadImage \n              showModal={ this.state.visible } \n              hideModal={ this.handleCancel } \n              boxHeader=\"Upload new picture to start new topic\"/>\n          </div>\n        );\n      }\n}\n\nexport default AddTopic;","import {Route, BrowserRouter, Link}from 'react-router-dom';\nimport './header.scss';\nimport React from 'react';\nimport Login from './login';\nimport Logout from './logout'\nimport Register from './register';\nimport AddTopic from '../addTopic';\nimport { Menu, Dropdown, Avatar, Button, Badge } from 'antd';\n\nclass Header extends React.Component {\n   state = {\n        unread: 0\n    }\n\n    \n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/notifications/unread', {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                unread: data.length\n            })\n        })\n    }\n\n\n    render(){\n        const userMenu = (\n            <Menu>\n                <Menu.Item key=\"1\">\n                    <Link to=\"/user\"><Button type=\"link\" icon=\"picture\">My posts</Button></Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                    <Link to=\"/user/notifications\"><Button type=\"link\" icon=\"notification\">Notifications</Button><Badge count={this.state.unread} /></Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                    <Link to=\"/user/setting\"><Button type=\"link\" icon=\"setting\">Settings</Button></Link>\n                </Menu.Item>\n                <Menu.Item key=\"4\">\n                    <Logout ></Logout>\n                </Menu.Item>\n            </Menu>\n        );\n\n        if (this.props.isLogin) {\n            const avartarUrl = '../avatars/' + this.props.avatar+'.png'\n            return(\n                <div id='header'>\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <AddTopic loginUser={this.props.userName} />\n                    <div id='user_menu'>\n                        <Dropdown overlay={userMenu}>\n                            <div id=\"user_info\">\n                                <Badge count={this.state.unread} offset={[0,2]} >\n                                    <Avatar size={40} src={avartarUrl}/>\n                                </Badge>\n                                <span className=\"name\">{this.props.userName}</span>\n                            </div>\n                        </Dropdown>\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div id=\"header\">\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <AddTopic loginUser={this.props.userName} />\n                    <div id='login'>\n                    <BrowserRouter>\n                        <Link to =\"/login\" className=\"login\">Login</Link>\n                        <Link to =\"/register\" className=\"register\">Register</Link>\n                        <div>\n                            <Route path=\"/login\" component={Login}/>\n                            <Route path=\"/register\" component={Register}/>\n                        </div>\n                    </BrowserRouter>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Icon, Popover, message } from 'antd';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface ReactPanelProps {\n\ttopicId: string,\n\tyourReact: any,\n\tupdateReacts: any,\n\tdeleteReacts: any\n}\ninterface ReactPanelState {\n\tisLoading: boolean,\n\tyourReact: any,\n\ttypes: Array<string>\n}\n\nclass ReactPanel extends React.Component<ReactPanelProps, ReactPanelState>{\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t\tyourReact: this.props.yourReact,\n\t\t\ttypes: ['a', 'baiyan', 'aixin', 'daxiao', 'fadai', 'ganga', 'hanyan', 'liulei', 'xiaochulei', 'shengqi', 'feiwen', 'huaixiao', 'santiaoxian', 'yiwen', 'siliao']\n\t\t}\n\t}\n\n\tupdateReacts = this.props.updateReacts();\n\tdeleteReacts = this.props.deleteReacts();\n\n\tcomponentDidUpdate(prevReact: ReactPanelProps){\n\t\tif (this.props.yourReact !== prevReact.yourReact) {\n\t\t\tthis.setState({\n\t\t\t\tyourReact: this.props.yourReact\n\t\t\t})\n\t\t}\t\n\t}\n\n\treactToTopic = (to: string, emoji: string) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tconst curReact = this.state.yourReact;\n\t\t// add new react\n\t\tif (!curReact) {\n\t\t\tconst data = {\n\t\t\t\ttopic_id: to,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure'){\n\t\t\t\t\tmessage.error('You need to login to react');\n\t\t\t\t}\n\t\t\t\t// Already logged in \n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t// delete the react\n\t\telse if (curReact.emoji === emoji ) {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true\n\t\t\t})\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tyourReact: \"\",\n\t\t\t\t\tisLoading: false\n\t\t\t\t})\n\t\t\t\tthis.deleteReacts(data.deleteId);\n\t\t\t\tmessage.success('React Deleted Successfully');\n\t\t\t})\n\t\t}\n\t\t// update current react\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true\n\t\t\t})\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure') {\n\t\t\t\t\tconsole.log('not login yet');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Updated Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst EmojiList = (\n\t\t\t<div className=\"emoji_box\">\n\t\t\t\t{this.state.types.map(emoji => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={emoji} className={this.state.yourReact.emoji === emoji ? 'isActive' : ''} onClick={() => this.reactToTopic(this.props.topicId, emoji)}>\n\t\t\t\t\t\t\t<MyIcon type={'icon-' + emoji} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\n\t\tconst popoverHead = (\n\t\t\t<React.Fragment>\n\t\t\t\t<strong className=\"pop_head\">React</strong>\n\t\t\t\t{this.state.isLoading && \n\t\t\t\t\t<Icon type=\"loading\" style={{ color: '#1890ff'}}/>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\n\t\treturn (\n\t\t\t<Popover title={popoverHead} content={EmojiList} placement=\"bottom\">\n\t\t\t\t<Icon className=\"add_react\" type=\"smile\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} />\n\t\t\t</Popover>\n\t\t)\n\t}\n}\n\nexport default ReactPanel;","import React from 'react';\nimport { Link }from 'react-router-dom';\nimport { Avatar, Icon, Menu, Dropdown, message } from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadBox from '../addTopic/uploadImage';\nimport './card.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '/iconfont.js'\n});\n\ninterface cardProps {\n\tuser?: any,\n\tsmallPicUrl: string,\n\tname: string,\n\tavatar: number,\n\ttopicId: string,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface cardState {\n\treacts: Array<any>,\n\tshowUploadModal: boolean,\n\tshowUploadModalReply: boolean\n}\n\n\nclass Card extends React.Component<cardProps, cardState>  {\n\tstate ={\n\t\treacts: this.props.reacts,\n\t\tshowUploadModal: false,\n\t\tshowUploadModalReply: false\n\t}\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++){\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif(exist){\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\t\n\t}\n\n\tdeleteReacts = (deleteId: string) =>{\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++){\n\t\t\tif (updatedReact[i]._id === deleteId){\n\t\t\t\tupdatedReact.splice(i,1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n\t\tif(this.props.user.name === ''){\n\t\t\tmessage.error('You need to login to post');\n\t\t}\n\t\telse{\n\t\t\tthis.setState({\n\t\t\t\tshowUploadModal: true\n\t\t\t});\n\t\t}\n\t\t\n\t};  \n\t  \n\tshowModalReply = () => {\n\t\tif (this.state.reacts.length > 0)\n\t\t{\n\t\t\tmessage.error('You can\\'t change this picture because it has reacts');\n\t\t\treturn false;\n\t\t}\n \n\t\tthis.setState({\n\t\t\tshowUploadModalReply: true\n\t\t});\n\t}; \n\t  \n\thandleCancelUploadReply = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModalReply: false\n\t\t});\n\t};\n\n\thandleCancelUpload = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModal: false\n\t\t});\n\t};\n\n\thandleDeleteTopic = () => {\n\t\tconst currentTopic = {\n\t\t\ttopic_id: this.props.topicId\n\t\t}\n\t\tif(this.props.replies.length == 0) {\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/topics/', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(currentTopic)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === 'success'){\n\t\t\t\t\tmessage.success('Delete Successfully!')\n\t\t\t\t\tvar jump = setTimeout(function () { window.location.reload()}, 2000);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\t//message.error('You can\\'t delete this topic')\n\n\t\t\tvar url = process.env.REACT_APP_API_URL +'/topics';\n\t\t\tvar post_data = {\n\t\t\t  originalPicUrl: 'https://picchatbucket.s3-ap-southeast-2.amazonaws.com/content-removal.jpg',\n\t\t\t  smallPicUrl: 'https://picchatbucket.s3-ap-southeast-2.amazonaws.com/content-removal.jpg', \n\t\t\t  topic_id: this.props.topicId};\n\n\t\t\t  fetch(url, {\n\t\t\t\tmethod:'PUT',\n\t\t\t\tbody: JSON.stringify(post_data),\n\t\t\t\theaders: new Headers({\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t  })\n\t\t\t\t}).then(res=>res.json()).then(\n\t\t\t\t\tdata=>{\n\t\t\t\tmessage.success('Image was replaced with placeholder, because it contaied replies.');\n\t\t\t\tvar jump = setTimeout(function () { window.location.reload()}, 2000);\n\t\t\t}\n\t\t\t  )\n\n\t\t}\n\n\t}\n\n\trender() {\n\n\t\tconst settingMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item onClick={() => this.showModalReply()}>\n\t\t\t\t\t<Icon type=\"redo\"/>Update\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item onClick={() => this.handleDeleteTopic()}>\n\t\t\t\t\t<Icon type=\"delete\" />Delete\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"header_panel\">\n\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} size={40}/>\n\t\t\t\t\t\t<div className=\"name_date\">\n\t\t\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.props.user.name === this.props.name && \n\t\t\t\t\t\t<div className=\"settings\">\n\t\t\t\t\t\t\t<Dropdown overlay={settingMenu} placement=\"bottomCenter\">\n\t\t\t\t\t\t\t\t<Icon type=\"more\" />\n\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>\n\t\t\t\t\t\t<img src={this.props.smallPicUrl} alt={this.props.smallPicUrl}/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interact_box\">\n\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t<div className=\"current_reacts\">\n\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts}/>\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} onClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{this.props.replies.length > 0 &&\n\t\t\t\t\t<div className=\"replies\">\n\t\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>{this.props.replies.length} replies</Link>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModal } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUpload }\n\t\t\t\t\t\t   boxHeader=\"Upload new picture to reply on topic\"\n\t\t\t\t\t\t   topicId={this.props.topicId}/>\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModalReply } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUploadReply }\n\t\t\t\t\t\t   boxHeader=\"Update picture\"\n\t\t\t\t\t\t   topicId={this.props.topicId}\n\t\t\t\t\t\t   update={true}/>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './card';\nimport { Button, Menu, Dropdown, Tag, Icon, Spin } from 'antd';\nimport './index.scss';\n\n\ninterface topicListProps {\n\tuser: object\n}\n\ninterface topicListState {\n\tisLoading: boolean,\n\tsort: number,\n\ttopics: Array<any>,\n\ttags: string,\n\tpageSize: number,\n\tpage: number,\n\tcanLoad: boolean\n}\n\nclass TopicList extends React.Component<topicListProps, topicListState> {\n\tconstructor(props: any){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tsort: 1,\n\t\t\ttopics: [],\n\t\t\ttags: 'From New to Old',\n\t\t\tpageSize: 6,\n\t\t\tpage: 0,\n\t\t\tcanLoad: true\n\t\t}\n\t}\n\n\tshowFromNewtoOld = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif(reset){\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=1&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tsort: 1,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From New to Old',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromOldtoNew = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=2&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tsort: 2,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From Old to New',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromLowtoHigh = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=3&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tsort: 3,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From Low to High',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromHightoLow = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=4&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tsort: 4,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From High to Low',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\t\n\tloadMore = (sort: number) => {\n\t\tswitch (sort) {\n\t\t\tcase 1:\n\t\t\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.showFromOldtoNew(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.showFromLowtoHigh(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.showFromHightoLow(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\tcomponentDidMount() {\n\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, true)\n\t}\n\n\trender() {\n\t\tconst currentUser = this.props.user;\n\t\tconst recentMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={ ()=>this.showFromNewtoOld( this.state.pageSize, 0, true) }>New to Old</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={ ()=>this.showFromOldtoNew( this.state.pageSize, 0, true) }>Old to New</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\tconst popluarMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={() => this.showFromLowtoHigh( this.state.pageSize, 0, true) }>Low to High</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={() => this.showFromHightoLow( this.state.pageSize, 0, true)}>High to low</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\tconst topicList = this.state.topics.map( topic => {\n\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tuser={currentUser}\n\t\t\t\t\t\tkey={topic._id}\n\t\t\t\t\t\tsmallPicUrl={topic.smallPicUrl} \n\t\t\t\t\t\tname={topic.createBy.name} \n\t\t\t\t\t\tavatar={topic.createBy.avatar}\n\t\t\t\t\t\tcreateAt={topic.createAt}\n\t\t\t\t\t\ttopicId={topic._id}\n\t\t\t\t\t\treplies={topic.replies}\n\t\t\t\t\t\treacts={topic.reacts}\n\t\t\t\t\t\tyourReact={topic.yourReact ? topic.yourReact : '' }\n\t\t\t\t\t/>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"topic_list_tab\">\n\t\t\t\t\t<div className=\"sort_buttons\">\n\t\t\t\t\t\t<Dropdown overlay={recentMenu}>\n\t\t\t\t\t\t\t<Button ><Icon type=\"calendar\" />Recency</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t<Dropdown overlay={popluarMenu}>\n\t\t\t\t\t\t\t<Button className=\"popularity\"><Icon type=\"fire\" />Popularity</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sort_feedback\">\n\t\t\t\t\t\t<span className=\"sort\">Sort By:</span>\n\t\t\t\t\t\t<Tag color=\"gold\">{this.state.tags}</Tag>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"topic_list\">{topicList}</div>\n\t\t\t\t{this.state.isLoading &&\n\t\t\t\t\t(<div className=\"topic_list_loading_box\">\n\t\t\t\t\t\t<Icon type=\"loading\" style={{ color: '#1890ff', fontSize: '40px' }} />\n\t\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t\t</div>)\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{this.state.canLoad &&\n\t\t\t\t\t<Button id=\"load_more\" onClick={() => this.loadMore(this.state.sort)}>Loading more...</Button>\n\t\t\t\t}\n\t\t\t\t{!this.state.canLoad &&\n\t\t\t\t\t<div className=\"nomore\">\n\t\t\t\t\t\t<Icon style={{fontSize: '34px' }} type=\"build\" />\n\t\t\t\t\t\t<p>More pictures are coming</p>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t\t\n\t}\n}\n\nexport default TopicList;","import React from 'react';\nimport { Avatar, Icon, Dropdown, Menu, message} from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadBox from \"../addTopic/uploadImage\";\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n    scriptUrl: '/iconfont.js'\n});\n\ninterface replyPros {\n    loginUser: any,\n    topicId: string,\n    originalPicUrl: string,\n    name: string,\n    avatar: number,\n    createAt: string,\n    replies: Array<any>,\n    replyTo: string,\n    yourReact: any,\n    reacts: Array<any>\n}\n\ninterface replyState {\n    reacts: Array<any>,\n    visible: boolean,\n    showUploadModalReply: boolean\n}\n\nclass Subreplies extends React.Component<replyPros, replyState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            reacts: this.props.reacts,\n            visible: false,\n            showUploadModalReply: false\n        }\n    }\n\n    updateReacts = (newReact: any) => {\n        let exist = false;\n        let updatedReacts = this.state.reacts;\n        for (let i = 0; i < this.state.reacts.length; i++) {\n            let react = this.state.reacts[i];\n            if (react._id === newReact._id) {\n                exist = true;\n                updatedReacts[i].emoji = newReact.emoji;\n            }\n        }\n        if (exist) {\n            this.setState({\n                reacts: updatedReacts\n            })\n        }\n        else {\n            this.setState(currentState => ({\n                reacts: [...currentState.reacts, newReact]\n            }))\n        }\n    }\n\n    deleteReacts = (deleteId: string) => {\n        var updatedReact = this.state.reacts;\n        for (let i = 0; i < updatedReact.length; i++) {\n            if (updatedReact[i]._id === deleteId) {\n                updatedReact.splice(i, 1);\n                this.setState({\n                    reacts: updatedReact\n                })\n                return\n            }\n        }\n    }\n\n    showModal = () => {\n        if (!this.props.loginUser.name) {\n            message.error('You need to login to post');\n        }\n        else {\n            this.setState({\n                visible: true\n            });\n        }\t\n    };\n\n    handleCancel = () => {\n        this.setState({\n            visible: false\n        });\n    };\n\n    showModalReply = () => {\n        if (this.state.reacts.length > 0)\n\t\t{\n\t\t\tmessage.error('You can\\'t change this picture because it has reacts');\n\t\t\treturn false;\n\t\t}\n\n        this.setState({\n            showUploadModalReply: true\n        });\n    }; \n\n    handleCancelUploadReply = () => {\n        this.setState({\n            showUploadModalReply: false\n        });\n    };\n\n    handleDeleteTopic = () => {\n        const currentTopic = {\n            topic_id: this.props.topicId\n        }\n        if(this.props.replies.length == 0) {\n            fetch(process.env.REACT_APP_API_URL + '/topics/', {\n                method: 'DELETE',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(currentTopic)\n            })\n            .then(res => res.json())\n            .then(data => {\n                if (data.status === 'success'){\n                    message.success('Delete Successfully!')\n                    var jump = setTimeout(function () { window.location.reload() }, 2000);\n                }\n                \n            })\n        }\n        else{\n            //message.error('You can\\'t delete this topic')\n            var url = process.env.REACT_APP_API_URL +'/topics';\n\t\t\tvar post_data = {\n\t\t\t  originalPicUrl: 'https://picchatbucket.s3-ap-southeast-2.amazonaws.com/content-removal.jpg',\n\t\t\t  smallPicUrl: 'https://picchatbucket.s3-ap-southeast-2.amazonaws.com/content-removal.jpg', \n\t\t\t  topic_id: this.props.topicId};\n\n\t\t\t  fetch(url, {\n\t\t\t\tmethod:'PUT',\n\t\t\t\tbody: JSON.stringify(post_data),\n\t\t\t\theaders: new Headers({\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t  })\n\t\t\t\t}).then(res=>res.json()).then(\n\t\t\t\t\tdata=>{\n\t\t\t\tmessage.success('Image was replaced with placeholder, because it contaied replies.');\n\t\t\t\tvar jump = setTimeout(function () { window.location.reload()}, 2000);\n\t\t\t}\n\t\t\t  )\n        }\n\n    }\n\n    render() {\n        const settingMenu = (\n            <Menu>\n                <Menu.Item onClick={() => this.showModalReply()}>\n                    <Icon type=\"redo\" />Update\n\t\t\t\t</Menu.Item>\n                <Menu.Item onClick={() => this.handleDeleteTopic()}>\n                    <Icon type=\"delete\" />Delete\n\t\t\t\t</Menu.Item>\n            </Menu>\n        )\n        \n        return(\n            <div className=\"level3\" key={this.props.topicId}>\n                <div className=\"basic_info\">\n                    <div className=\"header_panel\">\n                        <div className=\"user_info\">\n                            <Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n                            <div className=\"name_date\">\n                                <strong>{this.props.name}</strong>\n                                <span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"replyto\">\n                        <span></span>\n                        <em>{this.props.replyTo}</em>\n                        <strong>Reply to</strong>\n                    </div>\n                </div>\n                \n                <div className=\"img_box\">\n                    <img src={this.props.originalPicUrl} />\n                    {this.state.reacts.length > 0 &&\n                        <div className=\"reacts_box\">\n                            {this.state.reacts.map(react => {\n                                return (\n                                    <span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n                                )\n                            })}\n                        </div>\n                    }\n                </div>\n                <div className=\"button_box\">\n                    {this.props.loginUser.name === this.props.name && \n                        <div className=\"settings\">\n                            <Dropdown overlay={settingMenu} placement=\"bottomCenter\">\n                                <Icon type=\"more\" />\n                            </Dropdown>\n                        </div>\n                    }\n                    <ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n                    <Icon\n                        className=\"add_reply\"\n                        type=\"picture\"\n                        theme=\"twoTone\"\n                        twoToneColor=\"#1890ff\"\n                        style={{ fontSize: '24px' }}\n                        onClick={this.showModal} />\n                    <UploadBox showModal={this.state.visible}\n                        hideModal={this.handleCancel}\n                        boxHeader=\"Upload new picture to reply on topic\"\n                        topicId={this.props.topicId} />\n\n                    <UploadBox \n\t\t\t\t\t\t   showModal={ this.state.showUploadModalReply } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUploadReply }\n\t\t\t\t\t\t   boxHeader=\"Update picture\"\n\t\t\t\t\t\t   topicId={ this.props.topicId }\n\t\t\t\t\t\t   update={ true }/>\n                </div>\n\n                \n            </div>\n        )\n    }\n}\n\nexport default Subreplies;","import React from 'react';\nimport { Avatar, Icon, Dropdown, Menu, message} from 'antd';\nimport ReactPanel from '../emoji';\nimport Subreplies from './sub-replies';\nimport UploadImage from \"../addTopic/uploadImage\";\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface replyPros {\n\tloginUser: any,\n\ttopicId: string,\n\toriginalPicUrl: string,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n\tyourReact: any,\n\treacts: Array<any>\n}\n\ninterface replyState {\n\treacts: Array<any>,\n\tvisible: boolean,\n\tshowUploadModalReply: boolean\n}\n\n\nclass Replies extends React.Component<replyPros, replyState> {\n\tconstructor(props: any) {\n        super(props);\n        this.state = {\n\t\t\treacts: this.props.reacts,\n\t\t\tvisible: false,\n\t\t\tshowUploadModalReply: false\n        }\n\t}\n\t\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n\t\tif (!this.props.loginUser.name) {\n\t\t\tmessage.error('You need to login to post');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tvisible: true\n\t\t\t});\n\t\t}\t\n\t};  \n\t\n\tshowModalReply = () => {\n\t\tif (this.state.reacts.length > 0)\n\t\t{\n\t\t\tmessage.error('You can\\'t change this picture because it has reacts');\n\t\t\treturn false;\n\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tshowUploadModalReply: true\n\t\t\t});\n\t\t}; \n\n\thandleCancelUploadReply = () => {\n\t\t\tthis.setState({\n\t\t\t\tshowUploadModalReply: false\n\t\t\t});\n\t\t};\n\t\n\thandleCancel = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: false\n\t\t\t});\n\t\t  };\n\n\thandleDeleteTopic = () => {\n\t\t\tconst currentTopic = {\n\t\t\t\ttopic_id: this.props.topicId\n\t\t\t}\n\t\t\tif(this.props.replies.length == 0) {\n\t\t\t\tfetch(process.env.REACT_APP_API_URL + '/topics/', {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(currentTopic)\n\t\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tif (data.status === 'success'){\n\t\t\t\t\t\tmessage.success('Delete Successfully!')\n\t\t\t\t\t\tvar jump = setTimeout(function () { window.location.reload() }, 2000);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//message.error('You can\\'t delete this topic')\n\t\t\t\tvar url = process.env.REACT_APP_API_URL +'/topics';\n\t\t\t\tvar post_data = {\n\t\t\t\t  originalPicUrl: 'https://picchatbucket.s3-ap-southeast-2.amazonaws.com/content-removal.jpg',\n\t\t\t\t  smallPicUrl: 'https://picchatbucket.s3-ap-southeast-2.amazonaws.com/content-removal.jpg', \n\t\t\t\t  topic_id: this.props.topicId};\n\t\n\t\t\t\t  fetch(url, {\n\t\t\t\t\tmethod:'PUT',\n\t\t\t\t\tbody: JSON.stringify(post_data),\n\t\t\t\t\theaders: new Headers({\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t  })\n\t\t\t\t\t}).then(res=>res.json()).then(\n\t\t\t\t\t\tdata=>{\n\t\t\t\t\tmessage.success('Image was replaced with placeholder, because it contaied replies.');\n\t\t\t\t\tvar jump = setTimeout(function () { window.location.reload()}, 2000);\n\t\t\t\t}\n\t\t\t\t  )\n\t\t\t}\n\t\n\t\t}\n\n\trender() {\n\t\tconst repliesList = this.props.replies.map( reply => {\n\t\t\treturn(\n\t\t\t\t<Subreplies \n\t\t\t\t\tkey={reply._id}\n\t\t\t\t\toriginalPicUrl={reply.originalPicUrl}\n\t\t\t\t\tname={reply.createBy.name}\n\t\t\t\t\tavatar={reply.createBy.avatar}\n\t\t\t\t\treplies={reply.replies}\n\t\t\t\t\tcreateAt={reply.createAt}\n\t\t\t\t\ttopicId={reply._id}\n\t\t\t\t\treacts={reply.reacts}\n\t\t\t\t\tyourReact={reply.yourReact ? reply.yourReact : ''}\n\t\t\t\t\treplyTo={reply.replyTo.createBy.name}\n\t\t\t\t\tloginUser={this.props.loginUser ? this.props.loginUser : {}}\n\t\t\t\t/>\n\t\t\t)\n\t\t}) \n\n\t\tconst settingMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item onClick={() => this.showModalReply()}>\n\t\t\t\t\t<Icon type=\"redo\"/> Update\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item onClick={() => this.handleDeleteTopic()}>\n\t\t\t\t\t<Icon type=\"delete\"/> Delete\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\t\t\n\t\treturn(\n\t\t\t<div className=\"single_reply\">\n\t\t\t\t<div className=\"level2\">\n\t\t\t\t\t<div className=\"header_panel\">\n\t\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n\t\t\t\t\t\t\t<div className=\"name_date\">\n\t\t\t\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t\t<img src={this.props.originalPicUrl} />\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"button_box\">\n\t\t\t\t\t\t{this.props.loginUser.name === this.props.name &&\n\t\t\t\t\t\t\t<div className=\"settings\">\n\t\t\t\t\t\t\t\t<Dropdown overlay={settingMenu} placement=\"bottomCenter\">\n\t\t\t\t\t\t\t\t\t<Icon type=\"more\" />\n\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tclassName=\"add_reply\"\n\t\t\t\t\t\t\ttype=\"picture\"\n\t\t\t\t\t\t\ttheme=\"twoTone\"\n\t\t\t\t\t\t\ttwoToneColor=\"#1890ff\"\n\t\t\t\t\t\t\tstyle={{ fontSize: '24px' }}\n\t\t\t\t\t\t\tonClick={this.showModal} />\n\t\t\t\t\t\t<UploadImage \n\t\t\t\t\t\t\tshowModal={ this.state.visible } \n\t\t\t\t\t\t\thideModal={ this.handleCancel } \n\t\t\t\t\t\t\tboxHeader=\"Upload new picture to reply\"\n\t\t\t\t\t\t\ttopicId={ this.props.topicId}/>\n\t\t\t\t\t\t<UploadImage \n\t\t\t\t\t\t   showModal={ this.state.showUploadModalReply } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUploadReply }\n\t\t\t\t\t\t   boxHeader=\"Update picture\"\n\t\t\t\t\t\t   topicId={ this.props.topicId }\n\t\t\t\t\t\t   update={ true }/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{repliesList}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Replies;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Avatar, Icon, Empty, Menu, Dropdown, message  } from 'antd';\nimport Replies from './replies';\nimport './index.scss';\nimport ReactPanel from '../emoji';\nimport UploadBox from '../addTopic/uploadImage';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface getIdProps {\n\tid: string,\n}\n\ninterface topicProps extends RouteComponentProps<getIdProps>{\n\n}\n\ninterface replies {\n\t_id: string,\n\toriginalPicUrl: string,\n\tcreateBy: any,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface detailState {\n\tloginUser: any,\n\tisLoading: boolean,\n\tid: string,\n\tname: string,\n\tavatar: number,\n\toriginalPicUrl: string,\n\tcreateAt: string,\n\treplies: Array<replies>,\n\treacts: Array<any>,\n\tyourReact: any,\n\tshowUploadModal: boolean,\n\tshowUploadModalReply: boolean\n}\n\nclass TopicDetail extends React.Component< topicProps, detailState> {\n\tconstructor(props: topicProps){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloginUser: {},\n\t\t\tisLoading: true,\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tavatar: 1,\n\t\t\toriginalPicUrl: '',\n\t\t\tcreateAt: '',\n\t\t\treplies: [],\n\t\t\treacts: [],\n\t\t\tyourReact: '',\n\t\t\tshowUploadModal: false,\n\t\t\tshowUploadModalReply: false\n\t\t}\n\t}\n\n\tshowModal = () => {\n\t\tif (!this.state.loginUser.name) {\n\t\t\tmessage.error('You need to login to post');\n\t\t}\n\t\telse{\n\t\t\tthis.setState({\n\t\t\t\tshowUploadModal: true\n\t\t\t});\n\t\t}\n\t}; \n\n\tshowModalReply = () => {\t\t\n\t\tif (this.state.reacts.length > 0)\n\t\t{\n\t\t\tmessage.error('You can\\'t change this picture because it has reacts');\n\t\t\treturn false;\n\t\t}\n\n        this.setState({\n\t\t\tshowUploadModalReply: true\n        });\n\t}; \n\n\thandleCancelUpload = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModal: false\n\t\t});\n\t};\n\n\thandleCancelUploadReply = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModalReply: false\n\t\t});\n\t};\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\t\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\thandleDeleteTopic = () => {\n\t\tconst currentTopic = {\n\t\t\ttopic_id: this.state.id\n\t\t}\n\t\tif(this.state.replies.length == 0) {\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/topics/', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(currentTopic)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === 'success'){\n\t\t\t\t\tmessage.success('Delete Successfully!')\n\t\t\t\t\tvar jump = setTimeout(function () { window.location.href='/'}, 2000);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\t//message.error('You can\\'t delete this topic')\n\t\t\tvar url = process.env.REACT_APP_API_URL +'/topics';\n\t\t\tvar post_data = {\n\t\t\t  originalPicUrl: 'https://picchatbucket.s3-ap-southeast-2.amazonaws.com/content-removal.jpg',\n\t\t\t  smallPicUrl: 'https://picchatbucket.s3-ap-southeast-2.amazonaws.com/content-removal.jpg', \n\t\t\t  topic_id: this.state.id};\n\n\t\t\t  fetch(url, {\n\t\t\t\tmethod:'PUT',\n\t\t\t\tbody: JSON.stringify(post_data),\n\t\t\t\theaders: new Headers({\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t  })\n\t\t\t\t}).then(res=>res.json()).then(\n\t\t\t\t\tdata=>{\n\t\t\t\tmessage.success('Image was replaced with placeholder, because it contaied replies.');\n\t\t\t\tvar jump = setTimeout(function () { window.location.reload()}, 2000);\n\t\t\t}\n\t\t\t  )\n\t\t}\n\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch(process.env.REACT_APP_API_URL+'/topics/single?id='+ this.props.match.params.id)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconst curTopic = data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tid: curTopic._id,\n\t\t\t\t\tname: curTopic.createBy.name,\n\t\t\t\t\tavatar: curTopic.createBy.avatar,\n\t\t\t\t\toriginalPicUrl: curTopic.originalPicUrl,\n\t\t\t\t\tcreateAt: curTopic.createAt,\n\t\t\t\t\treplies: curTopic.replies,\n\t\t\t\t\treacts: curTopic.reacts,\n\t\t\t\t\tyourReact: curTopic.yourReact ? curTopic.yourReact : \"\"\n\t\t\t\t})\n\t\t\t})\n\n\n\t\tfetch(process.env.REACT_APP_API_URL + '/users')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === 'success') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloginUser: {\n\t\t\t\t\t\t\tname: data.user.name,\n\t\t\t\t\t\t\temail: data.user.email,\n\t\t\t\t\t\t\tid: data.user.id,\n\t\t\t\t\t\t\tavatar: data.user.avatar,\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloginUser: {}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t}\n\n\trender() {\n\t\tconst repliesList = this.state.replies.map( reply => {\n\t\t\treturn (\n\t\t\t\t<Replies\n\t\t\t\t\tkey={reply._id}\n\t\t\t\t\toriginalPicUrl={reply.originalPicUrl}\n\t\t\t\t\tname={reply.createBy.name}\n\t\t\t\t\tavatar={reply.createBy.avatar}\n\t\t\t\t\treplies={reply.replies}\n\t\t\t\t\tcreateAt={reply.createAt}\n\t\t\t\t\ttopicId={reply._id}\n\t\t\t\t\treacts={reply.reacts}\n\t\t\t\t\tyourReact={reply.yourReact ? reply.yourReact : ''}\n\t\t\t\t\tloginUser={this.state.loginUser ? this.state.loginUser: {} }\n\t\t\t\t/>\n\n\t\t\t)\n\t\t})\n\n\t\tconst settingMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item onClick={() => this.showModalReply()}>\n\t\t\t\t\t<Icon type=\"redo\"/> Update\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item onClick={() => this.handleDeleteTopic()}>\n\t\t\t\t\t<Icon type=\"delete\" />Delete\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id=\"topic_detail\">\n\t\t\t\t\t<div className=\"header_panel\">\n\t\t\t\t\t\t<div id=\"author_info\">\n\t\t\t\t\t\t\t{this.state.isLoading &&\n\t\t\t\t\t\t\t\t<div className=\"loading_box\">\n\t\t\t\t\t\t\t\t\t<Icon type=\"loading\" style={{ color: '#1890ff', fontSize: '40px' }} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{!this.state.isLoading &&\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Avatar src={'../avatars/' + this.state.avatar + '.png'} size={40}/>\n\t\t\t\t\t\t\t\t\t<div className=\"name_date\">\n\t\t\t\t\t\t\t\t\t\t<strong>{this.state.name}</strong>\n\t\t\t\t\t\t\t\t\t\t<span className=\"date\">posted on {this.state.createAt.substr(0, 10)}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.state.loginUser.name === this.state.name &&\n\t\t\t\t\t\t\t<div className=\"settings\">\n\t\t\t\t\t\t\t\t<Dropdown overlay={settingMenu} placement=\"bottomCenter\">\n\t\t\t\t\t\t\t\t\t<Icon type=\"more\" />\n\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div id=\"main_pic\">\n\t\t\t\t\t\t{this.state.isLoading &&\n\t\t\t\t\t\t\t<div className=\"loading_box\">\n\t\t\t\t\t\t\t\t<Icon type=\"loading\" style={{ color: '#1890ff', fontSize: '40px' }} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{!this.state.isLoading &&\n\t\t\t\t\t\t\t<img src={this.state.originalPicUrl} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.state.id} yourReact={this.state.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} onClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"replies_list\">\n\t\t\t\t\t<h2>Replies</h2>\n\t\t\t\t\t{repliesList.length == 0 && \n\t\t\t\t\t\t<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"There is no reply yet\" />\n\t\t\t\t\t}\n\t\t\t\t\t{repliesList}\n\t\t\t\t</div>\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModal } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUpload }\n\t\t\t\t\t\t   boxHeader=\"Upload new picture to reply on topic\"\n\t\t\t\t\t\t   topicId={ this.state.id }/>\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModalReply } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUploadReply }\n\t\t\t\t\t\t   boxHeader=\"Update picture\"\n\t\t\t\t\t\t   topicId={ this.state.id }\n\t\t\t\t\t\t   update={ true }/>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default TopicDetail;","import React from 'react';\nimport { Icon, List, Avatar } from 'antd'; \nimport './index.scss'\n\ninterface boardState {\n    filter: string,\n    userList: Array<any>\n}\n\nclass LeaderBoard extends React.Component<{}, boardState> {\n    state = {\n        filter: 'reacts',\n        userList: []\n    }\n\n    showMostReacts = () => {\n        this.setState({\n            filter: 'reacts'\n        })\n        fetch(process.env.REACT_APP_API_URL +'/users/leaderboard?type=mostReacts')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    showMostTopics = () => {\n        this.setState({\n            filter: 'topics'\n        })\n        fetch(process.env.REACT_APP_API_URL + '/users/leaderboard?type=mostTopics')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    componentDidMount(){\n        this.showMostReacts()\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n                <h3><Icon type=\"unordered-list\" />Leaderboard</h3>\n                <div className=\"filter\">\n                    <button className={this.state.filter === 'reacts' ? 'isActive' : ''} onClick={this.showMostReacts}><Icon type=\"smile\" /> Reacts</button>\n                    <button className={this.state.filter === 'topics' ? 'isActive' : ''} onClick={this.showMostTopics}><Icon type=\"picture\" /> Topics</button>\n                </div>\n                <List\n                    id=\"leaderboard_list\"\n                    dataSource={this.state.userList}\n                    renderItem={(item: any) => (                \n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={<Avatar src={'../avatars/' + item.avatar + '.png'}/>}\n                                title={item.name}\n                                key= {item._id}\n                                description={this.state.filter === 'reacts' ? ('React Times: ' + item.reactTimes) : ('Post Topics: ' + item.topicTimes)}\n                            />\n                        </List.Item>                     \n                    )}>\n\n                </List>\n            </React.Fragment>\n            \n        )\n    }\n}\n\nexport default LeaderBoard;","import React from 'react';\nimport { Layout } from 'antd';\nimport { Route, Switch } from 'react-router';\nimport TopicList from '../topicList';\nimport TopicDetail from '../topicDetail';\nimport LeaderBoard from '../leaderboard';\n\nconst { Sider, Content } = Layout;\n\ninterface topicPanelProps {\n    user: any\n}\n\nclass TopicPanel extends React.Component<topicPanelProps> {\n    render() {\n        return(\n            <Layout>\n                <Content>\n                    <Switch>\n                        <Route path=\"/topics_detail/:id\" component={TopicDetail} />\n                        <Route path=\"/\" exact render={() => <TopicList user={this.props.user} />} />\n                    </Switch>\n                </Content>\n                <Sider className=\"leaderboard\" breakpoint=\"lg\" collapsedWidth=\"0\" reverseArrow={true} ><LeaderBoard /></Sider>\n            </Layout>\n        )\n    }\n}\n\nexport default TopicPanel;","import React from 'react';\nimport Card from '../topicList/card';\nimport { Empty } from 'antd';\nimport './index.scss';\n\ninterface MyPostsProps {\n    user: any\n}\n\ninterface MyPostsState {\n    topics: Array<any>\n}\n\nclass MyPosts extends React.Component<MyPostsProps, MyPostsState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n        const topicList = this.state.topics.map(topic => {\n            return (\n                <Card\n                    user={this.props.user}\n                    key={topic._id}\n                    smallPicUrl={topic.smallPicUrl}\n                    name={topic.createBy.name}\n                    avatar={topic.createBy.avatar}\n                    createAt={topic.createAt}\n                    topicId={topic._id}\n                    replies={topic.replies}\n                    reacts={topic.reacts}\n                    yourReact={topic.yourReact ? topic.yourReact : ''}\n                />\n            )\n        })\n\n        return ( \n            <React.Fragment>\n                <h2>My Posts</h2>\n                <div id=\"user_topic_list\">\n                    {topicList.length == 0 &&\n                        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"You haven't posted any topics\" />\n                    }\n                    {topicList}\n                </div> \n            </React.Fragment> \n        )\n    }\n}\n\nexport default MyPosts;","import React from 'react';\nimport { List, Avatar, Empty, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\nimport { thisExpression } from '@babel/types';\n\nconst MyIcon = Icon.createFromIconfontCN({\n    scriptUrl: '/iconfont.js'\n});\n\ninterface NotificationState {\n    notifications: Array<any>\n}\n\nclass Notification extends React.Component<{}, NotificationState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            notifications: []\n        }\n    }\n\n    getAllNoti = () => {\n        fetch(process.env.REACT_APP_API_URL + '/notifications/toUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    notifications: data\n                })\n            })\n    }\n\n    componentDidMount() {\n        this.getAllNoti()\n    }\n\n    markAsRead = (notification_id: string) => {\n        const data: any = {\n            notification_id: notification_id\n        }\n        fetch(process.env.REACT_APP_API_URL + '/notifications/markread', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n        .then(res => res.json())\n        .then(data => {\n            this.getAllNoti()\n        })\n    }\n\n    render() {\n        if(this.state.notifications.length>0){\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <div id=\"notifications\">\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={this.state.notifications}\n                            renderItem={item => (\n                                <List.Item className={item.isRead == false ? 'unread' : ''}>\n                                    <List.Item.Meta\n                                        avatar={<Avatar src={'../avatars/' + item.fromUser.avatar + '.png'} />}\n                                        title={'You have a new ' + item.type}\n                                        description={\n                                            <React.Fragment>\n                                                <strong className=\"from\">{item.fromUser.name}</strong>\n                                                <p className=\"text\">{'has reacted to your picture with '}</p>\n                                                <MyIcon type={'icon-' + item.content} />\n                                                <Link to={`/topics_detail/${item.belongTo}`}>Link</Link>\n                                                {item.isRead === false &&\n                                                    <em onClick={() => this.markAsRead(item._id)}><Icon type=\"highlight\" />Mark as read</em>\n                                                }\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    </div>\n                </React.Fragment>\n            )\n        }\n        else{\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"You have no notifications yet\" />\n                </React.Fragment>\n            ) \n        }\n        \n    }\n}\n\nexport default Notification;","import React from 'react';\nimport { Avatar, Button, message } from 'antd';\nimport './index.scss';\n\ninterface MySettingProps {\n    user: any\n}\n\ninterface MySettingState {\n    onChanging: boolean,\n    avatar?: number\n}\n\nclass MySetting extends React.Component<MySettingProps, MySettingState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            onChanging: false,\n            avatar: this.props.user.avatar\n        }\n    }\n\n    swtichOnAvatarList = () => {\n        this.setState({\n            onChanging: !this.state.onChanging\n        })\n    }\n\n    onChangeAvatar = (key:any) => {\n       this.setState({\n           avatar: key\n       })\n    }\n\n    onSubmit = () => {\n        const newAvatar = {\n            avatar: this.state.avatar\n        }\n        fetch(process.env.REACT_APP_API_URL + '/users', {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(newAvatar)\n        })\n        .then(res => res.json())\n        .then(data => {\n            if (data.status === 'success') {\n                message.success('Avatar updated Successfully!')\n            }\n        })\n    }\n\n    render() {\n        const avatarList = [];\n        for (let i = 1; i <= 16; i++) {\n            avatarList.push(<div key={i} onClick={() => this.onChangeAvatar(i)}><Avatar size={64} src={'../avatars/' + i + '.png'}/></div>)\n        }\n\n        return (\n            <React.Fragment>\n                <h2>My Settings</h2>\n                <div id=\"user_setting\">\n                    <p>Change your avatar:</p>\n                    <div className=\"currentAvatar\">\n                        <div className=\"avatar_display\" onClick={() => this.swtichOnAvatarList()}>\n                            <Avatar className=\"avatar\" size={64} src={'../avatars/' + this.state.avatar + '.png'} />\n                        </div>\n                        <Button className=\"save\" type=\"primary\" onClick={this.onSubmit}>Save</Button>\n                    </div>\n                    { this.state.onChanging && \n                        <div className=\"avatar_list\">\n                            {avatarList}\n                        </div>\n                    }\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MySetting;","import React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\nimport './index.scss';\n\nclass UserPanelMenu extends React.Component<RouteComponentProps> {\n    \n\n    render() {\n        return (\n            \n            <Menu \n                id=\"user_panel_menu\"\n                defaultSelectedKeys={['/user']}\n                theme=\"light\"\n                mode=\"inline\"\n                selectedKeys={[this.props.location.pathname]}\n            >\n                <Menu.Item key=\"/user\">\n                    <Link to=\"/user\"><Icon type=\"picture\" /><span>My posts</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"/user/notifications\">\n                    <Link to=\"/user/notifications\"><Icon type=\"notification\" /><span>Notifications</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"/user/setting\">\n                    <Link to=\"/user/setting\"><Icon type=\"setting\" /><span>Settings</span></Link>\n                </Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default UserPanelMenu;","import React from 'react';\nimport MyPosts from './mypost';\nimport Notification from './notifications';\nimport Setting from './setting';\nimport UserPanelMenu from './menu';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { Route, Redirect } from 'react-router';\n\nconst { Sider, Content } = Layout;\n\ninterface userPanelProps {\n    user: any\n}\n\ninterface userPanelState {\n    topics: Array<any>\n}\n\nclass UserPanel extends React.Component<userPanelProps, userPanelState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n\n\n    render() {\n        if(this.props.user.name !== ''){\n            return (\n                <Layout>\n                    <Sider width={240} style={{ background: '#fff' }}>\n                        <Route path=\"/user\" component={UserPanelMenu}></Route>\n                    </Sider>\n                    <Content>\n                        <div id=\"user_panel\">\n                            <Route path=\"/user\" exact render={() => <MyPosts user={this.props.user} />} />\n                            <Route path=\"/user/notifications\" component={Notification} />\n                            <Route path=\"/user/setting\" render={() => <Setting user={this.props.user} />}/>\n                        </div>\n                    </Content>\n                </Layout>\n            )\n        }\n        else{\n            return (<Redirect to=\"/\" />)\n        }\n        \n    }\n}\n\nexport default UserPanel;","import React from 'react';\nimport { Icon } from 'antd';\nimport './index.scss';\n\nclass Footer extends React.Component {\n    render() {\n        return(\n            <footer>\n                <div className=\"footer-logo\">\n                    <img src=\"/images/logo-footer.png\" />\n                </div>\n                <div className=\"copyright\">\n                    <p>Made with <Icon type=\"heart\" theme=\"filled\" style={{color: '#eb2f96'}}/> at UTS</p>\n                </div>\n            </footer>\n        ) \n    }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './header';\nimport TopicPanel from './topic';\nimport UserPanel from './user';\nimport Footer from './footer';\nimport { Affix, BackTop, Icon} from 'antd';\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Switch }from 'react-router-dom';\n\ninterface currentUser {\n\tuser: {\n\t\tname: string,\n\t\temail: string,\n\t\tid: string,\n\t\tavatar: string\n\t},\n\tisLogin?: boolean\n}\n\n\nclass App extends React.Component<{}, currentUser> {\n\tstate = {\n\t\tuser: {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tid: '',\n\t\t\tavatar:''\n\t\t},\n\t\tisLogin: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getLoginUser(); \n\t}\n\n\tgetLoginUser= () =>{\n\t\tfetch(process.env.REACT_APP_API_URL+'/users')\n\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.status === 'success'){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\tname: data.user.name,\n\t\t\t\t\t\t\temail: data.user.email,\n\t\t\t\t\t\t\tid: data.user.id,\n\t\t\t\t\t\t\tavatar: data.user.avatar,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLogin: true\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLogin: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\" id='App'>\n\t\t\t\t\t<Affix>\n\t\t\t\t\t\t<Header userName={this.state.user.name} isLogin={this.state.isLogin} avatar={this.state.user.avatar}></Header>\n\t\t\t\t\t</Affix>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/user\" render={() => <UserPanel user={this.state.user} />} />\n\t\t\t\t\t\t<Route path=\"/\" render={() => <TopicPanel user={this.state.user} />} />\n\t\t\t\t\t</Switch>\t\t\t\t\t\n\t\t\t\t\t<BackTop><div className=\"ant-back-top-inner\"><Icon type=\"arrow-up\" /></div></BackTop>\n\t\t\t\t\t<Footer/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n\n}\n\n export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}