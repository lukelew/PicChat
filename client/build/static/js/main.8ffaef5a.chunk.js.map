{"version":3,"sources":["header/login.jsx","header/logout.jsx","header/register.jsx","addTopic/uploadImage.tsx","addTopic/index.tsx","header/index.jsx","emoji/index.tsx","topicList/card.tsx","topicList/index.tsx","topicDetail/sub-replies.tsx","topicDetail/replies.tsx","topicDetail/index.tsx","leaderboard/index.tsx","topic/index.tsx","user/mypost.tsx","user/notifications.tsx","user/menu.tsx","user/index.tsx","footer/index.tsx","App.tsx","index.tsx"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClose","setState","visible","isLogin","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","compareToUserEmail","rule","value","callback","post_data","email","fetch","process","method","body","JSON","stringify","headers","Headers","Content-Type","then","res","text","data","parse","status","result","postData","state","password","json","user","login_username","name","message","success","window","location","reload","error","target","getFieldDecorator","path","pathname","query","id","react_default","a","createElement","react_router","to","drawer","title","width","es_form","onSubmit","className","Item","hasFeedback","validateStatus","rules","required","type","validator","input","prefix","icon","style","color","placeholder","onChange","handleChangeEmail","bind","handleChangePassword","es_button","htmlType","onClick","React","Component","Form","create","Logout","logout","isLogout","Fragment","Register","cancel","compareToUserName","dataBack","handleConfirmBlur","confirmDirty","compareToFirstPassword","getFieldValue","validateToNextPassword","force","avatar","isRegister","Vertified","changeAvatar","newAvatar","closeAvatar","showAvatar","_this2","avatarUrl","avatarList","_loop","i","push","key","size","src","subTitle","extra","assign","labelCol","xs","span","sm","wrapperCol","label","display","whitespace","handleChangeName","min","Password","onBlur","divider","href","UploadImage","showModal","postTopic","url","topicId","originalPicUrl","img_url_original","replyTo","smallPicUrl","img_url_small","fileList","hideModal","handleCancel","info","toConsumableArray","slice","file","response","modal","boxHeader","okText","onOk","onCancel","upload","action","onImageUpload","prevProps","AddTopic","upload_props","uploadImage","PureComponent","Header","menu","react_router_dom","header_logout","avartarUrl","src_addTopic","dropdown","overlay","badge","count","offset","userName","component","MyIcon","Icon","createFromIconfontCN","scriptUrl","ReactPanel","updateReacts","deleteReacts","reactToTopic","emoji","curReact","yourReact","react_id","_id","Content-type","deleteId","newReact","topic_id","types","prevReact","EmojiList","map","popover","content","placement","theme","twoToneColor","fontSize","Card","reacts","showUploadModal","exist","updatedReacts","length","currentState","concat","updatedReact","splice","handleCancelUpload","handleDeleteTopic","currentTopic","replies","setTimeout","settingMenu","createAt","substr","alt","react","card_MyIcon","src_emoji_0","TopicList","showFromNewtoOld","page","reset","isLoading","topics","sort","tags","canLoad","pageSize","showFromOldtoNew","showFromLowtoHigh","showFromHightoLow","loadMore","currentUser","recentMenu","popluarMenu","topicList","topic","topicList_card","createBy","tag","spin","tip","Subreplies","Replies","repliesList","reply","sub_replies","replies_MyIcon","TopicDetail","match","params","curTopic","_this3","topicDetail_MyIcon","empty","image","Empty","PRESENTED_IMAGE_SIMPLE","description","LeaderBoard","filter","userList","showMostReacts","showMostTopics","list","dataSource","renderItem","item","Meta","reactTimes","topicTimes","Sider","Layout","Content","TopicPanel","layout","exact","render","src_topicList_0","breakpoint","collapsedWidth","reverseArrow","src_leaderboard","MyPosts","Notification","notifications","itemLayout","fromUser","notifications_MyIcon","atTopic","UserPanelMenu","defaultSelectedKeys","mode","selectedKeys","UserPanel","user_Sider","background","user_Content","mypost","Footer","App","getLoginUser","affix","src_header","src_user","src_topic","back_top","src_footer","ReactDOM","src_App_0","document","querySelector"],"mappings":"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","file":"static/js/main.8ffaef5a.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon, Input,Drawer,message} from 'antd';\nimport './login.scss';\nimport 'antd/dist/antd.css';\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { \n        isLogin: false,\n        login_username: '',\n        visible: true,\n        email:'',\n        password:'',\n\n        result:'', //database search result\n    };\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n      isLogin: true,\n    });\n\n  };\n\n  handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n          if (!err) {\n              console.log('Received values of form: ', values);\n          }\n      })\n  };\n\n  //judge email whether exists\n  handleChangeEmail(e){\n      this.setState({\n          email: e.target.value\n      })\n  };\n  compareToUserEmail = (rule, value, callback) =>{\n    let url = process.env.REACT_APP_API_URL + '/users/register';\n    let post_data = { \n        email: value,\n    };\n    fetch(url,{\n        method:'POST',\n        body: JSON.stringify(post_data),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })\n    }).then(res=>res.text().then(\n        data=>{\n            var dataBack=JSON.parse(data);\n            //register status and email address vertify\n            if(dataBack.status ===\"failure\"){\n                this.setState({\n                    result: 'success'\n                })\n            }else{\n                callback('This email do not exist.');\n            }\n        }\n    ))\n}\n\n  handleChangePassword(e){\n      this.setState({\n          password: e.target.value\n      })\n  };\n\n  //Post_data_login\n    postData = () => {\n        let url = process.env.REACT_APP_API_URL +'/users/login';\n        let post_data = { \n          email: this.state.email,\n          password: this.state.password\n        };\n\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res=>res.json()).then(\n            data=>{\n            //后面改成验证邮箱和密码是否匹配。密码部分未写\n                if(data.user.email===this.state.email){\n                  console.log(data);\n                  this.setState({\n                        isLogin: true,\n                        login_username: data.user.name\n                  });\n                  message.success('Login Successfully');\n                  window.location.reload();\n                }\n                else{\n                    console.log(data);\n                    this.setState({\n                        isLogin: false\n                    });\n                    message.error('Can\\'t login');\n                    window.location.reload();\n                } \n            }\n        )\n    };\n\nrender() {\n    const { getFieldDecorator } = this.props.form;\n\n\n\n    //pass user's data\n    var datapass={name: this.state.login_username,email: this.state.email,id:'',status: true}\n    var path={\n        pathname: '/',\n        query: datapass\n    };\n    \n    if(this.state.isLogin){\n        return <Redirect to= {path}/> \n    }\n    else{\n        return (\n            <div id='login'>\n                <div id='login_form'>\n                    <Drawer\n                        title=\"Login\"\n                        width={360}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\" >\n                        {/*login_email */}\n                        <Form.Item  hasFeedback validateStatus= {this.state.result}>\n                            {getFieldDecorator('eamil', {\n                                rules: [\n                                    {required: true, message: 'Please input your email.'},\n                                    {type: 'email', message: 'Please input email‘s format!' },\n                                    {validator: this.compareToUserEmail}],\n                              })(\n                                <Input\n                                    prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Email\"\n                                    onChange={this.handleChangeEmail.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_password*/}\n                        <Form.Item  hasFeedback>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: 'Please input your Password!' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={this.handleChangePassword.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_submit*/}\n                        <Form.Item>\n                          {/* <a className=\"login-form-forgot\" href=\"/register\">Forgot password?</a> */}\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.postData}>Login</Button>\n\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                </div>\n            </div>\n        );\n    }\n  }\n};\nexport default Form.create()(Login);","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { message, Button} from 'antd';\nimport { Redirect } from 'react-router';\nimport './logout.scss';\n\n\nclass Logout extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            isLogout: false,\n            login_username: '',\n            email:'',\n        };\n    }\n\n\n    logout=()=>{\n        let url = process.env.REACT_APP_API_URL + '/users/logout';\n        fetch(url,{\n            method:'Get',\n            }).then(res=>res.json()).then(\n                data=>{\n                    console.log(data);\n                    this.setState({\n                        isLogout: true,\n                    })\n                    message.success('Login success');\n                    window.location.reload();\n                    console.log('logout success',this.state.isLogout)\n                }\n            )\n    };\n    render(){\n        if(this.state.isLogout)\n        {   \n            var path={pathname:'/'};\n            return <Redirect to= {path}/>\n        }\n        else{\n            return(\n                <React.Fragment>\n                    <Button id=\"logout_button\" onClick={this.logout} type=\"link\" icon=\"logout\">Logout</Button>\n                </React.Fragment>\n            );\n        }\n\n    }\n}\nexport default Logout;\n    \n\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon,Input,Drawer,Avatar,Result, Divider} from 'antd';\nimport './register.scss';\nimport 'antd/dist/antd.css';\nimport { string } from 'prop-types';\n// import Check_Login from './checkLogin'\n\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            email: '',\n            name: '',\n            password: '',\n            avatar: 1,\n\n            showAvatar: 'none',\n            closeAvatar:'',\n\n            confirmDirty: false,\n            visible: true,\n            cancel: false, //back to home page\n            isRegister: false, //register success\n\n            result: '',//database search result\n        };\n    }\n    \n    onClose = () => {\n        this.setState({\n        visible: false,\n        // isRegister: true,\n        cancel: true\n        });\n    };\n\n    \n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n          }\n        });\n      };\n\n    //judge name whether exists\n    handleChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        })\n    };\n    compareToUserEmail = (rule, value, callback) =>{\n        let url = process.env.REACT_APP_API_URL + '/users/register';\n        let post_data = { \n            email: value,\n        };\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>res.text().then(\n            data=>{\n                var dataBack=JSON.parse(data);\n                //register status and email address vertify\n                if(dataBack.status===\"failure\"){\n                    callback('This email already existed.');\n                }else{\n                    this.setState({\n                        result: 'success'\n                    })\n                }\n            }\n        ))\n    }\n\n\n    //judge name whether exists\n    handleChangeName(e){\n        this.setState({\n            name: e.target.value\n        })\n    };\n\n    compareToUserName = (rule, value, callback) =>{\n        let url = process.env.REACT_APP_API_URL + '/users/register';\n        let post_data = { \n            // email: this.state.email,\n            name: value,\n        };\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>\n                res.text().then(\n                    data=>{\n                        var dataBack=JSON.parse(data);\n                        console.log(dataBack);\n                        //register status and email address vertify\n                        if(dataBack.status===\"failure\"){\n                            callback('This username already existed.');\n\n                        }else{\n                            this.setState({\n                                result: 'success'\n                            })\n                        }\n                    }\n                )     \n            )\n    }\n\n    //judge confirm password\n    \n    handleChangePassword(e){\n        this.setState({\n            password: e.target.value\n        })\n    };\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    \n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Not the same passowrd!');\n        } else {\n          callback('correct!');\n        }\n    };\n    \n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      };\n\n    //Post_data_register\n    postData = () => {\n        let url = process.env.REACT_APP_API_URL + '/users/register';\n        let post_data = { \n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password,\n            avatar: this.state.avatar\n        };\n\n        //post register user info\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>res.text().then(\n            data=>{\n                var dataBack=JSON.parse(data);\n                //register status and email address vertify\n                if(dataBack.status===\"success\"){\n                    this.setState({\n                        isRegister: true,\n                    })\n                    console.log(this.state.isRegister,'in')\n                    // window.location.reload();\n                }\n            }\n        ))\n    };\n    //control vertify page\n    Vertified=()=>{\n        this.setState({\n            cancel: true,\n        })\n    }\n    \n    //change avatar\n    changeAvatar = (newAvatar)=>{\n        this.setState({\n            avatar: newAvatar,\n            closeAvatar:'',\n            showAvatar:'none'\n        })\n    }\n\n    showAvatar=()=>{\n        this.setState({\n            closeAvatar: 'none',\n            showAvatar:''\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const avatarUrl= '../avatars/'+this.state.avatar+'.png';\n\n        const avatarList = [];\n        for(let i=1; i<=16; i++){\n            avatarList.push(<Avatar key={i} size=\"64\" src={'../avatars/'+ i +'.png'} onClick={() => this.changeAvatar(i)} />)\n        }\n\n\n        const formItemLayout = {\n            labelCol: {\n              xs: { span: 24 },\n              sm: { span: 8 },\n            },\n            wrapperCol: {\n              xs: { span: 24 },\n              sm: { span: 16 },\n            },\n          };\n\n        if(this.state.cancel){\n            return <Redirect to=\"/\" />\n          }\n        else if (this.state.isRegister){\n                return (\n                    <div id='successRegister'>\n                        <Drawer\n                            title=\"Register\"\n                            width={360}\n                            onClose={this.onClose}\n                            visible={this.state.visible}\n                        >\n                            <Result\n                                status=\"success\"\n                                title=\"Vertify Your E-mail Address\"\n                                subTitle=\"We just send you an E-mail with vertification link. Please check your mailbox and click the link to vertiy your E-mail Address\"\n                                extra={[\n                                <Button type=\"primary\" onClick={this.Vertified}>Already Vertified</Button>,\n                                ]}\n                            />\n                        </Drawer>\n                    </div>\n                )\n            }\n        else {\n            return(\n                <div id='register'>\n                    <Drawer\n                        title=\"Register\"\n                        width={460}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    \n                    <Form onSubmit={this.handleSubmit} className=\"register-form\" {...formItemLayout}>\n                        <Form.Item label=\"Avatar:\" hasFeedback>\n                        \n                        <div id=\"avatarN\" style={{display: this.state.showAvatar}} className=\"notChosen\">\n                            {avatarList}\n                        </div>\n                        <div id=\"avatarY\" style={{display: this.state.closeAvatar}} className=\"isChosen\">\n                            <Avatar id=\"1\" size={64} src={avatarUrl} onClick={this.showAvatar}/>\n                        </div>\n\n                        </Form.Item>\n\n                        {/* enter Email */}\n                        <Form.Item label=\"E-mail\" hasFeedback validateStatus= {this.state.result}>\n                        {getFieldDecorator('eamil', {\n                            rules: [\n                                { required: true,message: 'Please input your email！'},\n                                { type:'email',message: 'Please input email‘s format！'},\n                                { whitespace: true, message:'Cannot accept whitespace at first letter.'},\n                                {validator: this.compareToUserEmail}],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"E-mail\"\n                            onChange={this.handleChangeEmail.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Name */}\n                        <Form.Item label=\"User Name\" hasFeedback validateStatus= {this.state.result}>\n                        {getFieldDecorator('Name', {\n                            rules: [\n                                { required: true, message: 'Please input your name!'},\n                                // { min: 3, message: 'The minimum letter is 3!'},\n                                { whitespace: true, message:'Cannot accept whitespace at first letter. '},\n                                { validator: this.compareToUserName}],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"User Name\"\n                            onChange={this.handleChangeName.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Password */}\n                        <Form.Item label=\"Password\" hasFeedback>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                { required: true, message:'You need to setting password'}, \n                                {min: 4, message: 'Minimum 4 letter' },\n                            {validator: this.validateToNextPassword}],\n                        })(\n                            <Input.Password\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChangePassword.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* confirm Password */}\n                        <Form.Item label=\"Confirm\" hasFeedback>\n                        {getFieldDecorator('confirm', {\n                            rules: [{required: true},{min:4,message:'Minimum 4 Letters！'},\n                            {\n                                validator: this.compareToFirstPassword,\n                            }\n                            ],\n                        })(<Input.Password onBlur={this.handleConfirmBlur} placeholder=\"Password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}/>) }\n                        </Form.Item>\n                        \n                        <Form.Item>\n                        <Button size=\"large\" type=\"primary\" htmlType=\"submit\" className=\"register-form-button\" onClick={this.postData}>\n                            Register\n                        </Button>\n                        <Divider className=\"divider\"></Divider>\n                        <a href=\"/login\" id=\"login_register\" className=\"login_text\">Login Now</a>\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                    </div>\n                    );\n            }\n    }\n};\nexport default Form.create()(Register);","import React from \"react\";\nimport {Modal, Upload, message, Button, Icon} from 'antd';\nimport './index.scss';\n\ninterface IUploadImageState {\n    visible: boolean;\n    img_url_original: string;\n    img_url_small: string;\n    fileList: any[];\n    topicId?: String;\n}\n\ninterface IUploadImageProps {\n    showModal: boolean,\n    hideModal: Function,\n    boxHeader: String,\n    topicId?: String\n}\n\nclass UploadImage extends React.Component<IUploadImageProps, IUploadImageState> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false,\n            img_url_original: '',\n            img_url_small: '',\n            fileList:[],\n            topicId: this.props.topicId\n          }\n        }\n\n        onImageUpload(info: any) {\n            let fileList = [...info.fileList];\n            fileList = fileList.slice(-1);\n            this.setState({\n              fileList: [...fileList]\n            });\n      \n            if (info.file.status !== 'uploading') {\n            }\n            if (info.file.status === 'done') {\n              this.setState({\n                img_url_original: info.file.response[0],\n                img_url_small: info.file.response[1]\n              });\n              message.success(`File uploaded successfully!`);\n            } else if (info.file.status == 'error') {\n              message.error(`The image contains text/unappropriate content and can't be uploaded.`);\n            }\n          };\n      \n          showModal = () => {\n              this.setState({\n                visible: true,\n              });\n            };\n        \n            postTopic = () => {\n              let url;\n              let post_data;\n\n              if (this.state.topicId)\n              {\n                url = process.env.REACT_APP_API_URL +'/topics/reply';\n                post_data = {\n                  originalPicUrl: this.state.img_url_original, \n                  replyTo: this.state.topicId};\n              }\n              else\n              {\n                url = process.env.REACT_APP_API_URL +'/topics';\n                post_data = {\n                  originalPicUrl: this.state.img_url_original, \n                  smallPicUrl: this.state.img_url_small,\n                };\n              }\n\n              console.log(post_data);\n\n              fetch(url,{\n                method:'POST',\n                body: JSON.stringify(post_data),\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                  })\n                }).then(res=>res.json()).then(\n                    data=>{\n                  console.log(data);\n                }\n              )\n\n              this.setState({\n                visible: false,\n                fileList:[]\n              });\n\n              this.props.hideModal();\n      \n              //TODO: change this refresh with the component update\n              window.location.reload();\n            };\n        \n            handleCancel = () => {            \n              this.props.hideModal();\n  \n              this.setState({\n                fileList: [],\n                visible: false\n              });\n            };\n\n    render() {\n        return (\n            <div className=\"modal_window\">\n            <Modal\n              title={this.props.boxHeader}\n              visible={this.state.visible}\n              okText=\"Upload\"\n              onOk={() => {this.postTopic()}}\n              onCancel={this.handleCancel}\n            >\n                <div className=\"image_upload\">\n                <Upload name=\"image\"\n                        action={process.env.REACT_APP_API_URL + '/images/upload'}                      \n                        onChange={(info) => {this.onImageUpload(info);}}\n                        fileList={this.state.fileList}\n                        >\n                    <Button>\n                    <Icon type=\"upload\" /> Click to upload image\n                    </Button>\n                </Upload>\n                </div>                \n            </Modal> \n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps: IUploadImageProps) {\n        if (prevProps.showModal != this.props.showModal)\n        {\n            this.setState({\n                visible: this.props.showModal\n            });\n        }    \n        \n        if (prevProps.topicId != this.props.topicId)\n        {\n          this.setState({\n            topicId: this.props.topicId\n          });\n        }\n    }\n}\n\nexport default UploadImage;\n\n\n\n","import React from \"react\";\nimport { Icon } from 'antd';\nimport './index.scss';\nimport UploadImage from \"./uploadImage\";\n\ninterface IAddTopicState {\n    visible: boolean;\n}\n\nclass AddTopic extends React.PureComponent<{}, IAddTopicState> {\n    upload_props: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false\n          }\n        }\n\n    showModal = () => {\n        this.setState({\n          visible: true\n        });\n      };  \n\n      handleCancel = () => {\n        this.setState({\n          visible: false\n        });\n      };\n  \n      render() {\n        return (\n          <div id=\"add_topic\">\n              <div id=\"add_button\" onClick={ this.showModal }>\n                <Icon type=\"plus\"/>\n              </div>\n            <UploadImage \n              showModal={ this.state.visible } \n              hideModal={ this.handleCancel } \n              boxHeader=\"Upload new picture to start new topic\"/>\n          </div>\n        );\n      }\n}\n\nexport default AddTopic;","import {Route, BrowserRouter, Link}from 'react-router-dom';\nimport './header.scss';\nimport React from 'react';\nimport Login from './login';\nimport Logout from './logout'\nimport Register from './register';\nimport AddTopic from '../addTopic';\nimport { Menu, Dropdown, Avatar, Button, Badge } from 'antd';\n\nclass Header extends React.Component {\n\n    menu=(\n        <Menu>\n            <Menu.Item key=\"1\">\n                <Link to=\"/user\"><Button type=\"link\" icon=\"picture\">My posts</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n                <Link to=\"/user/notifications\"><Button type=\"link\" icon=\"notification\">Notifications</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n                <Link to=\"/user/setting\"><Button type=\"link\" icon=\"setting\">Setting</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n                <Logout ></Logout>\n            </Menu.Item>\n        </Menu>\n    );\n\n\n    render(){\n        if (this.props.isLogin) {\n            const avartarUrl = '../avatars/' + this.props.avatar+'.png'\n            return(\n                <div id='header'>\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <AddTopic />\n                    <div id='user_menu'>\n                        <Dropdown overlay={this.menu}>\n                            <div id=\"user_info\">\n                                <Badge count={0} offset={[0,2]} >\n                                    <Avatar size={40} src={avartarUrl}/>\n                                </Badge>\n                                <span className=\"name\">{this.props.userName}</span>\n                            </div>\n                        </Dropdown>\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div id=\"header\">\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <AddTopic />\n                    <div id='login'>\n                    <BrowserRouter>\n                        <Link to =\"/login\" className=\"login\">Login</Link>\n                        <Link to =\"/register\" className=\"register\">Register</Link>\n                        <div>\n                            <Route path=\"/login\" component={Login}/>\n                            <Route path=\"/register\" component={Register}/>\n                        </div>\n                    </BrowserRouter>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Icon, Popover, message } from 'antd';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface ReactPanelProps {\n\ttopicId: string,\n\tyourReact: any,\n\tupdateReacts: any,\n\tdeleteReacts: any\n}\ninterface ReactPanelState {\n\tyourReact: any,\n\ttypes: Array<string>\n}\n\nclass ReactPanel extends React.Component<ReactPanelProps, ReactPanelState>{\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tyourReact: this.props.yourReact,\n\t\t\ttypes: ['a', 'baiyan', 'aixin', 'daxiao', 'fadai', 'ganga', 'hanyan', 'liulei', 'xiaochulei', 'shengqi', 'feiwen', 'huaixiao', 'santiaoxian', 'yiwen', 'siliao']\n\t\t}\n\t}\n\n\tupdateReacts = this.props.updateReacts();\n\tdeleteReacts = this.props.deleteReacts();\n\n\tcomponentDidUpdate(prevReact: ReactPanelProps){\n\t\tif (this.props.yourReact !== prevReact.yourReact) {\n\t\t\tthis.setState({\n\t\t\t\tyourReact: this.props.yourReact\n\t\t\t})\n\t\t}\t\n\t}\n\n\treactToTopic = (to: string, emoji: string) => {\n\t\tconst curReact = this.state.yourReact;\n\t\t// add new react\n\t\tif (!curReact) {\n\t\t\tconst data = {\n\t\t\t\ttopic_id: to,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure'){\n\t\t\t\t\tmessage.error('You need to login to react');\n\t\t\t\t}\n\t\t\t\t// Already logged in \n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t// delete the react\n\t\telse if (curReact.emoji === emoji ) {\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tyourReact: \"\"\n\t\t\t\t})\n\t\t\t\tthis.deleteReacts(data.deleteId);\n\t\t\t\tmessage.success('React Deleted Successfully');\n\t\t\t})\n\t\t}\n\t\t// update current react\n\t\telse {\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure') {\n\t\t\t\t\tconsole.log('not login yet');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Updated Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst EmojiList = (\n\t\t\t<div className=\"emoji_box\">\n\t\t\t\t{this.state.types.map(emoji => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={emoji} className={this.state.yourReact.emoji === emoji ? 'isActive' : ''} onClick={() => this.reactToTopic(this.props.topicId, emoji)}>\n\t\t\t\t\t\t\t<MyIcon type={'icon-' + emoji} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\n\t\treturn (\n\t\t\t<Popover title=\"React\" content={EmojiList} placement=\"bottom\">\n\t\t\t\t<Icon className=\"add_react\" type=\"smile\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} />\n\t\t\t</Popover>\n\t\t)\n\t}\n}\n\nexport default ReactPanel;","import React from 'react';\nimport { Link }from 'react-router-dom';\nimport { Avatar, Icon, Menu, Dropdown, message } from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadBox from '../addTopic/uploadImage';\nimport './card.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '/iconfont.js'\n});\n\ninterface cardProps {\n\tuser?: any,\n\tsmallPicUrl: string,\n\tname: string,\n\tavatar: number,\n\ttopicId: string,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface cardState {\n\treacts: Array<any>,\n\tshowUploadModal: boolean\n}\n\n\nclass Card extends React.Component<cardProps, cardState>  {\n\tstate ={\n\t\treacts: this.props.reacts,\n\t\tshowUploadModal: false\n\t}\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++){\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif(exist){\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\t\n\t}\n\n\tdeleteReacts = (deleteId: string) =>{\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++){\n\t\t\tif (updatedReact[i]._id === deleteId){\n\t\t\t\tupdatedReact.splice(i,1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n        this.setState({\n          showUploadModal: true\n        });\n      };  \n\n\thandleCancelUpload = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModal: false\n\t\t});\n\t};\n\n\thandleDeleteTopic = () => {\n\t\tconst currentTopic = {\n\t\t\ttopic_id: this.props.topicId\n\t\t}\n\t\tif(this.props.replies.length == 0) {\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/topics/', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(currentTopic)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === 'success'){\n\t\t\t\t\tmessage.success('Delete Successfully!')\n\t\t\t\t\tvar jump = setTimeout(function () { window.location.reload()}, 2000);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\tmessage.error('You can\\'t delete this topic')\n\t\t}\n\n\t}\n\n\trender() {\n\n\t\tconst settingMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<Icon type=\"redo\" />Update\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item onClick={() => this.handleDeleteTopic()}>\n\t\t\t\t\t<Icon type=\"delete\" />Delete\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"header_panel\">\n\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} size={40}/>\n\t\t\t\t\t\t<div className=\"name_date\">\n\t\t\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.props.user.name === this.props.name && \n\t\t\t\t\t\t<div className=\"settings\">\n\t\t\t\t\t\t\t<Dropdown overlay={settingMenu} placement=\"bottomCenter\">\n\t\t\t\t\t\t\t\t<Icon type=\"more\" />\n\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>\n\t\t\t\t\t\t<img src={this.props.smallPicUrl} alt={this.props.smallPicUrl}/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interact_box\">\n\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t<div className=\"current_reacts\">\n\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts}/>\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} onClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{this.props.replies.length > 0 &&\n\t\t\t\t\t<div className=\"replies\">\n\t\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>{this.props.replies.length} replies</Link>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModal } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUpload }\n\t\t\t\t\t\t   boxHeader=\"Upload new picture to reply on topic\"\n\t\t\t\t\t\t   topicId={this.props.topicId}/>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './card';\nimport { Button, Menu, Dropdown, Tag, Spin, Icon } from 'antd';\nimport './index.scss';\n\n\ninterface topicListProps {\n\tuser: object\n}\n\ninterface topicListState {\n\tisLoading: boolean,\n\tsort: number,\n\ttopics: Array<any>,\n\ttags: string,\n\tpageSize: number,\n\tpage: number,\n\tcanLoad: boolean\n}\n\nclass TopicList extends React.Component<topicListProps, topicListState> {\n\tconstructor(props: any){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tsort: 1,\n\t\t\ttopics: [],\n\t\t\ttags: 'From New to Old',\n\t\t\tpageSize: 4,\n\t\t\tpage: 0,\n\t\t\tcanLoad: true\n\t\t}\n\t}\n\n\tshowFromNewtoOld = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif(reset){\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=1&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tsort: 1,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From New to Old',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromOldtoNew = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=2&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tsort: 2,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From Old to New',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromLowtoHigh = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=3&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tsort: 3,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From Low to High',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\n\tshowFromHightoLow = (size: number, page: number, reset: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t})\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=4&size='+size+'&page='+page)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tsort: 4,\n\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\ttags: 'From High to Low',\n\t\t\t\tpage: this.state.page + 1,\n\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t})\n\t\t})\n\t}\n\t\n\tloadMore = (sort: number) => {\n\t\tswitch (sort) {\n\t\t\tcase 1:\n\t\t\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.showFromOldtoNew(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.showFromLowtoHigh(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.showFromHightoLow(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\tcomponentDidMount() {\n\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, true)\n\t}\n\n\trender() {\n\t\tconst currentUser = this.props.user;\n\t\tconst recentMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={ ()=>this.showFromNewtoOld( this.state.pageSize, 0, true) }>New to Old</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={ ()=>this.showFromOldtoNew( this.state.pageSize, 0, true) }>Old to New</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\tconst popluarMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={() => this.showFromLowtoHigh( this.state.pageSize, 0, true) }>Low to High</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={() => this.showFromHightoLow( this.state.pageSize, 0, true)}>High to low</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\tconst topicList = this.state.topics.map( topic => {\n\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tuser={currentUser}\n\t\t\t\t\t\tkey={topic._id}\n\t\t\t\t\t\tsmallPicUrl={topic.smallPicUrl} \n\t\t\t\t\t\tname={topic.createBy.name} \n\t\t\t\t\t\tavatar={topic.createBy.avatar}\n\t\t\t\t\t\tcreateAt={topic.createAt}\n\t\t\t\t\t\ttopicId={topic._id}\n\t\t\t\t\t\treplies={topic.replies}\n\t\t\t\t\t\treacts={topic.reacts}\n\t\t\t\t\t\tyourReact={topic.yourReact ? topic.yourReact : '' }\n\t\t\t\t\t/>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"topic_list_tab\">\n\t\t\t\t\t<div className=\"sort_buttons\">\n\t\t\t\t\t\t<Dropdown overlay={recentMenu}>\n\t\t\t\t\t\t\t<Button ><Icon type=\"calendar\" />Recency</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t<Dropdown overlay={popluarMenu}>\n\t\t\t\t\t\t\t<Button className=\"popularity\"><Icon type=\"fire\" />Popularity</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sort_feedback\">\n\t\t\t\t\t\t<span className=\"sort\">Sort By:</span>\n\t\t\t\t\t\t<Tag color=\"gold\">{this.state.tags}</Tag>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{this.state.isLoading && \n\t\t\t\t\t(<div className=\"loading\">\n\t\t\t\t\t\t<Spin size=\"large\" tip=\"Loading...\" />\n\t\t\t\t\t</div>)\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\t<div id=\"topic_list\">{topicList}</div>\n\t\t\t\t{this.state.canLoad &&\n\t\t\t\t\t<Button id=\"load_more\" onClick={() => this.loadMore(this.state.sort)}>Loading more...</Button>\n\t\t\t\t}\n\t\t\t\t{!this.state.canLoad &&\n\t\t\t\t\t<div className=\"nomore\">\n\t\t\t\t\t\t<Icon style={{fontSize: '34px' }} type=\"build\" />\n\t\t\t\t\t\t<p>More pictures are coming</p>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t\t\n\t}\n}\n\nexport default TopicList;","import React from 'react';\nimport { Avatar, Icon} from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadImage from \"../addTopic/uploadImage\";\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n    scriptUrl: '/iconfont.js'\n});\n\ninterface replyPros {\n    topicId: string,\n    originalPicUrl: string,\n    name: string,\n    avatar: number,\n    createAt: string,\n    replies: Array<any>,\n    yourReact: any,\n    reacts: Array<any>\n}\n\ninterface replyState {\n    reacts: Array<any>,\n    visible: boolean\n}\n\nclass Subreplies extends React.Component<replyPros, replyState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            reacts: this.props.reacts,\n            visible: false\n        }\n    }\n\n    updateReacts = (newReact: any) => {\n        let exist = false;\n        let updatedReacts = this.state.reacts;\n        for (let i = 0; i < this.state.reacts.length; i++) {\n            let react = this.state.reacts[i];\n            if (react._id === newReact._id) {\n                exist = true;\n                updatedReacts[i].emoji = newReact.emoji;\n            }\n        }\n        if (exist) {\n            this.setState({\n                reacts: updatedReacts\n            })\n        }\n        else {\n            this.setState(currentState => ({\n                reacts: [...currentState.reacts, newReact]\n            }))\n        }\n    }\n\n    deleteReacts = (deleteId: string) => {\n        var updatedReact = this.state.reacts;\n        for (let i = 0; i < updatedReact.length; i++) {\n            if (updatedReact[i]._id === deleteId) {\n                updatedReact.splice(i, 1);\n                this.setState({\n                    reacts: updatedReact\n                })\n                return\n            }\n        }\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        });\n    };\n\n    handleCancel = () => {\n        this.setState({\n            visible: false\n        });\n    };\n\n    render() {\n        return(\n            <div className=\"level3\" key={this.props.topicId}>\n                <div className=\"user_info\">\n                    <Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n                    <strong>{this.props.name}</strong>\n                    <span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\n                </div>\n                <div className=\"img_box\">\n                    <img src={this.props.originalPicUrl} />\n                </div>\n                <div className=\"button_box\">\n                    <ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n                    <Icon\n                        className=\"add_reply\"\n                        type=\"picture\"\n                        theme=\"twoTone\"\n                        twoToneColor=\"#1890ff\"\n                        style={{ fontSize: '24px' }}\n                        onClick={this.showModal} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Subreplies;","import React from 'react';\nimport { Avatar, Icon} from 'antd';\nimport ReactPanel from '../emoji';\nimport Subreplies from './sub-replies';\nimport UploadImage from \"../addTopic/uploadImage\";\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface replyPros {\n\ttopicId: string,\n\toriginalPicUrl: string,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n\tyourReact: any,\n\treacts: Array<any>\n}\n\ninterface replyState {\n\treacts: Array<any>,\n\tvisible: boolean\n}\n\n\nclass Replies extends React.Component<replyPros, replyState> {\n\tconstructor(props: any) {\n        super(props);\n        this.state = {\n\t\t\treacts: this.props.reacts,\n        \tvisible: false\n        }\n\t}\n\t\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: true\n\t\t\t});\n\t\t  };  \n\t\n\thandleCancel = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: false\n\t\t\t});\n\t\t  };\n\n\trender() {\n\t\tconst repliesList = this.props.replies.map( reply => {\n\t\t\treturn(\n\t\t\t\t<Subreplies \n\t\t\t\t\tkey={reply._id}\n\t\t\t\t\toriginalPicUrl={reply.originalPicUrl}\n\t\t\t\t\tname={reply.createBy.name}\n\t\t\t\t\tavatar={reply.createBy.avatar}\n\t\t\t\t\treplies={reply.replies}\n\t\t\t\t\tcreateAt={reply.createAt}\n\t\t\t\t\ttopicId={reply._id}\n\t\t\t\t\treacts={reply.reacts}\n\t\t\t\t\tyourReact={reply.yourReact ? reply.yourReact : ''}\n\t\t\t\t/>\n\t\t\t)\n\t\t}) \n\n\t\treturn(\n\t\t\t<div className=\"single_reply\">\n\t\t\t\t<div className=\"level2\">\n\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n\t\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t\t<img src={this.props.originalPicUrl} />\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"button_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tclassName=\"add_reply\"\n\t\t\t\t\t\t\ttype=\"picture\"\n\t\t\t\t\t\t\ttheme=\"twoTone\"\n\t\t\t\t\t\t\ttwoToneColor=\"#1890ff\"\n\t\t\t\t\t\t\tstyle={{ fontSize: '24px' }}\n\t\t\t\t\t\t\tonClick={this.showModal} />\n\t\t\t\t\t\t<UploadImage \n\t\t\t\t\t\t\tshowModal={ this.state.visible } \n\t\t\t\t\t\t\thideModal={ this.handleCancel } \n\t\t\t\t\t\t\tboxHeader=\"Upload new picture to reply\"\n\t\t\t\t\t\t\ttopicId={ this.props.topicId}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{repliesList}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Replies;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Avatar, Icon, Empty } from 'antd';\nimport Replies from './replies';\nimport './index.scss';\nimport ReactPanel from '../emoji';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface getIdProps {\n\tid: string\n}\n\ninterface topicProps extends RouteComponentProps<getIdProps>{\n\t\n}\n\ninterface replies {\n\t_id: string,\n\toriginalPicUrl: string,\n\tcreateBy: any,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface detailState {\n\tid: string,\n\tname: string,\n\tavatar: number,\n\toriginalPicUrl: string,\n\tcreateAt: string,\n\treplies: Array<replies>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\nclass TopicDetail extends React.Component< topicProps, detailState> {\n\tconstructor(props: topicProps){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tavatar: 1,\n\t\t\toriginalPicUrl: '',\n\t\t\tcreateAt: '',\n\t\t\treplies: [],\n\t\t\treacts: [],\n\t\t\tyourReact: \"\"\n\t\t}\n\t}\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\t\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch(process.env.REACT_APP_API_URL+'/topics/single?id='+ this.props.match.params.id)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconst curTopic = data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: curTopic._id,\n\t\t\t\t\tname: curTopic.createBy.name,\n\t\t\t\t\tavatar: curTopic.createBy.avatar,\n\t\t\t\t\toriginalPicUrl: curTopic.originalPicUrl,\n\t\t\t\t\tcreateAt: curTopic.createAt,\n\t\t\t\t\treplies: curTopic.replies,\n\t\t\t\t\treacts: curTopic.reacts,\n\t\t\t\t\tyourReact: curTopic.yourReact ? curTopic.yourReact : \"\"\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst repliesList = this.state.replies.map( reply => {\n\t\t\treturn (\n\t\t\t\t<Replies\n\t\t\t\t\tkey={reply._id}\n\t\t\t\t\toriginalPicUrl={reply.originalPicUrl}\n\t\t\t\t\tname={reply.createBy.name}\n\t\t\t\t\tavatar={reply.createBy.avatar}\n\t\t\t\t\treplies={reply.replies}\n\t\t\t\t\tcreateAt={reply.createAt}\n\t\t\t\t\ttopicId={reply._id}\n\t\t\t\t\treacts={reply.reacts}\n\t\t\t\t\tyourReact={reply.yourReact ? reply.yourReact : ''}\n\t\t\t\t/>\n\n\t\t\t)\n\t\t})\n\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id=\"topic_detail\">\n\t\t\t\t\t<div id=\"author_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.state.avatar + '.png'}/>\n\t\t\t\t\t\t<strong>{this.state.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {this.state.createAt.substr(0,10)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"main_pic\">\n\t\t\t\t\t\t<img src={this.state.originalPicUrl}/>\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.state.id} yourReact={this.state.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"replies_list\">\n\t\t\t\t\t<h2>Replies</h2>\n\t\t\t\t\t{repliesList.length == 0 && \n\t\t\t\t\t\t<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"There is no reply yet\" />\n\t\t\t\t\t}\n\t\t\t\t\t{repliesList}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default TopicDetail;","import React from 'react';\nimport { Icon, List, Avatar } from 'antd'; \nimport './index.scss'\n\ninterface boardState {\n    filter: string,\n    userList: Array<any>\n}\n\nclass LeaderBoard extends React.Component<{}, boardState> {\n    state = {\n        filter: 'reacts',\n        userList: []\n    }\n\n    showMostReacts = () => {\n        this.setState({\n            filter: 'reacts'\n        })\n        fetch(process.env.REACT_APP_API_URL +'/users/leaderboard?type=mostReacts')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    showMostTopics = () => {\n        this.setState({\n            filter: 'topics'\n        })\n        fetch(process.env.REACT_APP_API_URL + '/users/leaderboard?type=mostTopics')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    componentDidMount(){\n        this.showMostReacts()\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n                <h3><Icon type=\"unordered-list\" />Leaderboard</h3>\n                <div className=\"filter\">\n                    <button className={this.state.filter === 'reacts' ? 'isActive' : ''} onClick={this.showMostReacts}><Icon type=\"smile\" /> Reacts</button>\n                    <button className={this.state.filter === 'topics' ? 'isActive' : ''} onClick={this.showMostTopics}><Icon type=\"picture\" /> Topics</button>\n                </div>\n                <List\n                    id=\"leaderboard_list\"\n                    dataSource={this.state.userList}\n                    renderItem={(item: any) => (                \n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={<Avatar src={'../avatars/' + item.avatar + '.png'}/>}\n                                title={item.name}\n                                key= {item._id}\n                                description={this.state.filter === 'reacts' ? ('React Times: ' + item.reactTimes) : ('Post Topics: ' + item.topicTimes)}\n                            />\n                        </List.Item>                     \n                    )}>\n\n                </List>\n            </React.Fragment>\n            \n        )\n    }\n}\n\nexport default LeaderBoard;","import React from 'react';\nimport { Layout } from 'antd';\nimport { Route, Switch } from 'react-router';\nimport TopicList from '../topicList';\nimport TopicDetail from '../topicDetail';\nimport LeaderBoard from '../leaderboard';\n\nconst { Sider, Content } = Layout;\n\ninterface topicPanelProps {\n    user: any\n}\n\nclass TopicPanel extends React.Component<topicPanelProps> {\n    render() {\n        return(\n            <Layout>\n                <Content>\n                    <Switch>\n                        <Route path=\"/topics_detail/:id\" component={TopicDetail} />\n                        <Route path=\"/\" exact render={() => <TopicList user={this.props.user} />} />\n                    </Switch>\n                </Content>\n                <Sider className=\"leaderboard\" breakpoint=\"lg\" collapsedWidth=\"0\" reverseArrow={true} ><LeaderBoard /></Sider>\n            </Layout>\n        )\n    }\n}\n\nexport default TopicPanel;","import React from 'react';\nimport Card from '../topicList/card';\nimport { Empty } from 'antd';\nimport './index.scss';\n\ninterface MyPostsProps {\n    user: any\n}\n\ninterface MyPostsState {\n    topics: Array<any>\n}\n\nclass MyPosts extends React.Component<MyPostsProps, MyPostsState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n        const topicList = this.state.topics.map(topic => {\n            return (\n                <Card\n                    user={this.props.user}\n                    key={topic._id}\n                    smallPicUrl={topic.smallPicUrl}\n                    name={topic.createBy.name}\n                    avatar={topic.createBy.avatar}\n                    createAt={topic.createAt}\n                    topicId={topic._id}\n                    replies={topic.replies}\n                    reacts={topic.reacts}\n                    yourReact={'empty'}\n                />\n            )\n        })\n\n        return ( \n            <React.Fragment>\n                <h2>My Posts</h2>\n                <div id=\"user_topic_list\">\n                    {topicList.length == 0 &&\n                        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"You haven't posted any topics\" />\n                    }\n                    {topicList}\n                    {topicList}\n                </div> \n            </React.Fragment> \n        )\n    }\n}\n\nexport default MyPosts;","import React from 'react';\nimport { List, Avatar, Empty, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n    scriptUrl: '/iconfont.js'\n});\n\ninterface NotificationState {\n    notifications: Array<any>\n}\n\nclass Notification extends React.Component<{}, NotificationState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            notifications: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/notifications/toUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    notifications: data\n                })\n            })\n    }\n\n    render() {\n        if(this.state.notifications.length>0){\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <div id=\"notifications\">\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={this.state.notifications}\n                            renderItem={item => (\n                                <List.Item>\n                                    <List.Item.Meta\n                                        avatar={<Avatar src={'../avatars/' + item.fromUser.avatar + '.png'} />}\n                                        title={'You have a new ' + item.type}\n                                        description={\n                                            <React.Fragment>\n                                                <strong className=\"from\">{item.fromUser.name}</strong>\n                                                <p className=\"text\">{'has reacted to your picture with '}</p>\n                                                <MyIcon type={'icon-' + item.content} />\n                                                <Link to={`/topics_detail/${item.atTopic}`}>Link</Link>\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    </div>\n                </React.Fragment>\n            )\n        }\n        else{\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"You have no notifications yet\" />\n                </React.Fragment>\n            ) \n        }\n        \n    }\n}\n\nexport default Notification;","import React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\nimport './index.scss';\n\nclass UserPanelMenu extends React.Component<RouteComponentProps> {\n    \n\n    render() {\n        return (\n            \n            <Menu \n                id=\"user_panel_menu\"\n                defaultSelectedKeys={['/user']}\n                theme=\"light\"\n                mode=\"inline\"\n                selectedKeys={[this.props.location.pathname]}\n            >\n                <Menu.Item key=\"/user\">\n                    <Link to=\"/user\"><Icon type=\"picture\" /><span>My posts</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"/user/notifications\">\n                    <Link to=\"/user/notifications\"><Icon type=\"notification\" /><span>Notifications</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\"><Icon type=\"setting\" /><span>Settings</span></Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default UserPanelMenu;","import React from 'react';\nimport MyPosts from './mypost';\nimport Notification from './notifications';\nimport UserPanelMenu from './menu';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { Route } from 'react-router';\n\nconst { Sider, Content } = Layout;\n\ninterface userPanelProps {\n    user: any\n}\n\ninterface userPanelState {\n    topics: Array<any>\n}\n\nclass UserPanel extends React.Component<userPanelProps, userPanelState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n\n        return(\n            <Layout>\n                <Sider width={240} style={{ background: '#fff' }}>\n                    <Route path=\"/user\" component={UserPanelMenu}></Route>\n                </Sider>\n                <Content>\n                    <div id=\"user_panel\">\n                        <Route path=\"/user\" exact render={() => <MyPosts user={this.props.user} />} />\n                        <Route path=\"/user/notifications\" component={Notification} />\n                    </div>\n                </Content>\n            </Layout>\n\n\n        )\n    }\n}\n\nexport default UserPanel;","import React from 'react';\nimport { Icon } from 'antd';\nimport './index.scss';\n\nclass Footer extends React.Component {\n    render() {\n        return(\n            <footer>\n                <div className=\"footer-logo\">\n                    <img src=\"/images/logo-footer.png\" />\n                </div>\n                <div className=\"copyright\">\n                    <p>Made with <Icon type=\"heart\" theme=\"filled\" style={{color: '#eb2f96'}}/> at UTS</p>\n                </div>\n            </footer>\n        ) \n    }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './header';\nimport TopicPanel from './topic';\nimport UserPanel from './user';\nimport Footer from './footer';\nimport { Affix, BackTop, Icon} from 'antd';\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Switch }from 'react-router-dom';\n\ninterface currentUser {\n\tuser: {\n\t\tname: string,\n\t\temail: string,\n\t\tid: string,\n\t\tavatar: string\n\t},\n\tisLogin?: boolean\n}\n\n\nclass App extends React.Component<{}, currentUser> {\n\tstate = {\n\t\tuser: {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tid: '',\n\t\t\tavatar:''\n\t\t},\n\t\tisLogin: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getLoginUser(); \n\t}\n\n\tgetLoginUser= () =>{\n\t\tfetch(process.env.REACT_APP_API_URL+'/users')\n\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.status === 'success'){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\tname: data.user.name,\n\t\t\t\t\t\t\temail: data.user.email,\n\t\t\t\t\t\t\tid: data.user.id,\n\t\t\t\t\t\t\tavatar: data.user.avatar,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLogin: true\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLogin: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\" id='App'>\n\t\t\t\t\t<Affix>\n\t\t\t\t\t\t<Header userName={this.state.user.name} isLogin={this.state.isLogin} avatar={this.state.user.avatar}></Header>\n\t\t\t\t\t</Affix>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/user\" render={() => <UserPanel user={this.state.user} />} />\n\t\t\t\t\t\t<Route path=\"/\" render={() => <TopicPanel user={this.state.user} />} />\n\t\t\t\t\t</Switch>\t\t\t\t\t\n\t\t\t\t\t<BackTop><div className=\"ant-back-top-inner\"><Icon type=\"arrow-up\" /></div></BackTop>\n\t\t\t\t\t<Footer/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n\n}\n\n export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}