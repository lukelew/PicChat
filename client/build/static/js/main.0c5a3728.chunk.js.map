{"version":3,"sources":["header/login.jsx","header/logout.jsx","header/register.jsx","addTopic/uploadImage.tsx","addTopic/index.tsx","header/index.jsx","emoji/index.tsx","topicList/card.tsx","topicList/index.tsx","topicDetail/replies.tsx","topicDetail/index.tsx","leaderboard/index.tsx","topic/index.tsx","user/mypost.tsx","user/notifications.tsx","user/menu.tsx","user/index.tsx","footer/index.tsx","App.tsx","index.tsx"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClose","setState","visible","isLogin","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","postData","post_data","email","state","password","fetch","process","method","body","JSON","stringify","headers","Content-Type","then","res","json","data","user","login_username","name","message","success","window","location","reload","target","value","getFieldDecorator","path","pathname","query","id","status","react_default","a","createElement","react_router","to","drawer","title","width","es_form","onSubmit","className","Item","label","hasFeedback","rules","required","type","input","prefix","icon","style","color","placeholder","onChange","handleChangeEmail","bind","handleChangePassword","href","es_button","htmlType","onClick","React","Component","Form","create","Logout","logout","isLogout","Fragment","Register","cancel","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","avatar","Headers","text","dataBack","parse","isRegister","Vertified","changeAvatar","newAvatar","closeAvatar","showAvatar","_this2","avatarUrl","avatarList","_loop","i","push","key","size","src","result","subTitle","extra","display","min","handleChangeName","validator","Password","onBlur","UploadImage","showModal","postTopic","url","topicId","originalPicUrl","img_url_original","replyTo","smallPicUrl","img_url_small","fileList","hideModal","handleCancel","info","toConsumableArray","slice","file","response","error","modal","boxHeader","okText","onOk","onCancel","upload","action","onImageUpload","prevProps","AddTopic","upload_props","uploadImage","PureComponent","Header","menu","react_router_dom","header_logout","avartarUrl","src_addTopic","dropdown","overlay","badge","count","offset","userName","component","MyIcon","Icon","createFromIconfontCN","scriptUrl","ReactPanel","updateReacts","deleteReacts","reactToTopic","emoji","curReact","yourReact","react_id","_id","Content-type","deleteId","newReact","topic_id","types","prevReact","EmojiList","map","popover","content","placement","theme","twoToneColor","fontSize","Card","reacts","showUploadModal","exist","updatedReacts","length","currentState","concat","updatedReact","splice","handleCancelUpload","createAt","substr","alt","react","card_MyIcon","src_emoji_0","replies","TopicList","showFromNewtoOld","page","reset","topics","sort","tags","canLoad","pageSize","showFromOldtoNew","showFromLowtoHigh","showFromHightoLow","loadMore","recentMenu","popluarMenu","topicList","topic","topicList_card","createBy","tag","Replies","repliesList","reply","replies_MyIcon","TopicDetail","match","params","curTopic","_this3","topicDetail_MyIcon","empty","image","Empty","PRESENTED_IMAGE_SIMPLE","description","LeaderBoard","filter","userList","showMostReacts","showMostTopics","list","dataSource","renderItem","item","Meta","reactTimes","topicTimes","Sider","Layout","Content","TopicPanel","layout","exact","breakpoint","collapsedWidth","reverseArrow","src_leaderboard","MyPosts","Notification","notifications","itemLayout","fromUser","notifications_MyIcon","atTopic","UserPanelMenu","defaultSelectedKeys","mode","selectedKeys","UserPanel","user_Sider","background","user_Content","Footer","App","updataFetch","affix","src_header","back_top","src_footer","ReactDOM","render","src_App_0","document","querySelector"],"mappings":"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","file":"static/js/main.0c5a3728.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon, Input,Drawer,message} from 'antd';\nimport './login.scss';\nimport 'antd/dist/antd.css';\n\n\n\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { \n        isLogin: false,\n        login_username: '',\n        visible: true,\n        email:'',\n        password:'',\n    };\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n      isLogin: true,\n    });\n\n  };\n\n  handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n          if (!err) {\n              console.log('Received values of form: ', values);\n          }\n      })\n  };\n\n  //obtain name and password \n  handleChangeEmail(e){\n      this.setState({\n          email: e.target.value\n      })\n  };\n\n  handleChangePassword(e){\n      this.setState({\n          password: e.target.value\n      })\n  };\n\n  //Post_data_login\n    postData = () => {\n        let url = process.env.REACT_APP_API_URL +'/users/login';\n        let post_data = { \n          email: this.state.email,\n          password: this.state.password\n        };\n\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res=>res.json()).then(\n            data=>{\n            //后面改成验证邮箱和密码是否匹配。密码部分未写\n                if(data.user.email===this.state.email){\n                  console.log(data);\n                  this.setState({\n                        isLogin: true,\n                        login_username: data.user.name\n                  });\n                  message.success('Login Success');\n                  window.location.reload();\n                }\n                else{\n                    console.log(data);\n                    this.setState({\n                        isLogin: false\n                    });\n                    message.success('Login False');\n                    window.location.reload();\n                } \n            }\n        )\n    };\n\n\nrender() {\n    const { getFieldDecorator } = this.props.form;\n\n    //pass user's data\n    var datapass={name: this.state.login_username,email: this.state.email,id:'',status: true}\n    var path={\n        pathname: '/',\n        query: datapass\n    };\n    \n    if(this.state.isLogin){\n        return <Redirect to= {path}/> \n    }\n    else{\n        return (\n            <div id='login'>\n                <div id='login_form'>\n                    <Drawer\n                        title=\"Login\"\n                        width={350}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\" >\n                        {/*login_email */}\n                        <Form.Item label=\"E-mail\" hasFeedback>\n                            {getFieldDecorator('eamil', {\n                                rules: [{ required: true, type: 'email',message: 'Please input email‘s format!' }],\n                              })(\n                                <Input\n                                    prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Email\"\n                                    onChange={this.handleChangeEmail.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_password*/}\n                        <Form.Item label=\"Password\" hasFeedback>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: 'Please input your Password!' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={this.handleChangePassword.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_submit*/}\n                        <Form.Item>\n                          <a className=\"login-form-forgot\" href=\"/register\">Forgot password?</a>\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.postData}>Login</Button>\n\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                </div>\n            </div>\n        );\n    }\n  }\n};\nexport default Form.create()(Login);","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { message, Button} from 'antd';\nimport { Redirect } from 'react-router';\nimport './logout.scss';\n\n\nclass Logout extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            isLogout: false,\n            login_username: '',\n            email:'',\n        };\n    }\n\n\n    logout=()=>{\n        let url = process.env.REACT_APP_API_URL + '/users/logout';\n        fetch(url,{\n            method:'Get',\n            }).then(res=>res.json()).then(\n                data=>{\n                    console.log(data);\n                    this.setState({\n                        isLogout: true,\n                    })\n                    message.success('Login success');\n                    window.location.reload();\n                    console.log('logout success',this.state.isLogout)\n                }\n            )\n    };\n    render(){\n        if(this.state.isLogout)\n        {   \n            var path={pathname:'/'};\n            return <Redirect to= {path}/>\n        }\n        else{\n            return(\n                <React.Fragment>\n                    <Button id=\"logout_button\" onClick={this.logout} type=\"link\" icon=\"logout\">Logout</Button>\n                </React.Fragment>\n            );\n        }\n\n    }\n}\nexport default Logout;\n    \n\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon, Input,Drawer,Avatar,Result} from 'antd';\nimport './register.scss';\nimport 'antd/dist/antd.css';\n// import Check_Login from './checkLogin'\n\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            email: '',\n            name: '',\n            password: '',\n            avatar: 1,\n\n            showAvatar: 'none',\n            closeAvatar:'',\n\n            confirmDirty: false,\n            visible: true,\n            cancel: false, //用于关闭页面并返回主页路径\n            isRegister: false //用于核对是否注册成功\n        };\n    }\n    \n    onClose = () => {\n        this.setState({\n        visible: false,\n        // isRegister: true,\n        cancel: true\n        });\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n          }\n        });\n      };\n    \n      //obtain name and password \n    handleChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        })\n    };\n    \n    handleChangePassword(e){\n        this.setState({\n            password: e.target.value\n        })\n    };\n    handleChangeName(e){\n        this.setState({\n            name: e.target.value\n        })\n    };\n\n    //judge confirm password\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    \n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Wrong!Please Confirm Again!');\n        } else {\n          callback();\n        }\n    };\n    \n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      };\n\n    //Post_data_register\n    postData = () => {\n        let url = process.env.REACT_APP_API_URL + '/users/register';\n        let post_data = { \n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password,\n            avatar: this.state.avatar\n        };\n\n        //post register user info\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>res.text().then(\n            data=>{\n                console.log(data);\n                var dataBack=JSON.parse(data);\n                console.log(dataBack,dataBack.status)\n                //register status and email address vertify\n                if(dataBack.status===\"success\"){\n                    this.setState({\n                        isRegister: true,\n                    })\n                    console.log(this.state.isRegister,'in')\n                    // window.location.reload();\n                }\n            }\n        ))\n    };\n    //control vertify page\n    Vertified=()=>{\n        this.setState({\n            cancel: true,\n        })\n    }\n    \n    //change avatar\n    changeAvatar = (newAvatar)=>{\n        this.setState({\n            avatar: newAvatar,\n            closeAvatar:'',\n            showAvatar:'none'\n        })\n    }\n\n    showAvatar=()=>{\n        this.setState({\n            closeAvatar: 'none',\n            showAvatar:''\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const avatarUrl= '../avatars/'+this.state.avatar+'.png';\n\n        const avatarList = [];\n        for(let i=1; i<=16; i++){\n            avatarList.push(<Avatar key={i} size=\"64\" src={'../avatars/'+ i +'.png'} onClick={() => this.changeAvatar(i)} />)\n        }\n\n        if(this.state.cancel){\n            return <Redirect to=\"/\" />\n          }\n        else if (this.state.isRegister){\n                return (\n                    <div id='successRegister'>\n                        <Drawer\n                            title=\"Register\"\n                            width={350}\n                            onClose={this.onClose}\n                            visible={this.state.visible}\n                        >\n                            <Result\n                                status=\"success\"\n                                title=\"Vertify Your E-mail Address\"\n                                subTitle=\"We just send you an E-mail with vertification link. Please check your mailbox and click the link to vertiy your E-mail Address\"\n                                extra={[\n                                <Button type=\"primary\" onClick={this.Vertified}>Already Vertified</Button>,\n                                ]}\n                            />\n                        </Drawer>\n                    </div>\n                )\n            }\n        else {\n            return(\n                <div id='register'>\n                    <Drawer\n                        title=\"Register\"\n                        width={350}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    <h4><span className=\"mustChoose\">*</span> Please select your avatar</h4>\n                    \n                    <div id=\"avatarN\" style={{display: this.state.showAvatar}} className=\"notChosen\">\n                        {avatarList}\n                    </div>\n                \n                    <div id=\"avatarY\" style={{display: this.state.closeAvatar}} className=\"isChosen\">\n                        <Avatar id=\"1\" size={64} src={avatarUrl} onClick={this.showAvatar}/>\n                    </div>\n                    \n                    <Form onSubmit={this.handleSubmit} className=\"register-form\" >\n                        {/* enter Email */}\n                        <Form.Item label=\"E-mail\" hasFeedback>\n                        {getFieldDecorator('eamil', {\n                            rules: [{ required: true, type:'email',message: 'Please input email‘s format！' }],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"E-mail\"\n                            onChange={this.handleChangeEmail.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Name */}\n                        <Form.Item label=\"User Name\" hasFeedback>\n                        {getFieldDecorator('Name', {\n                            rules: [{ required: true, min:'3',message: 'The minimum letter is 3!' }],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"User Name\"\n                            onChange={this.handleChangeName.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Password */}\n                        <Form.Item label=\"Password\" hasFeedback>\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, min:'4',message: 'Please input your Password!' },\n                            {validator: this.validateToNextPassword,},],\n                        })(\n                            <Input.Password\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChangePassword.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* confirm Password */}\n                        <Form.Item label=\"Confirm Password\" hasFeedback>\n                        {getFieldDecorator('confirm', {\n                            rules: [{required: true, min:'4',message: 'Please confirm your password!',},\n                            {\n                                validator: this.compareToFirstPassword,\n                            },\n                            ],\n                        })(<Input.Password onBlur={this.handleConfirmBlur} placeholder=\"Password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}/>) }\n                        </Form.Item>\n                        \n                        <Form.Item>\n                        <Button size=\"large\" type=\"primary\" htmlType=\"submit\" className=\"register-form-button\" onClick={this.postData}>\n                            Register\n                        </Button>\n                        <a href=\"/login\" id=\"login_register\">Login Now</a>\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                    </div>\n                    );\n            }\n    }\n};\nexport default Form.create()(Register);","import React from \"react\";\nimport {Modal, Upload, message, Button, Icon} from 'antd';\nimport './index.scss';\n\ninterface IUploadImageState {\n    visible: boolean;\n    img_url_original: string;\n    img_url_small: string;\n    fileList: any[];\n    topicId?: String;\n}\n\ninterface IUploadImageProps {\n    showModal: boolean,\n    hideModal: Function,\n    boxHeader: String,\n    topicId?: String\n}\n\nclass UploadImage extends React.Component<IUploadImageProps, IUploadImageState> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false,\n            img_url_original: '',\n            img_url_small: '',\n            fileList:[],\n            topicId: this.props.topicId\n          }\n        }\n\n        onImageUpload(info: any) {\n            let fileList = [...info.fileList];\n            fileList = fileList.slice(-1);\n            this.setState({\n              fileList: [...fileList]\n            });\n      \n            if (info.file.status !== 'uploading') {\n            }\n            if (info.file.status === 'done') {\n              this.setState({\n                img_url_original: info.file.response[0],\n                img_url_small: info.file.response[1]\n              });\n              message.success(`File uploaded successfully!`);\n            } else if (info.file.status == 'error') {\n              message.error(`The image contains text/unappropriate content and can't be uploaded.`);\n            }\n          };\n      \n          showModal = () => {\n              this.setState({\n                visible: true,\n              });\n            };\n        \n            postTopic = () => {\n              let url;\n              let post_data;\n\n              if (this.state.topicId)\n              {\n                url = process.env.REACT_APP_API_URL +'/topics/reply';\n                post_data = {\n                  originalPicUrl: this.state.img_url_original, \n                  replyTo: this.state.topicId};\n              }\n              else\n              {\n                url = process.env.REACT_APP_API_URL +'/topics';\n                post_data = {\n                  originalPicUrl: this.state.img_url_original, \n                  smallPicUrl: this.state.img_url_small,\n                };\n              }\n\n              console.log(post_data);\n\n              fetch(url,{\n                method:'POST',\n                body: JSON.stringify(post_data),\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                  })\n                }).then(res=>res.json()).then(\n                    data=>{\n                  console.log(data);\n                }\n              )\n\n              this.setState({\n                visible: false,\n                fileList:[]\n              });\n\n              this.props.hideModal();\n      \n              //TODO: change this refresh with the component update\n              window.location.reload();\n            };\n        \n            handleCancel = () => {            \n              this.props.hideModal();\n  \n              this.setState({\n                fileList: [],\n                visible: false\n              });\n            };\n\n    render() {\n        return (\n            <div className=\"modal_window\">\n            <Modal\n              title={this.props.boxHeader}\n              visible={this.state.visible}\n              okText=\"Upload\"\n              onOk={() => {this.postTopic()}}\n              onCancel={this.handleCancel}\n            >\n                <div className=\"image_upload\">\n                <Upload name=\"image\"\n                        action={process.env.REACT_APP_API_URL + '/images/upload'}                      \n                        onChange={(info) => {this.onImageUpload(info);}}\n                        fileList={this.state.fileList}\n                        >\n                    <Button>\n                    <Icon type=\"upload\" /> Click to upload image\n                    </Button>\n                </Upload>\n                </div>                \n            </Modal> \n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps: IUploadImageProps) {\n        if (prevProps.showModal != this.props.showModal)\n        {\n            this.setState({\n                visible: this.props.showModal\n            });\n        }    \n        \n        if (prevProps.topicId != this.props.topicId)\n        {\n          this.setState({\n            topicId: this.props.topicId\n          });\n        }\n    }\n}\n\nexport default UploadImage;\n\n\n\n","import React from \"react\";\nimport { Icon } from 'antd';\nimport './index.scss';\nimport UploadImage from \"./uploadImage\";\n\ninterface IAddTopicState {\n    visible: boolean;\n}\n\nclass AddTopic extends React.PureComponent<{}, IAddTopicState> {\n    upload_props: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false\n          }\n        }\n\n    showModal = () => {\n        this.setState({\n          visible: true\n        });\n      };  \n\n      handleCancel = () => {\n        this.setState({\n          visible: false\n        });\n      };\n  \n      render() {\n        return (\n          <div id=\"add_topic\">\n              <div id=\"add_button\" onClick={ this.showModal }>\n                <Icon type=\"plus\"/>\n              </div>\n            <UploadImage \n              showModal={ this.state.visible } \n              hideModal={ this.handleCancel } \n              boxHeader=\"Upload new picture to start new topic\"/>\n          </div>\n        );\n      }\n}\n\nexport default AddTopic;","import {Route, BrowserRouter, Link}from 'react-router-dom';\nimport './header.scss';\nimport React from 'react';\nimport Login from './login';\nimport Logout from './logout'\nimport Register from './register';\nimport AddTopic from '../addTopic';\nimport { Menu, Dropdown, Avatar, Button, Badge } from 'antd';\n\nclass Header extends React.Component {\n\n    menu=(\n        <Menu>\n            <Menu.Item key=\"1\">\n                <Link to=\"/user\"><Button type=\"link\" icon=\"picture\">My posts</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n                <Link to=\"/user/notifications\"><Button type=\"link\" icon=\"notification\">Notifications</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n                <Link to=\"/user/setting\"><Button type=\"link\" icon=\"setting\">Setting</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n                <Logout ></Logout>\n            </Menu.Item>\n        </Menu>\n    );\n\n\n    render(){\n        if (this.props.isLogin) {\n            const avartarUrl = '../avatars/' + this.props.avatar+'.png'\n            return(\n                <div id='header'>\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <AddTopic />\n                    <div id='user_menu'>\n                        <Dropdown overlay={this.menu}>\n                            <div id=\"user_info\">\n                                <Badge count={0} offset={[0,2]} >\n                                    <Avatar size={40} src={avartarUrl}/>\n                                </Badge>\n                                <span className=\"name\">{this.props.userName}</span>\n                            </div>\n                        </Dropdown>\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div id=\"header\">\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <AddTopic />\n                    <div id='login'>\n                    <BrowserRouter>\n                        <Link to =\"/login\" className=\"login\">Login</Link>\n                        <Link to =\"/register\" className=\"register\">Register</Link>\n                        <div>\n                            <Route path=\"/login\" component={Login}/>\n                            <Route path=\"/register\" component={Register}/>\n                        </div>\n                    </BrowserRouter>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Icon, Popover, message } from 'antd';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface ReactPanelProps {\n\ttopicId: string,\n\tyourReact: any,\n\tupdateReacts: any,\n\tdeleteReacts: any\n}\ninterface ReactPanelState {\n\tyourReact: any,\n\ttypes: Array<string>\n}\n\nclass ReactPanel extends React.Component<ReactPanelProps, ReactPanelState>{\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tyourReact: this.props.yourReact,\n\t\t\ttypes: ['a', 'baiyan', 'aixin', 'daxiao', 'fadai', 'ganga', 'hanyan', 'liulei', 'xiaochulei', 'shengqi', 'feiwen', 'huaixiao', 'santiaoxian', 'yiwen', 'siliao']\n\t\t}\n\t}\n\n\tupdateReacts = this.props.updateReacts();\n\tdeleteReacts = this.props.deleteReacts();\n\n\tcomponentDidUpdate(prevReact: ReactPanelProps){\n\t\tif (this.props.yourReact !== prevReact.yourReact) {\n\t\t\tthis.setState({\n\t\t\t\tyourReact: this.props.yourReact\n\t\t\t})\n\t\t}\t\n\t}\n\n\treactToTopic = (to: string, emoji: string) => {\n\t\tconst curReact = this.state.yourReact;\n\t\t// add new react\n\t\tif (!curReact) {\n\t\t\tconst data = {\n\t\t\t\ttopic_id: to,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure'){\n\t\t\t\t\tmessage.error('You need to login to react');\n\t\t\t\t}\n\t\t\t\t// Already logged in \n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t// delete the react\n\t\telse if (curReact.emoji === emoji ) {\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tyourReact: \"\"\n\t\t\t\t})\n\t\t\t\tthis.deleteReacts(data.deleteId);\n\t\t\t\tmessage.success('React Deleted Successfully');\n\t\t\t})\n\t\t}\n\t\t// update current react\n\t\telse {\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure') {\n\t\t\t\t\tconsole.log('not login yet');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Updated Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst EmojiList = (\n\t\t\t<div className=\"emoji_box\">\n\t\t\t\t{this.state.types.map(emoji => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={emoji} className={this.state.yourReact.emoji === emoji ? 'isActive' : ''} onClick={() => this.reactToTopic(this.props.topicId, emoji)}>\n\t\t\t\t\t\t\t<MyIcon type={'icon-' + emoji} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\n\t\treturn (\n\t\t\t<Popover title=\"React\" content={EmojiList} placement=\"bottom\">\n\t\t\t\t<Icon className=\"add_react\" type=\"smile\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} />\n\t\t\t</Popover>\n\t\t)\n\t}\n}\n\nexport default ReactPanel;","import React from 'react';\nimport { Link }from 'react-router-dom';\nimport { Avatar, Icon } from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadBox from '../addTopic/uploadImage';\nimport './card.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '/iconfont.js'\n});\n\ninterface cardProps {\n\tsmallPicUrl: string,\n\tname: string,\n\tavatar: number,\n\ttopicId: string,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface cardState {\n\treacts: Array<any>,\n\tshowUploadModal: boolean\n}\n\n\nclass Card extends React.Component<cardProps, cardState>  {\n\tstate ={\n\t\treacts: this.props.reacts,\n\t\tshowUploadModal: false\n\t}\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++){\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif(exist){\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\t\n\t}\n\n\tdeleteReacts = (deleteId: string) =>{\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++){\n\t\t\tif (updatedReact[i]._id === deleteId){\n\t\t\t\tupdatedReact.splice(i,1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n        this.setState({\n          showUploadModal: true\n        });\n      };  \n\n\thandleCancelUpload = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModal: false\n\t\t});\n\t};\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>\n\t\t\t\t\t\t<img src={this.props.smallPicUrl} alt={this.props.smallPicUrl}/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interact_box\">\n\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t<div className=\"current_reacts\">\n\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts}/>\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} onClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{this.props.replies.length > 0 &&\n\t\t\t\t\t<div className=\"replies\">\n\t\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>{this.props.replies.length} replies</Link>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModal } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUpload }\n\t\t\t\t\t\t   boxHeader=\"Upload new picture to reply on topic\"\n\t\t\t\t\t\t   topicId={this.props.topicId}/>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './card';\nimport { Button, Menu, Dropdown, Tag, Row, Col, Icon} from 'antd';\nimport './index.scss';\n\ninterface topicListState {\n\tsort: number,\n\ttopics: Array<any>,\n\ttags: string,\n\tpageSize: number,\n\tpage: number,\n\tcanLoad: boolean\n}\n\nclass TopicList extends React.Component<{}, topicListState> {\n\tconstructor(props: any){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsort: 1,\n\t\t\ttopics: [],\n\t\t\ttags: 'From New to Old',\n\t\t\tpageSize: 4,\n\t\t\tpage: 0,\n\t\t\tcanLoad: true\n\t\t}\n\t}\n\n\tshowFromNewtoOld = (size: number, page: number, reset: boolean) => {\n\t\tif(reset){\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=1&size='+size+'&page='+page)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsort: 1,\n\t\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\t\ttags: 'From New to Old',\n\t\t\t\t\tpage: this.state.page + 1,\n\t\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tshowFromOldtoNew = (size: number, page: number, reset: boolean) => {\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=2&size='+size+'&page='+page)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsort: 2,\n\t\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\t\ttags: 'From Old to New',\n\t\t\t\t\tpage: this.state.page + 1,\n\t\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tshowFromLowtoHigh = (size: number, page: number, reset: boolean) => {\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=3&size='+size+'&page='+page)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsort: 3,\n\t\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\t\ttags: 'From Low to High',\n\t\t\t\t\tpage: this.state.page + 1,\n\t\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tshowFromHightoLow = (size: number, page: number, reset: boolean) => {\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=4&size='+size+'&page='+page)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsort: 4,\n\t\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\t\ttags: 'From High to Low',\n\t\t\t\t\tpage: this.state.page + 1,\n\t\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t\t})\n\t\t\t})\n\t}\n\t\n\tloadMore = (sort: number) => {\n\t\tswitch (sort) {\n\t\t\tcase 1:\n\t\t\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.showFromOldtoNew(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.showFromLowtoHigh(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.showFromHightoLow(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\tcomponentDidMount() {\n\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, true)\n\t}\n\n\trender() {\n\t\tconst recentMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={ ()=>this.showFromNewtoOld( this.state.pageSize, 0, true) }>New to Old</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={ ()=>this.showFromOldtoNew( this.state.pageSize, 0, true) }>Old to New</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\tconst popluarMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={() => this.showFromLowtoHigh( this.state.pageSize, 0, true) }>Low to High</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={() => this.showFromHightoLow( this.state.pageSize, 0, true)}>High to low</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\t\tconst topicList = this.state.topics.map( topic => {\n\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={topic._id}\n\t\t\t\t\t\tsmallPicUrl={topic.smallPicUrl} \n\t\t\t\t\t\tname={topic.createBy.name} \n\t\t\t\t\t\tavatar={topic.createBy.avatar}\n\t\t\t\t\t\tcreateAt={topic.createAt}\n\t\t\t\t\t\ttopicId={topic._id}\n\t\t\t\t\t\treplies={topic.replies}\n\t\t\t\t\t\treacts={topic.reacts}\n\t\t\t\t\t\tyourReact={topic.yourReact ? topic.yourReact : '' }\n\t\t\t\t\t/>\n\t\t\t)\n\t\t})\n\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"topic_list_tab\">\n\t\t\t\t\t<div className=\"sort_buttons\">\n\t\t\t\t\t\t<Dropdown overlay={recentMenu}>\n\t\t\t\t\t\t\t<Button ><Icon type=\"calendar\" />Recency</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t<Dropdown overlay={popluarMenu}>\n\t\t\t\t\t\t\t<Button className=\"popularity\"><Icon type=\"fire\" />Popularity</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sort_feedback\">\n\t\t\t\t\t\t<span className=\"sort\">Sort By:</span>\n\t\t\t\t\t\t<Tag color=\"gold\">{this.state.tags}</Tag>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\n\t\t\t\t<div id=\"topic_list\">{topicList}</div>\n\t\t\t\t{this.state.canLoad &&\n\t\t\t\t\t<Button id=\"load_more\" onClick={() => this.loadMore(this.state.sort)}>Loading more...</Button>\n\t\t\t\t}\n\t\t\t\t{!this.state.canLoad &&\n\t\t\t\t\t<div className=\"nomore\">\n\t\t\t\t\t\t<Icon style={{fontSize: '34px' }} type=\"build\" />\n\t\t\t\t\t\t<p>More pictures are coming</p>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default TopicList;","import React from 'react';\nimport { Avatar, Icon, Popover, Button } from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadImage from \"../addTopic/uploadImage\";\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface replyPros {\n\ttopicId: string,\n\toriginalPicUrl: string,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n\tyourReact: any,\n\treacts: Array<any>\n}\n\ninterface replyState {\n\treacts: Array<any>,\n\tvisible: boolean\n}\n\n\nclass Replies extends React.Component<replyPros, replyState> {\n\tconstructor(props: any) {\n        super(props);\n        this.state = {\n\t\t\treacts: this.props.reacts,\n        \tvisible: false\n        }\n\t}\n\t\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: true\n\t\t\t});\n\t\t  };  \n\t\n\thandleCancel = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: false\n\t\t\t});\n\t\t  };\n\n\trender(){\n\t\tconst repliesList = this.props.replies.map( reply => {\n\t\t\treturn(\n\t\t\t\t<div className=\"level3\" key={reply._id}>\n\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + reply.createBy.avatar + '.png'} />\n\t\t\t\t\t\t<strong>{reply.createBy.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {reply.createAt.substr(0, 10)}</span>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t\t<img src={reply.originalPicUrl} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"button_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\tclassName=\"add_reply\" \n\t\t\t\t\t\t\ttype=\"picture\" \n\t\t\t\t\t\t\ttheme=\"twoTone\" \n\t\t\t\t\t\t\ttwoToneColor=\"#1890ff\" \n\t\t\t\t\t\t\tstyle={{ fontSize: '24px' }} \n\t\t\t\t\t\t\tonClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}) \n\n\t\treturn(\n\t\t\t<div className=\"single_reply\">\n\t\t\t\t<div className=\"level2\">\n\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n\t\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t\t<img src={this.props.originalPicUrl} />\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"button_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tclassName=\"add_reply\"\n\t\t\t\t\t\t\ttype=\"picture\"\n\t\t\t\t\t\t\ttheme=\"twoTone\"\n\t\t\t\t\t\t\ttwoToneColor=\"#1890ff\"\n\t\t\t\t\t\t\tstyle={{ fontSize: '24px' }}\n\t\t\t\t\t\t\tonClick={this.showModal} />\n\t\t\t\t\t\t<UploadImage \n\t\t\t\t\t\t\tshowModal={ this.state.visible } \n\t\t\t\t\t\t\thideModal={ this.handleCancel } \n\t\t\t\t\t\t\tboxHeader=\"Upload new picture to reply\"\n\t\t\t\t\t\t\ttopicId={ this.props.topicId}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{repliesList}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Replies;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Avatar, Icon, Popover, Empty } from 'antd';\nimport Replies from './replies';\nimport './index.scss';\nimport ReactPanel from '../emoji';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface getIdProps {\n\tid: string\n}\n\ninterface topicProps extends RouteComponentProps<getIdProps>{\n\t\n}\n\ninterface replies {\n\t_id: string,\n\toriginalPicUrl: string,\n\tcreateBy: any,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface detailState {\n\tid: string,\n\tname: string,\n\tavatar: number,\n\toriginalPicUrl: string,\n\tcreateAt: string,\n\treplies: Array<replies>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\nclass TopicDetail extends React.Component< topicProps, detailState> {\n\tconstructor(props: topicProps){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tavatar: 1,\n\t\t\toriginalPicUrl: '',\n\t\t\tcreateAt: '',\n\t\t\treplies: [],\n\t\t\treacts: [],\n\t\t\tyourReact: \"\"\n\t\t}\n\t}\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\t\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch(process.env.REACT_APP_API_URL+'/topics/single?id='+ this.props.match.params.id)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconst curTopic = data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: curTopic._id,\n\t\t\t\t\tname: curTopic.createBy.name,\n\t\t\t\t\tavatar: curTopic.createBy.avatar,\n\t\t\t\t\toriginalPicUrl: curTopic.originalPicUrl,\n\t\t\t\t\tcreateAt: curTopic.createAt,\n\t\t\t\t\treplies: curTopic.replies,\n\t\t\t\t\treacts: curTopic.reacts,\n\t\t\t\t\tyourReact: curTopic.yourReact ? curTopic.yourReact : \"\"\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst repliesList = this.state.replies.map( reply => {\n\t\t\treturn (\n\t\t\t\t<Replies\n\t\t\t\t\tkey={reply._id}\n\t\t\t\t\toriginalPicUrl={reply.originalPicUrl}\n\t\t\t\t\tname={reply.createBy.name}\n\t\t\t\t\tavatar={reply.createBy.avatar}\n\t\t\t\t\treplies={reply.replies}\n\t\t\t\t\tcreateAt={reply.createAt}\n\t\t\t\t\ttopicId={reply._id}\n\t\t\t\t\treacts={reply.reacts}\n\t\t\t\t\tyourReact={reply.yourReact ? reply.yourReact : ''}\n\t\t\t\t>\n\t\t\t\t</Replies>\n\n\t\t\t)\n\t\t})\n\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id=\"topic_detail\">\n\t\t\t\t\t<div id=\"author_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.state.avatar + '.png'}/>\n\t\t\t\t\t\t<strong>{this.state.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {this.state.createAt.substr(0,10)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"main_pic\">\n\t\t\t\t\t\t<img src={this.state.originalPicUrl}/>\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.state.id} yourReact={this.state.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"replies_list\">\n\t\t\t\t\t<h2>Replies</h2>\n\t\t\t\t\t{repliesList.length == 0 && \n\t\t\t\t\t\t<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"There is no reply yet\" />\n\t\t\t\t\t}\n\t\t\t\t\t{repliesList}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default TopicDetail;","import React from 'react';\nimport { Icon, List, Avatar } from 'antd'; \nimport './index.scss'\n\ninterface boardState {\n    filter: string,\n    userList: Array<any>\n}\n\nclass LeaderBoard extends React.Component<{}, boardState> {\n    state = {\n        filter: 'reacts',\n        userList: []\n    }\n\n    showMostReacts = () => {\n        this.setState({\n            filter: 'reacts'\n        })\n        fetch(process.env.REACT_APP_API_URL +'/users/leaderboard?type=mostReacts')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    showMostTopics = () => {\n        this.setState({\n            filter: 'topics'\n        })\n        fetch(process.env.REACT_APP_API_URL + '/users/leaderboard?type=mostTopics')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    componentDidMount(){\n        this.showMostReacts()\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n                <h3><Icon type=\"unordered-list\" />Leaderboard</h3>\n                <div className=\"filter\">\n                    <button className={this.state.filter === 'reacts' ? 'isActive' : ''} onClick={this.showMostReacts}><Icon type=\"smile\" /> Reacts</button>\n                    <button className={this.state.filter === 'topics' ? 'isActive' : ''} onClick={this.showMostTopics}><Icon type=\"picture\" /> Topics</button>\n                </div>\n                <List\n                    id=\"leaderboard_list\"\n                    dataSource={this.state.userList}\n                    renderItem={(item: any) => (                \n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={<Avatar src={'../avatars/' + item.avatar + '.png'}/>}\n                                title={item.name}\n                                key= {item._id}\n                                description={this.state.filter === 'reacts' ? ('React Times: ' + item.reactTimes) : ('Post Topics: ' + item.topicTimes)}\n                            />\n                        </List.Item>                     \n                    )}>\n\n                </List>\n            </React.Fragment>\n            \n        )\n    }\n}\n\nexport default LeaderBoard;","import React from 'react';\nimport { Layout } from 'antd';\nimport { Route, Switch } from 'react-router';\nimport TopicList from '../topicList';\nimport TopicDetail from '../topicDetail';\nimport LeaderBoard from '../leaderboard';\n\nconst { Sider, Content } = Layout;\n\nclass TopicPanel extends React.Component {\n    render() {\n        return(\n            <Layout>\n                <Content>\n                    <Switch>\n                        <Route path=\"/topics_detail/:id\" component={TopicDetail} />\n                        <Route path=\"/\" exact component={TopicList} />\n                    </Switch>\n                </Content>\n                <Sider className=\"leaderboard\" breakpoint=\"lg\" collapsedWidth=\"0\" reverseArrow={true} ><LeaderBoard /></Sider>\n            </Layout>\n        )\n    }\n}\n\nexport default TopicPanel;","import React from 'react';\nimport Card from '../topicList/card';\nimport './index.scss';\n\ninterface MyPostsState {\n    topics: Array<any>\n}\n\nclass MyPosts extends React.Component<{}, MyPostsState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n        const topicList = this.state.topics.map(topic => {\n            return (\n                <Card\n                    key={topic._id}\n                    smallPicUrl={topic.smallPicUrl}\n                    name={topic.createBy.name}\n                    avatar={topic.createBy.avatar}\n                    createAt={topic.createAt}\n                    topicId={topic._id}\n                    replies={topic.replies}\n                    reacts={topic.reacts}\n                    yourReact={'empty'}\n                />\n            )\n        })\n\n        return ( \n            <React.Fragment>\n                <h2>My Posts</h2>\n                <div id=\"user_topic_list\">{topicList}</div> \n            </React.Fragment> \n        )\n    }\n}\n\nexport default MyPosts;","import React from 'react';\nimport { List, Avatar, Empty, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n    scriptUrl: '/iconfont.js'\n});\n\ninterface NotificationState {\n    notifications: Array<any>\n}\n\nclass Notification extends React.Component<{}, NotificationState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            notifications: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/notifications/toUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    notifications: data\n                })\n            })\n    }\n\n    render() {\n        if(this.state.notifications.length>0){\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <div id=\"notifications\">\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={this.state.notifications}\n                            renderItem={item => (\n                                <List.Item>\n                                    <List.Item.Meta\n                                        avatar={<Avatar src={'../avatars/' + item.fromUser.avatar + '.png'} />}\n                                        title={'You have a new ' + item.type}\n                                        description={\n                                            <React.Fragment>\n                                                <strong className=\"from\">{item.fromUser.name}</strong>\n                                                <p className=\"text\">{'has reacted to your picture with '}</p>\n                                                <MyIcon type={'icon-' + item.content} />\n                                                <Link to={`/topics_detail/${item.atTopic}`}>Link</Link>\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    </div>\n                </React.Fragment>\n            )\n        }\n        else{\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"You have no notifications yet\" />\n                </React.Fragment>\n            ) \n        }\n        \n    }\n}\n\nexport default Notification;","import React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\nimport './index.scss';\n\nclass UserPanelMenu extends React.Component<RouteComponentProps> {\n    \n\n    render() {\n        return (\n            \n            <Menu \n                id=\"user_panel_menu\"\n                defaultSelectedKeys={['/user']}\n                theme=\"light\"\n                mode=\"inline\"\n                selectedKeys={[this.props.location.pathname]}\n            >\n                <Menu.Item key=\"/user\">\n                    <Link to=\"/user\"><Icon type=\"picture\" /><span>My posts</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"/user/notifications\">\n                    <Link to=\"/user/notifications\"><Icon type=\"notification\" /><span>Notifications</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\"><Icon type=\"setting\" /><span>Settings</span></Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default UserPanelMenu;","import React from 'react';\nimport MyPosts from './mypost';\nimport Notification from './notifications';\nimport UserPanelMenu from './menu';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { Route } from 'react-router';\n\nconst { Sider, Content } = Layout;\n\ninterface userPanelState {\n    topics: Array<any>\n}\n\nclass UserPanel extends React.Component<{}, userPanelState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n\n        return(\n            <Layout>\n                <Sider width={240} style={{ background: '#fff' }}>\n                    <Route path=\"/user\" component={UserPanelMenu}></Route>\n                </Sider>\n                <Content>\n                    <div id=\"user_panel\">\n                        <Route path=\"/user\" exact component={MyPosts}/>\n                        <Route path=\"/user/notifications\" component={Notification} />\n                    </div>\n                </Content>\n            </Layout>\n\n\n        )\n    }\n}\n\nexport default UserPanel;","import React from 'react';\nimport './index.scss';\n\nclass Footer extends React.Component {\n    render() {\n        return(\n            <footer>\n                <div className=\"footer-logo\">\n                    <img src=\"/images/logo-footer.png\" />\n                </div>\n                <ul>\n                    <li><a>How to use</a></li>\n                    <li><a>About us</a></li>\n                </ul>\n            </footer>\n        ) \n    }\n}\n\nexport default Footer;","import React from 'react';\nimport io from 'socket.io-client';\nimport Header from './header';\nimport TopicPanel from './topic';\nimport UserPanel from './user';\nimport Footer from './footer';\nimport { Affix, BackTop, Icon} from 'antd';\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Switch }from 'react-router-dom';\n\ninterface currentUser {\n\tuser: {\n\t\tname: string,\n\t\temail: string,\n\t\tid: string,\n\t\tavatar: string\n\t},\n\tisLogin?: boolean\n}\n\n\nclass App extends React.Component<{}, currentUser> {\n\tstate = {\n\t\tuser: {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tid: '',\n\t\t\tavatar:''\n\t\t},\n\t\tisLogin: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updataFetch();\n\t\t// var socket = io();\n\t\t// socket.on('connection', function (socket: any) {\n\t\t// \tconsole.log('a user connected');\n\t\t// });\n\t\t// socket.emit('mssg', 'biubiubiu')\n\t}\n\n\tupdataFetch=()=>{\n\t\tfetch(process.env.REACT_APP_API_URL+'/users')\n\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.status === 'success'){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\tname: data.user.name,\n\t\t\t\t\t\t\temail: data.user.email,\n\t\t\t\t\t\t\tid: data.user.id,\n\t\t\t\t\t\t\tavatar: data.user.avatar,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLogin: true\n\t\t\t\t\t})\n\t\t\t\t}else{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLogin: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\" id='App'>\n\t\t\t\t\t<Affix>\n\t\t\t\t\t\t<Header userName={this.state.user.name} isLogin={this.state.isLogin} avatar={this.state.user.avatar}></Header>\n\t\t\t\t\t</Affix>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/user\" component={UserPanel} />\n\t\t\t\t\t\t<Route path=\"/\" component={TopicPanel} />\n\t\t\t\t\t</Switch>\t\t\t\t\t\n\t\t\t\t\t<BackTop><div className=\"ant-back-top-inner\"><Icon type=\"arrow-up\" /></div></BackTop>\n\t\t\t\t\t<Footer/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n\n}\n\n export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}