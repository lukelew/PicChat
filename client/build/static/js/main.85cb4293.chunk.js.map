{"version":3,"sources":["header/login.jsx","header/logout.jsx","header/register.jsx","header/index.jsx","emoji/index.tsx","addTopic/uploadImage.tsx","topicList/card.tsx","topicList/index.tsx","topicDetail/replies.tsx","topicDetail/index.tsx","leaderboard/index.tsx","topic/index.tsx","user/mypost.tsx","user/notifications.tsx","user/menu.tsx","user/index.tsx","addTopic/index.tsx","footer/index.tsx","App.tsx","index.tsx"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClose","setState","visible","isLogin","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","postData","post_data","email","state","password","fetch","process","method","body","JSON","stringify","headers","Headers","Content-Type","then","res","json","data","user","login_username","name","message","success","window","location","reload","target","value","getFieldDecorator","path","pathname","query","id","status","react_default","a","createElement","react_router","to","drawer","title","width","es_form","onSubmit","className","Item","label","hasFeedback","rules","required","type","input","prefix","icon","style","color","placeholder","onChange","handleChangeEmail","bind","handleChangePassword","href","es_button","htmlType","onClick","React","Component","Form","create","Logout","logout","isLogout","Fragment","Register","cancel","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","avatar","text","dataBack","parse","isRegister","Vertified","changeAvatar","newAvatar","closeAvatar","showAvatar","_this2","avatarUrl","avatarList","_loop","i","push","key","size","src","result","subTitle","extra","display","min","handleChangeName","validator","Password","onBlur","Header","menu","react_router_dom","header_logout","avartarUrl","dropdown","overlay","badge","count","offset","userName","component","MyIcon","Icon","createFromIconfontCN","scriptUrl","ReactPanel","updateReacts","deleteReacts","reactToTopic","emoji","curReact","yourReact","react_id","_id","Content-type","deleteId","newReact","topic_id","error","types","prevReact","EmojiList","map","topicId","popover","content","placement","theme","twoToneColor","fontSize","UploadImage","showModal","postTopic","url","originalPicUrl","img_url_original","replyTo","smallPicUrl","img_url_small","fileList","hideModal","handleCancel","info","toConsumableArray","slice","file","response","modal","boxHeader","okText","onOk","onCancel","upload","action","onImageUpload","prevProps","Card","reacts","showUploadModal","exist","updatedReacts","length","currentState","concat","updatedReact","splice","handleCancelUpload","createAt","substr","alt","react","card_MyIcon","src_emoji_0","replies","uploadImage","TopicList","showFromNewtoOld","page","reset","topics","sort","tags","canLoad","pageSize","showFromOldtoNew","showFromLowtoHigh","showFromHightoLow","loadMore","recentMenu","popluarMenu","topicList","topic","topicList_card","createBy","tag","Replies","repliesList","reply","TopicDetail","match","params","curTopic","_this3","topicDetail_MyIcon","empty","image","Empty","PRESENTED_IMAGE_SIMPLE","description","LeaderBoard","filter","userList","showMostReacts","showMostTopics","list","dataSource","renderItem","item","Meta","reactTimes","topicTimes","Sider","Layout","Content","TopicPanel","layout","exact","breakpoint","collapsedWidth","reverseArrow","src_leaderboard","MyPosts","Notification","notifications","itemLayout","fromUser","notifications_MyIcon","atTopic","UserPanelMenu","defaultSelectedKeys","mode","selectedKeys","UserPanel","user_Sider","background","user_Content","AddTopic","upload_props","PureComponent","Footer","App","updataFetch","affix","src_header","src_addTopic","back_top","src_footer","ReactDOM","render","src_App_0","document","querySelector"],"mappings":"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","file":"static/js/main.85cb4293.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\n\n// import {Route, BrowserRouter}from 'react-router-dom';\n// import {Link} from 'react-router-dom';\n\nimport { Button,Form, Icon, Input,Drawer,message} from 'antd';\nimport './login.scss';\nimport 'antd/dist/antd.css';\n\n\n\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { \n        isLogin: false,\n        login_username: '',\n        visible: true,\n\n        email:'',\n        password:'',\n    };\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n      isLogin: true,\n    });\n\n  };\n\n  handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n          if (!err) {\n              console.log('Received values of form: ', values);\n          }\n      })\n  };\n\n  //obtain name and password \n  handleChangeEmail(e){\n      this.setState({\n          email: e.target.value\n      })\n  };\n\n  handleChangePassword(e){\n      this.setState({\n          password: e.target.value\n      })\n  };\n\n  //Post_data_login\n    postData = () => {\n        let url = process.env.REACT_APP_API_URL +'/users/login';\n        let post_data = { \n          email: this.state.email,\n          password: this.state.password\n        };\n\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        }).then(res=>res.json()).then(\n            data=>{\n            //后面改成验证邮箱和密码是否匹配。密码部分未写\n                if(data.user.email===this.state.email){\n                  console.log(data);\n                  this.setState({\n                        isLogin: true,\n                        login_username: data.user.name\n                  });\n                  message.success('Login Success');\n                  window.location.reload();\n                }\n                else{\n                    console.log(data);\n                    this.setState({\n                        isLogin: false\n                    });\n                    message.success('Login False');\n                    window.location.reload();\n                } \n            }\n        )\n    };\n\n  //life circle\n//   componentWillMount(){\n//     this.postData();\n//     }\n\n\n\nrender() {\n    const { getFieldDecorator } = this.props.form;\n\n    //pass user's data\n    var datapass={name: this.state.login_username,email: this.state.email,id:'',status: true}\n    // datapass= JSON.stringify(datapass);\n\n    var path={\n        pathname: '/',\n        query: datapass\n    };\n    \n    if(this.state.isLogin){\n        return <Redirect to= {path}/> \n    }\n    else{\n    //login_button\n    // if(this.isLogin){\n        return (\n            <div id='login'>\n                <div id='login_form'>\n                    <Drawer\n                        title=\"Login\"\n                        width={350}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\" >\n                        {/*login_email */}\n                        <Form.Item label=\"E-mail\" hasFeedback>\n                            {getFieldDecorator('eamil', {\n                                rules: [{ required: true, type: 'email',message: 'Please input email‘s format!' }],\n                              })(\n                                <Input\n                                    prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Email\"\n                                    onChange={this.handleChangeEmail.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_password*/}\n                        <Form.Item label=\"Password\" hasFeedback>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: 'Please input your Password!' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={this.handleChangePassword.bind(this)}\n                                />,\n                            )}\n                        </Form.Item>\n\n                        {/* login_submit*/}\n                        <Form.Item>\n                          <a className=\"login-form-forgot\" href=\"/register\">Forgot password?</a>\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.postData}>Login</Button>\n\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                </div>\n            </div>\n        );\n    }\n  }\n};\nexport default Form.create()(Login);","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { message, Button} from 'antd';\nimport { Redirect } from 'react-router';\nimport './logout.scss';\n\n\nclass Logout extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            isLogout: false,\n            login_username: '',\n            email:'',\n        };\n    }\n\n\n    logout=()=>{\n        let url = process.env.REACT_APP_API_URL + '/users/logout';\n        fetch(url,{\n            method:'Get',\n            }).then(res=>res.json()).then(\n                data=>{\n                    console.log(data);\n                    this.setState({\n                        isLogout: true,\n                    })\n                    message.success('Login success');\n                    window.location.reload();\n                    console.log('logout success',this.state.isLogout)\n                }\n            )\n    };\n    render(){\n        if(this.state.isLogout)\n        {   \n            var path={pathname:'/'};\n            return <Redirect to= {path}/>\n        }\n        else{\n            return(\n                <React.Fragment>\n                    <Button id=\"logout_button\" onClick={this.logout} type=\"link\" icon=\"logout\">Logout</Button>\n                </React.Fragment>\n            );\n        }\n\n    }\n}\nexport default Logout;\n    \n\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button,Form, Icon, Input,Drawer,Avatar,Result} from 'antd';\nimport './register.scss';\nimport 'antd/dist/antd.css';\n// import Check_Login from './checkLogin'\n\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            email: '',\n            name: '',\n            password: '',\n            avatar: 1,\n\n            showAvatar: 'none',\n            closeAvatar:'',\n\n            confirmDirty: false,\n            visible: true,\n            cancel: false, //用于关闭页面并返回主页路径\n            isRegister: false //用于核对是否注册成功\n        };\n    }\n    \n    onClose = () => {\n        this.setState({\n        visible: false,\n        // isRegister: true,\n        cancel: true\n        });\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n          }\n        });\n      };\n    \n      //obtain name and password \n    handleChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        })\n    };\n    \n    handleChangePassword(e){\n        this.setState({\n            password: e.target.value\n        })\n    };\n    handleChangeName(e){\n        this.setState({\n            name: e.target.value\n        })\n    };\n\n    //judge confirm password\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    \n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Wrong!Please Confirm Again!');\n        } else {\n          callback();\n        }\n    };\n    \n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      };\n\n    //Post_data_register\n    postData = () => {\n        let url = process.env.REACT_APP_API_URL + '/users/register';\n        let post_data = { \n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password,\n            avatar: this.state.avatar\n        };\n\n        //post register user info\n        fetch(url,{\n            method:'POST',\n            body: JSON.stringify(post_data),\n            headers: new Headers({\n            'Content-Type': 'application/json'\n            })\n        }).then(res=>res.text().then(\n            data=>{\n                console.log(data);\n                var dataBack=JSON.parse(data);\n                console.log(dataBack,dataBack.status)\n                //register status and email address vertify\n                if(dataBack.status===\"success\"){\n                    this.setState({\n                        isRegister: true,\n                    })\n                    console.log(this.state.isRegister,'in')\n                    // window.location.reload();\n                }\n            }\n        ))\n    };\n    //control vertify page\n    Vertified=()=>{\n        this.setState({\n            cancel: true,\n        })\n    }\n    \n    //change avatar\n    changeAvatar = (newAvatar)=>{\n        this.setState({\n            avatar: newAvatar,\n            closeAvatar:'',\n            showAvatar:'none'\n        })\n    }\n\n    showAvatar=()=>{\n        this.setState({\n            closeAvatar: 'none',\n            showAvatar:''\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const avatarUrl= '../avatars/'+this.state.avatar+'.png';\n\n        const avatarList = [];\n        for(let i=1; i<=16; i++){\n            avatarList.push(<Avatar key={i} size=\"64\" src={'../avatars/'+ i +'.png'} onClick={() => this.changeAvatar(i)} />)\n        }\n\n        if(this.state.cancel){\n            return <Redirect to=\"/\" />\n          }\n        else if (this.state.isRegister){\n                return (\n                    <div id='successRegister'>\n                        <Drawer\n                            title=\"Register\"\n                            width={350}\n                            onClose={this.onClose}\n                            visible={this.state.visible}\n                        >\n                            <Result\n                                status=\"success\"\n                                title=\"Vertify Your E-mail Address\"\n                                subTitle=\"We just send you an E-mail with vertification link. Please check your mailbox and click the link to vertiy your E-mail Address\"\n                                extra={[\n                                <Button type=\"primary\" onClick={this.Vertified}>Already Vertified</Button>,\n                                ]}\n                            />\n                        </Drawer>\n                    </div>\n                )\n            }\n        else {\n            return(\n                <div id='register'>\n                    <Drawer\n                        title=\"Register\"\n                        width={350}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                    >\n                    <h4><span className=\"mustChoose\">*</span> Please select your avatar</h4>\n                    \n                    <div id=\"avatarN\" style={{display: this.state.showAvatar}} className=\"notChosen\">\n                        {avatarList}\n                    </div>\n                \n                    <div id=\"avatarY\" style={{display: this.state.closeAvatar}} className=\"isChosen\">\n                        <Avatar id=\"1\" size={64} src={avatarUrl} onClick={this.showAvatar}/>\n                    </div>\n                    \n                    <Form onSubmit={this.handleSubmit} className=\"register-form\" >\n                        {/* enter Email */}\n                        <Form.Item label=\"E-mail\" hasFeedback>\n                        {getFieldDecorator('eamil', {\n                            rules: [{ required: true, type:'email',message: 'Please input email‘s format！' }],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"E-mail\"\n                            onChange={this.handleChangeEmail.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Name */}\n                        <Form.Item label=\"User Name\" hasFeedback>\n                        {getFieldDecorator('Name', {\n                            rules: [{ required: true, min:'3',message: 'The minimum letter is 3!' }],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"User Name\"\n                            onChange={this.handleChangeName.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* enter Password */}\n                        <Form.Item label=\"Password\" hasFeedback>\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, min:'4',message: 'Please input your Password!' },\n                            {validator: this.validateToNextPassword,},],\n                        })(\n                            <Input.Password\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChangePassword.bind(this)}\n                            />,\n                        )}\n                        </Form.Item>\n\n                        {/* confirm Password */}\n                        <Form.Item label=\"Confirm Password\" hasFeedback>\n                        {getFieldDecorator('confirm', {\n                            rules: [{required: true, min:'4',message: 'Please confirm your password!',},\n                            {\n                                validator: this.compareToFirstPassword,\n                            },\n                            ],\n                        })(<Input.Password onBlur={this.handleConfirmBlur} placeholder=\"Password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}/>) }\n                        </Form.Item>\n                        \n                        <Form.Item>\n                        <Button size=\"large\" type=\"primary\" htmlType=\"submit\" className=\"register-form-button\" onClick={this.postData}>\n                            Register\n                        </Button>\n                        <a href=\"/login\" id=\"login_register\">Login Now</a>\n                        </Form.Item>\n                    </Form>\n                    </Drawer>\n                    </div>\n                    );\n            }\n    }\n};\nexport default Form.create()(Register);","import {Route, BrowserRouter, Link}from 'react-router-dom';\nimport './header.scss';\nimport React from 'react';\nimport Login from './login';\nimport Logout from './logout'\nimport Register from './register';\nimport { Menu, Dropdown, Avatar, Button, Badge } from 'antd';\n\nclass Header extends React.Component {\n\n    menu=(\n        <Menu>\n            <Menu.Item key=\"1\">\n                <Link to=\"/user\"><Button type=\"link\" icon=\"picture\">My posts</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n                <Link to=\"/user/notifications\"><Button type=\"link\" icon=\"notification\">Notifications</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n                <Link to=\"/user/setting\"><Button type=\"link\" icon=\"setting\">Setting</Button></Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n                <Logout ></Logout>\n            </Menu.Item>\n        </Menu>\n    );\n\n\n    render(){\n        if (this.props.isLogin) {\n            const avartarUrl = '../avatars/' + this.props.avatar+'.png'\n            return(\n                <div id='header'>\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <div id='user_menu'>\n                        <Dropdown overlay={this.menu}>\n                            <div id=\"user_info\">\n                                <Badge count={0} offset={[0,2]} >\n                                    <Avatar size={40} src={avartarUrl}/>\n                                </Badge>\n                                <span className=\"name\">{this.props.userName}</span>\n                            </div>\n                        </Dropdown>\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div id=\"header\">\n                    <Link id=\"logo\" to=\"/\">picChat</Link>\n                    <div id='login'>\n                    <BrowserRouter>\n                        <Link to =\"/login\" className=\"login\">Login</Link>\n                        <Link to =\"/register\" className=\"register\">Register</Link>\n                        <div>\n                            <Route path=\"/login\" component={Login}/>\n                            <Route path=\"/register\" component={Register}/>\n                        </div>\n                    </BrowserRouter>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Icon, Popover, message } from 'antd';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface ReactPanelProps {\n\ttopicId: string,\n\tyourReact: any,\n\tupdateReacts: any,\n\tdeleteReacts: any\n}\ninterface ReactPanelState {\n\tyourReact: any,\n\ttypes: Array<string>\n}\n\nclass ReactPanel extends React.Component<ReactPanelProps, ReactPanelState>{\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tyourReact: this.props.yourReact,\n\t\t\ttypes: ['a', 'baiyan', 'aixin', 'daxiao', 'fadai', 'ganga', 'hanyan', 'liulei', 'xiaochulei', 'shengqi', 'feiwen', 'huaixiao', 'santiaoxian', 'yiwen', 'siliao']\n\t\t}\n\t}\n\n\tupdateReacts = this.props.updateReacts();\n\tdeleteReacts = this.props.deleteReacts();\n\n\tcomponentDidUpdate(prevReact: ReactPanelProps){\n\t\tif (this.props.yourReact !== prevReact.yourReact) {\n\t\t\tthis.setState({\n\t\t\t\tyourReact: this.props.yourReact\n\t\t\t})\n\t\t}\t\n\t}\n\n\treactToTopic = (to: string, emoji: string) => {\n\t\tconst curReact = this.state.yourReact;\n\t\t// add new react\n\t\tif (!curReact) {\n\t\t\tconst data = {\n\t\t\t\ttopic_id: to,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure'){\n\t\t\t\t\tmessage.error('You need to login to react');\n\t\t\t\t}\n\t\t\t\t// Already logged in \n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t// delete the react\n\t\telse if (curReact.emoji === emoji ) {\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tyourReact: \"\"\n\t\t\t\t})\n\t\t\t\tthis.deleteReacts(data.deleteId);\n\t\t\t\tmessage.success('React Deleted Successfully');\n\t\t\t})\n\t\t}\n\t\t// update current react\n\t\telse {\n\t\t\tconst data = {\n\t\t\t\treact_id: curReact._id,\n\t\t\t\temoji: emoji\n\t\t\t}\n\t\t\tfetch(process.env.REACT_APP_API_URL + '/reacts', {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data)\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\t// User hasn't logged in yet\n\t\t\t\tif (data.status === 'failure') {\n\t\t\t\t\tconsole.log('not login yet');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tyourReact: {\n\t\t\t\t\t\t\t_id: data.newReact._id,\n\t\t\t\t\t\t\temoji: emoji\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.updateReacts(data.newReact);\n\t\t\t\t\tmessage.success('React Updated Successfully');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst EmojiList = (\n\t\t\t<div className=\"emoji_box\">\n\t\t\t\t{this.state.types.map(emoji => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={emoji} className={this.state.yourReact.emoji === emoji ? 'isActive' : ''} onClick={() => this.reactToTopic(this.props.topicId, emoji)}>\n\t\t\t\t\t\t\t<MyIcon type={'icon-' + emoji} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\n\t\treturn (\n\t\t\t<Popover title=\"React\" content={EmojiList} placement=\"bottom\">\n\t\t\t\t<Icon className=\"add_react\" type=\"smile\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} />\n\t\t\t</Popover>\n\t\t)\n\t}\n}\n\nexport default ReactPanel;","import React from \"react\";\nimport {Modal, Upload, message, Button, Icon} from 'antd';\nimport './index.scss';\n\ninterface IUploadImageState {\n    visible: boolean;\n    img_url_original: string;\n    img_url_small: string;\n    fileList: any[];\n    topicId?: String;\n}\n\ninterface IUploadImageProps {\n    showModal: boolean,\n    hideModal: Function,\n    boxHeader: String,\n    topicId?: String\n}\n\nclass UploadImage extends React.Component<IUploadImageProps, IUploadImageState> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false,\n            img_url_original: '',\n            img_url_small: '',\n            fileList:[],\n            topicId: this.props.topicId\n          }\n        }\n\n        onImageUpload(info: any) {\n            let fileList = [...info.fileList];\n            fileList = fileList.slice(-1);\n            this.setState({\n              fileList: [...fileList]\n            });\n      \n            if (info.file.status !== 'uploading') {\n            }\n            if (info.file.status === 'done') {\n              this.setState({\n                img_url_original: info.file.response[0],\n                img_url_small: info.file.response[1]\n              });\n              message.success(`File uploaded successfully!`);\n            } else if (info.file.status == 'error') {\n              message.error(`The image contains text/unappropriate content and can't be uploaded.`);\n            }\n          };\n      \n          showModal = () => {\n              this.setState({\n                visible: true,\n              });\n            };\n        \n            postTopic = () => {\n              let url;\n              let post_data;\n\n              if (this.state.topicId)\n              {\n                url = process.env.REACT_APP_API_URL +'/topics/reply';\n                post_data = {\n                  originalPicUrl: this.state.img_url_original, \n                  replyTo: this.state.topicId};\n              }\n              else\n              {\n                url = process.env.REACT_APP_API_URL +'/topics';\n                post_data = {\n                  originalPicUrl: this.state.img_url_original, \n                  smallPicUrl: this.state.img_url_small,\n                };\n              }\n\n              console.log(post_data);\n\n              fetch(url,{\n                method:'POST',\n                body: JSON.stringify(post_data),\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                  })\n                }).then(res=>res.json()).then(\n                    data=>{\n                  console.log(data);\n                }\n              )\n\n              this.setState({\n                visible: false,\n                fileList:[]\n              });\n\n              this.props.hideModal();\n      \n              //TODO: change this refresh with the component update\n              window.location.reload();\n            };\n        \n            handleCancel = () => {            \n              this.props.hideModal();\n  \n              this.setState({\n                fileList: [],\n                visible: false\n              });\n            };\n\n    render() {\n        return (\n            <div className=\"modal_window\">\n            <Modal\n              title={this.props.boxHeader}\n              visible={this.state.visible}\n              okText=\"Upload\"\n              onOk={() => {this.postTopic()}}\n              onCancel={this.handleCancel}\n            >\n                <div className=\"image_upload\">\n                <Upload name=\"image\"\n                        action={process.env.REACT_APP_API_URL + '/images/upload'}                      \n                        onChange={(info) => {this.onImageUpload(info);}}\n                        fileList={this.state.fileList}\n                        >\n                    <Button>\n                    <Icon type=\"upload\" /> Click to upload image\n                    </Button>\n                </Upload>\n                </div>                \n            </Modal> \n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps: IUploadImageProps) {\n        if (prevProps.showModal != this.props.showModal)\n        {\n            this.setState({\n                visible: this.props.showModal\n            });\n        }    \n        \n        if (prevProps.topicId != this.props.topicId)\n        {\n          this.setState({\n            topicId: this.props.topicId\n          });\n        }\n    }\n}\n\nexport default UploadImage;\n\n\n\n","import React from 'react';\nimport { Link }from 'react-router-dom';\nimport { Avatar, Icon } from 'antd';\nimport ReactPanel from '../emoji';\nimport UploadBox from '../addTopic/uploadImage';\nimport './card.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '/iconfont.js'\n});\n\ninterface cardProps {\n\tsmallPicUrl: string,\n\tname: string,\n\tavatar: number,\n\ttopicId: string,\n\tcreateAt: string,\n\treplies: Array<any>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\ninterface cardState {\n\treacts: Array<any>,\n\tshowUploadModal: boolean\n}\n\n\nclass Card extends React.Component<cardProps, cardState>  {\n\tstate ={\n\t\treacts: this.props.reacts,\n\t\tshowUploadModal: false\n\t}\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++){\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif(exist){\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\t\n\t}\n\n\tdeleteReacts = (deleteId: string) =>{\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++){\n\t\t\tif (updatedReact[i]._id === deleteId){\n\t\t\t\tupdatedReact.splice(i,1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tshowModal = () => {\n        this.setState({\n          showUploadModal: true\n        });\n      };  \n\n\thandleCancelUpload = () => {\n\t\tthis.setState({\n\t\t\tshowUploadModal: false\n\t\t});\n\t};\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>\n\t\t\t\t\t\t<img src={this.props.smallPicUrl} alt={this.props.smallPicUrl}/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interact_box\">\n\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t<div className=\"current_reacts\">\n\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.props.topicId} yourReact={this.props.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts}/>\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} onClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{this.props.replies.length > 0 &&\n\t\t\t\t\t<div className=\"replies\">\n\t\t\t\t\t\t<Link to={`/topics_detail/${this.props.topicId}`}>{this.props.replies.length} replies</Link>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<UploadBox showModal={ this.state.showUploadModal } \n\t\t\t\t\t\t   hideModal={ this.handleCancelUpload }\n\t\t\t\t\t\t   boxHeader=\"Upload new picture to reply on topic\"\n\t\t\t\t\t\t   topicId={this.props.topicId}/>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './card';\nimport { Button, Menu, Dropdown, Tag, Row, Col, Icon} from 'antd';\nimport './index.scss';\n\ninterface topicListState {\n\tsort: number,\n\ttopics: Array<any>,\n\ttags: string,\n\tpageSize: number,\n\tpage: number,\n\tcanLoad: boolean\n}\n\nclass TopicList extends React.Component<{}, topicListState> {\n\tconstructor(props: any){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsort: 1,\n\t\t\ttopics: [],\n\t\t\ttags: 'From New to Old',\n\t\t\tpageSize: 4,\n\t\t\tpage: 0,\n\t\t\tcanLoad: true\n\t\t}\n\t}\n\n\tshowFromNewtoOld = (size: number, page: number, reset: boolean) => {\n\t\tif(reset){\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=1&size='+size+'&page='+page)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsort: 1,\n\t\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\t\ttags: 'From New to Old',\n\t\t\t\t\tpage: this.state.page + 1,\n\t\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tshowFromOldtoNew = (size: number, page: number, reset: boolean) => {\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=2&size='+size+'&page='+page)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsort: 2,\n\t\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\t\ttags: 'From Old to New',\n\t\t\t\t\tpage: this.state.page + 1,\n\t\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tshowFromLowtoHigh = (size: number, page: number, reset: boolean) => {\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=3&size='+size+'&page='+page)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsort: 3,\n\t\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\t\ttags: 'From Low to High',\n\t\t\t\t\tpage: this.state.page + 1,\n\t\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tshowFromHightoLow = (size: number, page: number, reset: boolean) => {\n\t\tif (reset) {\n\t\t\tthis.setState({\n\t\t\t\ttopics: [],\n\t\t\t\tpage: 0\n\t\t\t})\n\t\t}\n\t\tfetch(process.env.REACT_APP_API_URL + '/topics?sort=4&size='+size+'&page='+page)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsort: 4,\n\t\t\t\t\ttopics: [...this.state.topics, ...data],\n\t\t\t\t\ttags: 'From High to Low',\n\t\t\t\t\tpage: this.state.page + 1,\n\t\t\t\t\tcanLoad: data.length < this.state.pageSize? false : true\n\t\t\t\t})\n\t\t\t})\n\t}\n\t\n\tloadMore = (sort: number) => {\n\t\tswitch (sort) {\n\t\t\tcase 1:\n\t\t\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.showFromOldtoNew(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.showFromLowtoHigh(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.showFromHightoLow(this.state.pageSize, this.state.page, false)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\tcomponentDidMount() {\n\t\tthis.showFromNewtoOld(this.state.pageSize, this.state.page, true)\n\t}\n\n\trender() {\n\t\tconst recentMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={ ()=>this.showFromNewtoOld( this.state.pageSize, 0, true) }>New to Old</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={ ()=>this.showFromOldtoNew( this.state.pageSize, 0, true) }>Old to New</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\n\t\tconst popluarMenu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item key=\"1\" onClick={() => this.showFromLowtoHigh( this.state.pageSize, 0, true) }>Low to High</Menu.Item>\n\t\t\t\t<Menu.Item key=\"2\" onClick={() => this.showFromHightoLow( this.state.pageSize, 0, true)}>High to low</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\t\tconst topicList = this.state.topics.map( topic => {\n\t\t\treturn (\n\t\t\t\t// <Col span={8} xs={24} md={12} lg={8}>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={topic._id}\n\t\t\t\t\t\tsmallPicUrl={topic.smallPicUrl} \n\t\t\t\t\t\tname={topic.createBy.name} \n\t\t\t\t\t\tavatar={topic.createBy.avatar}\n\t\t\t\t\t\tcreateAt={topic.createAt}\n\t\t\t\t\t\ttopicId={topic._id}\n\t\t\t\t\t\treplies={topic.replies}\n\t\t\t\t\t\treacts={topic.reacts}\n\t\t\t\t\t\tyourReact={topic.yourReact ? topic.yourReact : '' }\n\t\t\t\t\t/>\n\t\t\t\t// </Col>\n\t\t\t)\n\t\t})\n\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"topic_list_tab\">\n\t\t\t\t\t<div className=\"sort_buttons\">\n\t\t\t\t\t\t<Dropdown overlay={recentMenu}>\n\t\t\t\t\t\t\t<Button ><Icon type=\"calendar\" />Recency</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t<Dropdown overlay={popluarMenu}>\n\t\t\t\t\t\t\t<Button className=\"popularity\"><Icon type=\"fire\" />Popularity</Button>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sort_feedback\">\n\t\t\t\t\t\t<span className=\"sort\">Sort By:</span>\n\t\t\t\t\t\t<Tag color=\"gold\">{this.state.tags}</Tag>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\n\t\t\t\t{/* <Row type=\"flex\" justify=\"center\" align=\"middle\" > */}\n\t\t\t\t\t<div id=\"topic_list\">{topicList}</div>\n\t\t\t\t{/* </Row> */}\n\t\t\t\t{this.state.canLoad &&\n\t\t\t\t\t<Button id=\"load_more\" onClick={() => this.loadMore(this.state.sort)}>Loading more...</Button>\n\t\t\t\t}\n\t\t\t\t{!this.state.canLoad &&\n\t\t\t\t\t<div className=\"nomore\">\n\t\t\t\t\t\t<Icon style={{fontSize: '24px' }} type=\"like\" />\n\t\t\t\t\t\t<p >Please wait more images updated</p>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default TopicList;","import React from 'react';\nimport { Avatar, Icon, Popover, Button } from 'antd';\nimport UploadImage from \"../addTopic/uploadImage\";\nimport './index.scss';\n\ninterface replyPros {\n\ttopicId: string,\n\toriginalPicUrl: string,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>\n}\n\ninterface replyState {\n\tvisible: boolean\n}\n\n\nclass Replies extends React.Component<replyPros, replyState> {\n\tconstructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false\n          }\n\t\t}\n\t\n\tshowModal = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: true\n\t\t\t});\n\t\t  };  \n\t\n\thandleCancel = () => {\n\t\t\tthis.setState({\n\t\t\t  visible: false\n\t\t\t});\n\t\t  };\n\n\trender(){\n\t\tconst repliesList = this.props.replies.map( reply => {\n\t\t\treturn(\n\t\t\t\t<div className=\"level3\" key={reply._id}>\n\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + reply.createBy.avatar + '.png'} />\n\t\t\t\t\t\t<strong>{reply.createBy.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {reply.createAt.substr(0, 10)}</span>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t\t<img src={reply.originalPicUrl} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"button_box\">\n\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\tclassName=\"add_reply\" \n\t\t\t\t\t\t\ttype=\"picture\" \n\t\t\t\t\t\t\ttheme=\"twoTone\" \n\t\t\t\t\t\t\ttwoToneColor=\"#1890ff\" \n\t\t\t\t\t\t\tstyle={{ fontSize: '24px' }} \n\t\t\t\t\t\t\tonClick={this.showModal}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}) \n\n\t\treturn(\n\t\t\t<div className=\"single_reply\">\n\t\t\t\t<div className=\"level2\">\n\t\t\t\t\t<div className=\"user_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.props.avatar + '.png'} />\n\t\t\t\t\t\t<strong>{this.props.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {this.props.createAt.substr(0, 10)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"img_box\">\n\t\t\t\t\t\t<img src={this.props.originalPicUrl} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"button_box\">\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tclassName=\"add_reply\"\n\t\t\t\t\t\t\ttype=\"picture\"\n\t\t\t\t\t\t\ttheme=\"twoTone\"\n\t\t\t\t\t\t\ttwoToneColor=\"#1890ff\"\n\t\t\t\t\t\t\tstyle={{ fontSize: '24px' }}\n\t\t\t\t\t\t\tonClick={this.showModal} />\n\t\t\t\t\t\t<UploadImage \n\t\t\t\t\t\t\tshowModal={ this.state.visible } \n\t\t\t\t\t\t\thideModal={ this.handleCancel } \n\t\t\t\t\t\t\tboxHeader=\"Upload new picture to reply\"\n\t\t\t\t\t\t\ttopicId={ this.props.topicId}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{repliesList}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Replies;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Avatar, Icon, Popover, Empty } from 'antd';\nimport Replies from './replies';\nimport './index.scss';\nimport ReactPanel from '../emoji';\n\nconst MyIcon = Icon.createFromIconfontCN({\n\tscriptUrl: '/iconfont.js'\n});\n\ninterface getIdProps {\n\tid: string\n}\n\ninterface topicProps extends RouteComponentProps<getIdProps>{\n\t\n}\n\ninterface replies {\n\t_id: string,\n\toriginalPicUrl: string,\n\tcreateBy: any,\n\tname: string,\n\tavatar: number,\n\tcreateAt: string,\n\treplies: Array<any>,\n}\n\ninterface detailState {\n\tid: string,\n\tname: string,\n\tavatar: number,\n\toriginalPicUrl: string,\n\tcreateAt: string,\n\treplies: Array<replies>,\n\treacts: Array<any>,\n\tyourReact: any\n}\n\nclass TopicDetail extends React.Component< topicProps, detailState> {\n\tconstructor(props: topicProps){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tavatar: 1,\n\t\t\toriginalPicUrl: '',\n\t\t\tcreateAt: '',\n\t\t\treplies: [],\n\t\t\treacts: [],\n\t\t\tyourReact: \"\"\n\t\t}\n\t}\n\n\tupdateReacts = (newReact: any) => {\n\t\tlet exist = false;\n\t\tlet updatedReacts = this.state.reacts;\n\t\tfor (let i = 0; i < this.state.reacts.length; i++) {\n\t\t\tlet react = this.state.reacts[i];\n\t\t\tif (react._id === newReact._id) {\n\t\t\t\texist = true;\n\t\t\t\tupdatedReacts[i].emoji = newReact.emoji;\n\t\t\t}\n\t\t}\n\t\tif (exist) {\n\t\t\tthis.setState({\n\t\t\t\treacts: updatedReacts\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState(currentState => ({\n\t\t\t\treacts: [...currentState.reacts, newReact]\n\t\t\t}))\n\t\t}\n\t}\n\t\n\tdeleteReacts = (deleteId: string) => {\n\t\tvar updatedReact = this.state.reacts;\n\t\tfor (let i = 0; i < updatedReact.length; i++) {\n\t\t\tif (updatedReact[i]._id === deleteId) {\n\t\t\t\tupdatedReact.splice(i, 1);\n\t\t\t\tthis.setState({\n\t\t\t\t\treacts: updatedReact\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch(process.env.REACT_APP_API_URL+'/topics/single?id='+ this.props.match.params.id)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconst curTopic = data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: curTopic._id,\n\t\t\t\t\tname: curTopic.createBy.name,\n\t\t\t\t\tavatar: curTopic.createBy.avatar,\n\t\t\t\t\toriginalPicUrl: curTopic.originalPicUrl,\n\t\t\t\t\tcreateAt: curTopic.createAt,\n\t\t\t\t\treplies: curTopic.replies,\n\t\t\t\t\treacts: curTopic.reacts,\n\t\t\t\t\tyourReact: curTopic.yourReact ? curTopic.yourReact : \"\"\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst repliesList = this.state.replies.map( reply => {\n\t\t\treturn (\n\t\t\t\t<Replies\n\t\t\t\t\tkey={reply._id}\n\t\t\t\t\toriginalPicUrl={reply.originalPicUrl}\n\t\t\t\t\tname={reply.createBy.name}\n\t\t\t\t\tavatar={reply.createBy.avatar}\n\t\t\t\t\treplies={reply.replies}\n\t\t\t\t\tcreateAt={reply.createAt}\n\t\t\t\t\ttopicId={reply._id}\n\t\t\t\t>\n\t\t\t\t</Replies>\n\n\t\t\t)\n\t\t})\n\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id=\"topic_detail\">\n\t\t\t\t\t<div id=\"author_info\">\n\t\t\t\t\t\t<Avatar src={'../avatars/' + this.state.avatar + '.png'}/>\n\t\t\t\t\t\t<strong>{this.state.name}</strong>\n\t\t\t\t\t\t<span className=\"date\">posted on {this.state.createAt.substr(0,10)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"main_pic\">\n\t\t\t\t\t\t<img src={this.state.originalPicUrl}/>\n\t\t\t\t\t\t{this.state.reacts.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"reacts_box\">\n\t\t\t\t\t\t\t\t{this.state.reacts.map(react => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={react._id}><MyIcon type={'icon-' + react.emoji} /></span>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"buttons_box\">\n\t\t\t\t\t\t<ReactPanel topicId={this.state.id} yourReact={this.state.yourReact} updateReacts={() => this.updateReacts} deleteReacts={() => this.deleteReacts} />\n\t\t\t\t\t\t<Icon className=\"add_reply\" type=\"picture\" theme=\"twoTone\" twoToneColor=\"#1890ff\" style={{ fontSize: '24px' }} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"replies_list\">\n\t\t\t\t\t<h2>Replies</h2>\n\t\t\t\t\t{repliesList.length == 0 && \n\t\t\t\t\t\t<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"There is no reply yet\" />\n\t\t\t\t\t}\n\t\t\t\t\t{repliesList}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default TopicDetail;","import React from 'react';\nimport { Icon, List, Avatar } from 'antd'; \nimport './index.scss'\n\ninterface boardState {\n    filter: string,\n    userList: Array<any>\n}\n\nclass LeaderBoard extends React.Component<{}, boardState> {\n    state = {\n        filter: 'reacts',\n        userList: []\n    }\n\n    showMostReacts = () => {\n        this.setState({\n            filter: 'reacts'\n        })\n        fetch(process.env.REACT_APP_API_URL +'/users/leaderboard?type=mostReacts')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    showMostTopics = () => {\n        this.setState({\n            filter: 'topics'\n        })\n        fetch(process.env.REACT_APP_API_URL + '/users/leaderboard?type=mostTopics')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    userList: data\n                })\n            })\n    }\n\n    componentDidMount(){\n        this.showMostReacts()\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n                <h3><Icon type=\"unordered-list\" />Leaderboard</h3>\n                <div className=\"filter\">\n                    <button className={this.state.filter === 'reacts' ? 'isActive' : ''} onClick={this.showMostReacts}><Icon type=\"smile\" /> Reacts</button>\n                    <button className={this.state.filter === 'topics' ? 'isActive' : ''} onClick={this.showMostTopics}><Icon type=\"picture\" /> Topics</button>\n                </div>\n                <List\n                    id=\"leaderboard_list\"\n                    dataSource={this.state.userList}\n                    renderItem={(item: any) => (                \n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={<Avatar src={'../avatars/' + item.avatar + '.png'}/>}\n                                title={item.name}\n                                key= {item._id}\n                                description={this.state.filter === 'reacts' ? ('React Times: ' + item.reactTimes) : ('Post Topics: ' + item.topicTimes)}\n                            />\n                        </List.Item>                     \n                    )}>\n\n                </List>\n            </React.Fragment>\n            \n        )\n    }\n}\n\nexport default LeaderBoard;","import React from 'react';\nimport { Layout } from 'antd';\nimport { Route, Switch } from 'react-router';\nimport TopicList from '../topicList';\nimport TopicDetail from '../topicDetail';\nimport LeaderBoard from '../leaderboard';\n\nconst { Sider, Content } = Layout;\n\nclass TopicPanel extends React.Component {\n    render() {\n        return(\n            <Layout>\n                <Content>\n                    <Switch>\n                        <Route path=\"/topics_detail/:id\" component={TopicDetail} />\n                        <Route path=\"/\" exact component={TopicList} />\n                    </Switch>\n                </Content>\n                <Sider className=\"leaderboard\" breakpoint=\"lg\" collapsedWidth=\"0\" reverseArrow={true} ><LeaderBoard /></Sider>\n            </Layout>\n        )\n    }\n}\n\nexport default TopicPanel;","import React from 'react';\nimport Card from '../topicList/card';\nimport './index.scss';\n\ninterface MyPostsState {\n    topics: Array<any>\n}\n\nclass MyPosts extends React.Component<{}, MyPostsState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n        const topicList = this.state.topics.map(topic => {\n            return (\n                <Card\n                    key={topic._id}\n                    smallPicUrl={topic.smallPicUrl}\n                    name={topic.createBy.name}\n                    avatar={topic.createBy.avatar}\n                    createAt={topic.createAt}\n                    topicId={topic._id}\n                    replies={topic.replies}\n                    reacts={topic.reacts}\n                    yourReact={'empty'}\n                />\n            )\n        })\n\n        return ( \n            <React.Fragment>\n                <h2>My Posts</h2>\n                <div id=\"user_topic_list\">{topicList}</div> \n            </React.Fragment> \n        )\n    }\n}\n\nexport default MyPosts;","import React from 'react';\nimport { List, Avatar, Empty, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\nconst MyIcon = Icon.createFromIconfontCN({\n    scriptUrl: '/iconfont.js'\n});\n\ninterface NotificationState {\n    notifications: Array<any>\n}\n\nclass Notification extends React.Component<{}, NotificationState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            notifications: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/notifications/toUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    notifications: data\n                })\n            })\n    }\n\n    render() {\n        if(this.state.notifications.length>0){\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <div id=\"notifications\">\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={this.state.notifications}\n                            renderItem={item => (\n                                <List.Item>\n                                    <List.Item.Meta\n                                        avatar={<Avatar src={'../avatars/' + item.fromUser.avatar + '.png'} />}\n                                        title={'You have a new ' + item.type}\n                                        description={\n                                            <React.Fragment>\n                                                <strong className=\"from\">{item.fromUser.name}</strong>\n                                                <p className=\"text\">{'has reacted to your picture with '}</p>\n                                                <MyIcon type={'icon-' + item.content} />\n                                                <Link to={`/topics_detail/${item.atTopic}`}>Link</Link>\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    </div>\n                </React.Fragment>\n            )\n        }\n        else{\n            return (\n                <React.Fragment>\n                    <h2>Notifications</h2>\n                    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"You have no notifications yet\" />\n                </React.Fragment>\n            ) \n        }\n        \n    }\n}\n\nexport default Notification;","import React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\nimport './index.scss';\n\nclass UserPanelMenu extends React.Component<RouteComponentProps> {\n    \n\n    render() {\n        return (\n            \n            <Menu \n                id=\"user_panel_menu\"\n                defaultSelectedKeys={['/user']}\n                theme=\"light\"\n                mode=\"inline\"\n                selectedKeys={[this.props.location.pathname]}\n            >\n                <Menu.Item key=\"/user\">\n                    <Link to=\"/user\"><Icon type=\"picture\" /><span>My posts</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"/user/notifications\">\n                    <Link to=\"/user/notifications\"><Icon type=\"notification\" /><span>Notifications</span></Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\"><Icon type=\"setting\" /><span>Settings</span></Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default UserPanelMenu;","import React from 'react';\nimport MyPosts from './mypost';\nimport Notification from './notifications';\nimport UserPanelMenu from './menu';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { Route } from 'react-router';\n\nconst { Sider, Content } = Layout;\n\ninterface userPanelState {\n    topics: Array<any>\n}\n\nclass UserPanel extends React.Component<{}, userPanelState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            topics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/topics/fromUser')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    topics: data\n                })\n            })\n    }\n\n\n    render() {\n\n        return(\n            <Layout>\n                <Sider width={240} style={{ background: '#fff' }}>\n                    <Route path=\"/user\" component={UserPanelMenu}></Route>\n                </Sider>\n                <Content>\n                    <div id=\"user_panel\">\n                        <Route path=\"/user\" exact component={MyPosts}/>\n                        <Route path=\"/user/notifications\" component={Notification} />\n                    </div>\n                </Content>\n            </Layout>\n\n\n        )\n    }\n}\n\nexport default UserPanel;","import React from \"react\";\nimport {Button} from 'antd';\nimport './index.scss';\nimport UploadImage from \"./uploadImage\";\n\ninterface IAddTopicState {\n    visible: boolean;\n}\n\nclass AddTopic extends React.PureComponent<{}, IAddTopicState> {\n    upload_props: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visible: false\n          }\n        }\n\n    showModal = () => {\n        this.setState({\n          visible: true\n        });\n      };  \n\n      handleCancel = () => {\n        this.setState({\n          visible: false\n        });\n      };\n  \n      render() {\n        return (\n          <div id=\"add_topic\">\n              <Button type=\"primary\" onClick={ this.showModal }>\n                + Add new topic\n              </Button>\n            <UploadImage \n              showModal={ this.state.visible } \n              hideModal={ this.handleCancel } \n              boxHeader=\"Upload new picture to start new topic\"/>\n          </div>\n        );\n      }\n}\n\nexport default AddTopic;","import React from 'react';\nimport './index.scss';\n\nclass Footer extends React.Component {\n    render() {\n        return(\n            <footer>\n                <div className=\"footer-logo\">\n                    <img src=\"/images/logo-footer.png\" />\n                </div>\n                <ul>\n                    <li><a>How to use</a></li>\n                    <li><a>About us</a></li>\n                </ul>\n            </footer>\n        ) \n    }\n}\n\nexport default Footer;","import React from 'react';\nimport io from 'socket.io-client';\nimport Header from './header';\nimport TopicPanel from './topic';\nimport UserPanel from './user';\nimport AddTopic from './addTopic';\nimport Footer from './footer';\nimport { Affix, BackTop, Icon} from 'antd';\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Switch }from 'react-router-dom';\n\ninterface currentUser {\n\tuser: {\n\t\tname: string,\n\t\temail: string,\n\t\tid: string,\n\t\tavatar: string\n\t},\n\tisLogin?: boolean\n}\n\n\nclass App extends React.Component<{}, currentUser> {\n\tstate = {\n\t\tuser: {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tid: '',\n\t\t\tavatar:''\n\t\t},\n\t\tisLogin: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updataFetch();\n\t\t// var socket = io();\n\t\t// socket.on('connection', function (socket: any) {\n\t\t// \tconsole.log('a user connected');\n\t\t// });\n\t\t// socket.emit('mssg', 'biubiubiu')\n\t}\n\n\tupdataFetch=()=>{\n\t\tfetch(process.env.REACT_APP_API_URL+'/users')\n\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.status === 'success'){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\tname: data.user.name,\n\t\t\t\t\t\t\temail: data.user.email,\n\t\t\t\t\t\t\tid: data.user.id,\n\t\t\t\t\t\t\tavatar: data.user.avatar,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLogin: true\n\t\t\t\t\t})\n\t\t\t\t}else{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLogin: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\" id='App'>\n\t\t\t\t\t<Affix>\n\t\t\t\t\t\t<Header userName={this.state.user.name} isLogin={this.state.isLogin} avatar={this.state.user.avatar}></Header>\n\t\t\t\t\t</Affix>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/user\" component={UserPanel} />\n\t\t\t\t\t\t<Route path=\"/\" component={TopicPanel} />\n\t\t\t\t\t</Switch>\t\t\t\t\t\n\t\t\t\t\t<AddTopic />\n\t\t\t\t\t<BackTop><div className=\"ant-back-top-inner\"><Icon type=\"arrow-up\" /></div></BackTop>\n\t\t\t\t\t<Footer/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n\n}\n\n export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}